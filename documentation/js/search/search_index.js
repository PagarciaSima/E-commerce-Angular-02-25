var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.219,1,0.762]],["body/components/AdminComponent.html",[0,0.358,1,1.244,2,0.945,3,0.115,4,0.1,5,0.648,6,0.681,7,0.648,8,0.648,9,0.086,10,2.055,11,0.692,12,1.896,13,2.171,14,3.637,15,4.25,16,3.675,17,4.448,18,2.774,19,1.05,20,3.675,21,3.911,22,5.677,23,3.595,24,3.675,25,3.476,26,1.826,27,2.047,28,0.648,29,1.93,30,1.835,31,1.045,32,4.471,33,0.993,34,3.675,35,0.145,36,0.437,37,4.636,38,4.636,39,5.407,40,4.893,41,3.414,42,3.376,43,3.371,44,0.898,45,2.164,46,1.742,47,4.299,48,5.014,49,0.616,50,1.83,51,3.447,52,1.366,53,2.396,54,2.806,55,3.151,56,0.585,57,0.02,58,0.754,59,0.37,60,0.528,61,3.51,62,2.549,63,2.549,64,2.806,65,3.675,66,2.396,67,3.151,68,3.151,69,3.151,70,2.806,71,1.422,72,3.151,73,2.641,74,1.092,75,1.888,76,2.396,77,4.299,78,2.715,79,4.358,80,3.31,81,3.462,82,5.014,83,2.396,84,5.595,85,3.675,86,5.094,87,1.379,88,1.379,89,4.799,90,5.389,91,2.396,92,3.675,93,2.396,94,2.396,95,3.151,96,1.501,97,3.151,98,1.092,99,2.343,100,1.422,101,2.396,102,2.806,103,3.675,104,4.25,105,2.396,106,4.299,107,2.396,108,2.396,109,1.782,110,0.591,111,0.382,112,0.835,113,1.83,114,1.662,115,1.83,116,0.176,117,0.62,118,0.793,119,1.83,120,1.662,121,0.927,122,2.055,123,2.055,124,3.151,125,2.055,126,3.151,127,2.055,128,2.396,129,2.396,130,2.396,131,2.396,132,2.055,133,2.396,134,2.055,135,2.055,136,3.834,137,2.055,138,3.834,139,3.151,140,4.299,141,2.549,142,3.834,143,1.68,144,3.834,145,3.1,146,2.055,147,2.055,148,2.055,149,3.151,150,3.151,151,2.396,152,1.422,153,2.396,154,3.675,155,1.662,156,2.396,157,3.675,158,3.675,159,3.151,160,3.151,161,2.806,162,1.83,163,2.055,164,2.055,165,0.993,166,0.993,167,0.648,168,1.355,169,0.648,170,0.648,171,0.528,172,0.648,173,0.502,174,0.616,175,0.993,176,0.502,177,0.648,178,0.528,179,0.648,180,0.502,181,0.648,182,0.528,183,0.648,184,0.502,185,0.648,186,0.502,187,0.648,188,0.502,189,0.993,190,0.502,191,0.648,192,0.528,193,0.648,194,0.502,195,0.502,196,0.49,197,0.556,198,0.993,199,0.502,200,0.648,201,0.502,202,0.616,203,0.502,204,0.528,205,0.648,206,0.648,207,0.502,208,0.648,209,0.528,210,0.648,211,0.502,212,0.404,213,0.648,214,0.648,215,0.01,216,0.01]],["title/components/AppComponent.html",[0,0.219,171,0.802]],["body/components/AppComponent.html",[0,0.382,1,0.95,2,1.48,3,0.217,4,0.189,5,1.226,6,1.289,7,1.226,8,1.226,9,0.162,19,1.206,28,1.226,29,2.062,30,1.96,31,1.637,33,1.556,35,0.274,36,0.502,52,0.95,57,0.02,58,0.972,59,0.274,87,1.053,88,1.053,98,1.108,110,0.496,111,0.723,116,0.217,117,0.765,165,1.556,166,1.556,167,1.226,168,1.799,169,1.226,170,1.226,171,1.468,172,1.226,173,0.95,174,1.166,175,1.556,176,0.95,177,1.226,178,1,179,1.226,180,0.95,181,1.226,182,1,183,1.226,184,0.95,185,1.226,186,0.95,187,1.226,188,0.95,189,1.556,190,0.95,191,1.226,192,1,193,1.226,194,0.95,195,0.95,196,0.767,197,1.053,198,1.556,199,0.95,200,1.226,201,0.95,202,1.166,203,0.95,204,1,205,1.226,206,1.226,207,0.95,208,1.226,209,1,210,1.226,211,0.95,212,0.765,213,1.226,214,1.226,215,0.015,216,0.015,217,3.889,218,2.971,219,6.327,220,5.759,221,6.327,222,0.723,223,4.938,224,4.536]],["title/modules/AppModule.html",[225,2.522,226,2.522]],["body/modules/AppModule.html",[1,1.345,3,0.159,4,0.139,9,0.119,25,2.313,30,0.857,57,0.02,96,1.362,98,0.815,110,0.824,111,0.532,112,1.162,116,0.159,117,0.563,171,1.561,173,1.345,176,1.345,178,1.417,180,1.345,182,1.417,184,1.345,186,1.345,188,1.345,190,1.345,192,1.417,194,1.345,195,1.345,196,0.625,197,1.088,199,1.345,201,1.345,204,1.417,207,1.345,209,1.417,211,1.345,215,0.012,216,0.012,225,2.313,226,5.319,227,2.126,228,2.313,229,4.647,230,4.138,231,4.138,232,2.547,233,2.86,234,2.86,235,2.86,236,2.86,237,2.86,238,4.095,239,4.095,240,4.019,241,2.86,242,1.97,243,3.335,244,4.019,245,4.019,246,4.687,247,3.579,248,2.126,249,3.335,250,3.335,251,2.86,252,2.86,253,2.86,254,2.86,255,3.335,256,2.86,257,4.687,258,1.97,259,2.86,260,3.335,261,1.224,262,1.224,263,4.687,264,3.335,265,4.019,266,3.335,267,4.687,268,4.687,269,1.837,270,2.86,271,2.313,272,4.019,273,2.86,274,2.313,275,4.019,276,2.86,277,2.313,278,2.86,279,2.313,280,4.019,281,2.313,282,2.86,283,2.86,284,3.335,285,2.547,286,3.335,287,3.335,288,2.86,289,2.313,290,2.86,291,2.86,292,3.335,293,2.547,294,3.335,295,4.687,296,2.86,297,3.335,298,3.335,299,3.335,300,3.335]],["title/modules/AppRoutingModule.html",[225,2.522,238,2.319]],["body/modules/AppRoutingModule.html",[0,0.442,1,1.054,3,0.177,4,0.154,9,0.132,14,2.358,18,2.709,57,0.02,73,2.186,80,1.909,110,0.818,111,0.59,112,1.289,116,0.177,117,0.624,121,1.431,173,1.054,176,1.054,180,1.054,184,1.054,186,1.054,188,1.054,190,1.054,194,1.054,195,1.054,196,0.857,197,1.169,199,1.054,201,1.199,207,1.054,211,1.054,212,0.624,215,0.013,216,0.013,227,2.358,232,2.825,238,3.21,244,3.172,245,4.318,251,3.172,252,3.172,253,3.172,254,3.172,256,3.172,259,3.172,265,4.318,270,3.172,271,2.565,272,4.318,273,3.172,274,2.565,275,4.318,276,3.172,277,2.565,278,3.172,279,2.565,280,3.172,281,2.565,282,3.172,283,3.172,288,3.172,289,2.565,290,3.172,291,3.172,301,3.699,302,3.699,303,3.649,304,5.458,305,3.699,306,4.372,307,3.699,308,3.845,309,3.699,310,3.845,311,5.036,312,3.699,313,3.845,314,3.699,315,7.331,316,7.083,317,4.138,318,4.693,319,6.429,320,5.036,321,4.909,322,2.038,323,2.565,324,3.699,325,3.699,326,3.172,327,3.699,328,3.172,329,3.172,330,2.038,331,3.699,332,3.699,333,2.825,334,3.699]],["title/interceptors/AuthInterceptor.html",[239,2.319,335,2.778]],["body/interceptors/AuthInterceptor.html",[3,0.143,4,0.125,9,0.107,11,1.053,26,1.768,35,0.18,44,1.058,46,1.95,49,1.113,52,1.17,56,1.366,57,0.02,58,0.943,59,0.337,60,1.233,64,3.306,74,1.512,96,2.081,100,1.675,110,0.698,111,0.476,112,1.039,116,0.207,117,0.73,118,1.964,121,2.162,203,0.625,215,0.011,216,0.011,218,1.54,222,1.043,239,3.248,261,1.095,262,1.095,269,1.644,322,2.385,323,3.002,335,3.306,336,2.984,337,2.559,338,5.295,339,2.234,340,3.657,341,5.59,342,1.589,343,4.33,344,4.33,345,5.091,346,5.164,347,5.59,348,4.793,349,4.33,350,4.793,351,4.793,352,4.33,353,3.563,354,6.541,355,3.306,356,1.869,357,3.713,358,2.558,359,4.793,360,4.369,361,4.33,362,5.095,363,4.33,364,4.33,365,4.33,366,2.559,367,3.002,368,2.756,369,2.47,370,2.984,371,4.33,372,6.772,373,2.984,374,4.33,375,4.893,376,3.713,377,5.089,378,4.33,379,4.33,380,4.33,381,2.528,382,5.935,383,2.984,384,4.33,385,4.33,386,3.002,387,4.33,388,4.33,389,4.33,390,3.079,391,4.33,392,3.713,393,4.33,394,2.984,395,3.002,396,3.002,397,2.471,398,2.76,399,4.33,400,2.984,401,5.095,402,2.559,403,4.369,404,1.447,405,2.984,406,1.902,407,1.589,408,2.984,409,2.559,410,1.644,411,2.559,412,3.306,413,2.234,414,2.559,415,4.33,416,2.984,417,2.984,418,2.395,419,2.984,420,2.069,421,2.199,422,2.984,423,2.984,424,4.33,425,2.984,426,2.984,427,2.984,428,2.559,429,2.984,430,2.559,431,4.369,432,2.984,433,2.984,434,2.984,435,2.559,436,2.984,437,2.984,438,2.984,439,2.984,440,4.369,441,2.984,442,5.095,443,2.984,444,2.984,445,2.984,446,2.984,447,2.984,448,2.984,449,2.559,450,1.54,451,2.984,452,2.559,453,2.559,454,2.984,455,2.984,456,2.559,457,2.559,458,2.984,459,2.984,460,2.984,461,2.984,462,2.559,463,2.984,464,2.069,465,2.559,466,2.984,467,2.984]],["title/components/BuyProductComponent.html",[0,0.219,173,0.762]],["body/components/BuyProductComponent.html",[0,0.325,1,0.387,2,0.77,3,0.088,4,0.077,5,0.5,6,0.526,7,0.5,8,0.5,9,0.066,11,1.013,12,1.546,13,1.771,18,1.68,19,1.371,23,2.392,26,1.224,27,1.542,28,0.5,29,1.856,30,1.764,31,0.852,33,0.81,35,0.112,36,0.261,44,0.732,45,1.874,46,1.529,49,0.77,51,3.57,52,1.273,54,2.288,55,2.57,56,1.166,57,0.02,58,1.063,59,0.338,60,1.052,61,1.771,62,2.078,63,2.078,64,2.288,67,2.57,68,2.57,69,2.57,70,2.288,71,1.68,73,2.819,74,1.54,75,1.437,78,1.37,87,0.877,88,0.877,96,0.755,98,0.452,100,1.68,109,1.453,110,0.612,111,0.295,112,0.644,116,0.088,117,0.312,118,1.915,121,1.846,143,1.726,145,2.078,152,1.976,155,2.078,165,0.81,166,0.81,167,0.5,168,1.174,169,0.5,170,0.5,171,0.408,172,0.5,173,1.069,174,1.439,175,0.81,176,0.387,177,0.5,178,0.408,179,0.5,180,0.387,181,0.5,182,0.408,183,0.5,184,0.387,185,0.5,186,0.387,187,0.5,188,0.387,189,0.81,190,0.387,191,0.5,192,0.408,193,0.5,194,0.387,195,0.387,196,0.941,197,0.43,198,0.81,199,0.387,200,0.5,201,0.387,202,0.475,203,0.909,204,0.408,205,0.5,206,0.5,207,0.387,208,0.5,209,0.408,210,0.5,211,0.387,212,0.637,213,0.5,214,0.5,215,0.008,216,0.008,222,0.602,258,1.093,261,0.679,262,0.679,279,4.299,329,3.239,339,1.546,342,1.874,355,2.288,358,2.566,368,0.799,369,2.239,381,0.755,390,2.392,397,1.453,402,2.57,403,2.57,404,0.897,413,0.955,418,2.081,420,1.283,421,0.799,450,1.546,468,5.315,469,1.413,470,2.997,471,2.57,472,2.078,473,2.997,474,2.016,475,2.997,476,4.343,477,4.38,478,2.997,479,2.57,480,4.122,481,3.777,482,2.57,483,3.239,484,3.239,485,5.108,486,2.997,487,2.997,488,2.997,489,2.997,490,4.343,491,1.85,492,4.013,493,2.57,494,1.546,495,2.57,496,5.483,497,3.9,498,1.85,499,4.343,500,2.997,501,3.662,502,3.018,503,2.059,504,3.042,505,2.997,506,4.772,507,1.85,508,2.814,509,3.316,510,2.833,511,2.086,512,2.57,513,2.997,514,2.997,515,1.85,516,4.882,517,1.85,518,2.57,519,2.997,520,1.85,521,1.91,522,2.997,523,3.309,524,1.85,525,2.57,526,2.997,527,2.57,528,2.997,529,2.078,530,1.37,531,1.85,532,2.768,533,1.91,534,2.997,535,1.85,536,2.288,537,1.91,538,2.997,539,2.408,540,2.288,541,2.288,542,2.288,543,2.288,544,2.288,545,1.85,546,2.57,547,2.997,548,1.85,549,1.019,550,1.586,551,1.179,552,1.85,553,1.85,554,0.845,555,1.283,556,1.85,557,1.179,558,1.283,559,1.283,560,1.85,561,2.997,562,1.85,563,1.85,564,1.85,565,2.57,566,3.239,567,1.85,568,1.85,569,1.85,570,3.777,571,1.85,572,1.85,573,1.85,574,1.093,575,1.85,576,1.85,577,1.413,578,1.413,579,1.453,580,1.283,581,0.955,582,1.179,583,1.413,584,1.85,585,3.177,586,3.729,587,2.997,588,1.85,589,1.85,590,1.85,591,1.85,592,1.85,593,0.897,594,1.586,595,2.997,596,3.777,597,2.997,598,3.777,599,2.997,600,1.85,601,1.85,602,1.85,603,3.777,604,1.85,605,1.85,606,4.539,607,3.643,608,1.85,609,1.85,610,1.586,611,1.85,612,1.85,613,4.802,614,3.085,615,4.343,616,3.9,617,2.566,618,3.316,619,3.316,620,4.276,621,4.343,622,4.343,623,4.343,624,3.724,625,4.343,626,2.288,627,1.91,628,4.343]],["title/interfaces/Cart.html",[330,2.004,629,0.485]],["body/interfaces/Cart.html",[3,0.267,4,0.233,9,0.2,35,0.337,36,0.57,57,0.019,59,0.394,60,1.441,110,0.61,116,0.267,196,0.97,215,0.017,216,0.017,330,3.6,503,1.97,629,0.744,630,1.755,631,4.785,632,7.147,633,7.147]],["title/components/CartComponent.html",[0,0.219,176,0.762]],["body/components/CartComponent.html",[0,0.346,1,0.455,2,0.876,3,0.104,4,0.091,5,0.587,6,0.618,7,0.587,8,0.587,9,0.078,11,1.117,19,0.713,26,1.391,27,1.716,28,0.587,29,1.903,30,1.81,31,0.968,33,0.921,35,0.312,36,0.297,44,0.832,45,2.053,46,1.194,49,1.223,52,1.405,56,1.262,57,0.02,58,1.03,59,0.39,60,1.14,71,0.841,74,1.4,75,2.019,78,1.92,87,1.331,88,1.331,98,0.531,100,0.841,109,2.307,110,0.565,111,0.346,112,0.757,116,0.104,117,0.367,118,1.814,120,1.507,143,1.557,152,2.502,165,0.921,166,0.921,167,0.587,168,1.286,169,0.587,170,0.587,171,0.479,172,0.587,173,0.455,174,0.558,175,0.921,176,0.996,177,0.587,178,0.479,179,0.587,180,0.455,181,0.587,182,0.479,183,0.587,184,0.455,185,0.587,186,0.455,187,0.587,188,0.455,189,0.921,190,0.455,191,0.587,192,0.479,193,0.587,194,0.455,195,0.455,196,0.791,197,0.505,198,0.921,199,0.455,200,0.587,201,0.455,202,0.558,203,0.455,204,0.479,205,1.397,206,0.587,207,0.455,208,0.587,209,0.479,210,0.587,211,0.455,212,0.367,213,0.587,214,0.587,215,0.009,216,0.009,222,0.824,242,2.013,261,0.797,262,1.542,330,4.013,339,1.758,342,2.177,356,3.007,368,2.695,369,2.217,381,1.943,395,2.363,396,2.363,421,1.47,450,2.168,474,1.91,494,2.455,495,2.921,501,2.811,503,2.06,508,2.621,511,2.34,518,2.921,533,2.172,554,1.557,579,1.054,581,1.758,585,2.811,586,3.299,593,1.054,634,1.863,635,2.921,636,2.921,637,2.363,638,4.202,639,3.407,640,4.202,641,2.679,642,3.783,643,2.679,644,3.239,645,2.679,646,2.679,647,2.172,648,4.701,649,2.363,650,3.407,651,2.679,652,3.407,653,2.173,654,2.712,655,3.407,656,2.172,657,2.601,658,2.921,659,2.921,660,2.601,661,2.172,662,2.173,663,2.172,664,2.847,665,2.679,666,2.601,667,2.363,668,2.173,669,2.172,670,3.407,671,2.173,672,2.363,673,3.407,674,3.603,675,2.173,676,2.172,677,2.173,678,3.294,679,5.456,680,2.173,681,1.659,682,1.385,683,1.92,684,1.385,685,1.121,686,1.507,687,2.173,688,3.407,689,3.407,690,2.173,691,2.172,692,1.758,693,2.363,694,2.921,695,2.172,696,2.921,697,2.173,698,2.173,699,2.173,700,2.013,701,2.363,702,2.173,703,2.363,704,2.363,705,2.173,706,2.601,707,2.173,708,2.173,709,1.121,710,4.202,711,3.294,712,3.407,713,2.172,714,3.033,715,2.172,716,2.172,717,2.172,718,2.172,719,2.013,720,2.172,721,2.013,722,2.172,723,2.172,724,2.172,725,2.172,726,2.483,727,1.863,728,2.173,729,2.173,730,1.863,731,1.863,732,2.013,733,1.877,734,1.863,735,1.863,736,1.659,737,2.173,738,1.863,739,2.168,740,3.407,741,2.363,742,2.921,743,3.407,744,3.407,745,3.407,746,3.407,747,3.407,748,3.407,749,3.407,750,3.407,751,2.172,752,1.863,753,1.507,754,1.284,755,1.507,756,1.863]],["title/injectables/DashboardService.html",[407,1.335,757,2.522]],["body/injectables/DashboardService.html",[3,0.176,4,0.154,9,0.132,11,0.694,14,4.093,15,3.484,17,4.908,18,2.764,19,1.285,21,3.626,22,5.682,23,3.381,35,0.222,36,0.438,42,2.031,43,2.178,44,1.227,49,0.947,52,1.42,56,0.901,57,0.02,58,0.622,59,0.303,60,0.813,71,2.738,74,1.729,78,3.028,79,4.908,80,3.561,81,3.537,87,0.856,88,0.856,106,5.682,110,0.741,111,0.588,116,0.176,117,0.622,119,2.815,196,0.491,215,0.013,216,0.013,218,1.902,222,0.801,269,2.031,338,3.836,390,4.12,404,1.788,407,1.843,410,2.031,418,2.484,472,3.484,494,2.592,503,1.428,530,3.234,656,3.202,683,2.804,757,3.484,758,2.031,759,3.161,760,3.202,761,3.376,762,6.137,763,6.137,764,6.137,765,6.137,766,6.137,767,3.686,768,3.912,769,5.024,770,3.686,771,4.256,772,5.506,773,3.836,774,3.686,775,5.024,776,3.686,777,3.686,778,3.686,779,5.024,780,5.024,781,3.202,782,3.686,783,2.031,784,2.35,785,2.35,786,3.686,787,3.161,788,3.686,789,5.024,790,3.686,791,3.686,792,3.686]],["title/interfaces/DataPayment.html",[582,2.319,629,0.485]],["body/interfaces/DataPayment.html",[3,0.261,4,0.228,9,0.196,11,1.337,35,0.33,36,0.563,57,0.019,59,0.428,116,0.261,215,0.017,216,0.017,222,1.212,504,4.525,582,4.115,583,5.42,585,4.194,629,0.728,630,1.718,793,4.686,794,4.686]],["title/interfaces/FileHandle.html",[629,0.485,795,2.778]],["body/interfaces/FileHandle.html",[3,0.266,4,0.232,9,0.268,35,0.336,36,0.57,57,0.019,59,0.394,110,0.609,116,0.266,215,0.017,216,0.017,247,4.254,248,3.551,386,3.863,532,4.553,629,0.742,630,1.752,795,4.985,796,4.777,797,4.254,798,7.142]],["title/injectables/FileService.html",[407,1.335,799,2.522]],["body/injectables/FileService.html",[3,0.201,4,0.175,9,0.267,11,0.791,35,0.254,36,0.478,44,1.34,46,1.195,49,1.409,52,1.405,56,1.027,57,0.02,58,0.709,59,0.331,60,0.927,74,1.681,87,0.976,88,0.976,110,0.707,111,0.67,116,0.201,117,0.709,215,0.014,216,0.014,218,2.169,222,0.874,269,2.315,339,2.829,390,4.069,404,2.038,407,2.012,410,2.315,418,2.361,494,2.829,530,3.144,758,2.315,761,3.605,768,4.385,781,3.495,783,2.315,784,2.679,799,3.802,800,3.604,801,6.093,802,6.16,803,5.899,804,5.899,805,6.468,806,6.468,807,6.468,808,2.914,809,5.483,810,4.203,811,6.3,812,4.203,813,4.203,814,4.66,815,4.203,816,5.233,817,5.233,818,4.203,819,4.203]],["title/components/FooterComponent.html",[0,0.219,178,0.802]],["body/components/FooterComponent.html",[0,0.406,1,0.886,2,1.415,3,0.202,4,0.177,5,1.144,6,1.203,7,1.144,8,1.144,9,0.151,11,0.797,12,2.841,19,1.153,28,1.144,29,2.05,30,1.95,31,1.565,33,1.488,35,0.255,36,0.481,52,0.886,57,0.02,58,0.929,59,0.255,87,0.982,88,0.982,98,1.034,110,0.462,111,0.675,116,0.202,117,0.714,165,1.488,166,1.488,167,1.144,168,1.753,169,1.144,170,1.144,171,0.933,172,1.144,173,0.886,174,1.087,175,1.488,176,0.886,177,1.144,178,1.43,179,1.144,180,0.886,181,1.144,182,0.933,183,1.144,184,0.886,185,1.144,186,0.886,187,1.144,188,0.886,189,1.488,190,0.886,191,1.144,192,0.933,193,1.144,194,0.886,195,0.886,196,0.734,197,0.982,198,1.488,199,0.886,200,1.144,201,0.886,202,1.087,203,1.282,204,0.933,205,1.144,206,1.144,207,0.886,208,1.144,209,0.933,210,1.144,211,0.886,212,0.714,213,1.144,214,1.144,215,0.014,216,0.014,503,1.565,521,3.51,664,3.034,685,2.841,820,3.628,821,5.507,822,6.484,823,4.722,824,3.819,825,5.507,826,6.484,827,5.507,828,5.507,829,6.122,830,5.507,831,6.723,832,5.507,833,4.231,834,5.507,835,4.231,836,5.507,837,4.722,838,5.507]],["title/components/ForbiddenComponent.html",[0,0.219,180,0.762]],["body/components/ForbiddenComponent.html",[0,0.413,1,0.935,2,1.465,3,0.213,4,0.186,5,1.207,6,1.269,7,1.207,8,1.207,9,0.16,11,0.841,19,1.194,28,1.207,29,2.059,30,1.958,31,1.621,33,1.541,57,0.02,58,0.962,63,3.953,98,1.091,110,0.488,111,0.712,116,0.213,117,0.753,165,1.541,166,1.541,167,1.207,168,1.789,169,1.207,170,1.207,171,0.985,172,1.207,173,0.935,174,1.148,175,1.541,176,0.935,177,1.207,178,0.985,179,1.207,180,1.385,181,1.207,182,0.985,183,1.207,184,0.935,185,1.207,186,0.935,187,1.207,188,0.935,189,1.541,190,0.935,191,1.207,192,0.985,193,1.207,194,0.935,195,0.935,196,0.76,197,1.037,198,1.541,199,0.935,200,1.207,201,0.935,202,1.148,203,0.935,204,0.985,205,1.207,206,1.207,207,0.935,208,1.207,209,0.985,210,1.207,211,0.935,212,1.06,213,1.207,214,1.207,215,0.015,216,0.015,323,4.589,356,2.856,357,4.889,685,2.942,839,3.829,840,4.889,841,5.701,842,6.281,843,5.701,844,3.953]],["title/components/HeaderComponent.html",[0,0.219,182,0.802]],["body/components/HeaderComponent.html",[0,0.397,1,0.69,2,1.195,3,0.158,4,0.138,5,0.891,6,0.937,7,0.891,8,0.891,9,0.118,11,0.621,12,2.399,13,2.747,14,3.728,18,1.799,19,0.973,23,2.561,28,0.891,29,2.004,30,1.906,31,1.322,33,1.257,35,0.199,44,1.429,46,1.322,49,1.195,52,1.291,56,0.805,57,0.02,58,0.909,59,0.199,60,0.727,62,3.224,74,1.607,75,1.091,80,3.018,81,2.561,96,2.613,98,0.805,100,2.476,102,3.55,110,0.589,111,0.526,112,1.148,116,0.158,117,0.556,165,1.257,166,1.257,167,0.891,168,1.581,169,0.891,170,0.891,171,0.727,172,0.891,173,0.69,174,0.847,175,1.257,176,0.69,177,0.891,178,0.727,179,0.891,180,0.69,181,0.891,182,1.29,183,0.891,184,0.69,185,0.891,186,0.69,187,0.891,188,0.69,189,1.257,190,0.69,191,0.891,192,0.727,193,0.891,194,0.69,195,0.69,196,0.779,197,0.765,198,1.257,199,0.69,200,0.891,201,0.69,202,1.384,203,1.128,204,0.727,205,0.891,206,0.891,207,0.69,208,1.456,209,0.727,210,0.891,211,0.69,212,1.247,213,0.891,214,0.891,215,0.012,216,0.012,242,2.747,317,2.747,322,3.222,330,2.561,340,3.781,351,5.015,353,4.079,356,2.007,366,2.827,367,3.103,368,2.838,386,3.224,396,3.224,397,3.103,398,4.079,406,2.101,418,2.084,430,2.827,431,2.827,637,3.224,660,3.55,692,2.399,845,2.827,846,3.224,847,4.649,848,6.716,849,5.386,850,4.649,851,4.503,852,5.015,853,5.015,854,4.466,855,3.297,856,3.297,857,5.128,858,5.849,859,3.297,860,3.297,861,5.849,862,3.297,863,3.987,864,4.649,865,4.649,866,2.101,867,3.297,868,3.297,869,2.827,870,3.987]],["title/components/HomeComponent.html",[0,0.219,184,0.762]],["body/components/HomeComponent.html",[0,0.307,1,0.441,2,0.854,3,0.101,4,0.088,5,0.569,6,0.599,7,0.569,8,0.569,9,0.075,11,1.067,12,1.715,13,1.964,18,1.286,19,0.696,21,2.433,23,3.707,26,1.357,27,1.682,28,0.569,29,1.895,30,1.801,31,0.945,33,0.899,35,0.307,36,0.29,44,0.812,45,2.018,46,1.171,49,0.854,52,1.38,56,1.244,57,0.02,58,1.019,59,0.387,60,1.123,71,1.286,74,1.384,75,1.942,78,2.137,87,1.315,88,1.315,98,0.515,99,1.343,109,2.847,110,0.556,111,0.336,112,0.734,116,0.101,117,0.355,118,1.363,120,1.461,143,1.519,152,2.482,155,2.305,162,1.608,165,0.899,166,0.899,167,0.569,168,1.264,169,0.569,170,0.569,171,0.465,172,0.569,173,0.441,174,0.541,175,0.899,176,0.441,177,0.569,178,0.465,179,0.569,180,0.441,181,0.569,182,0.465,183,0.569,184,0.979,185,0.569,186,0.441,187,0.569,188,0.441,189,0.899,190,0.441,191,0.569,192,0.465,193,0.569,194,0.441,195,0.441,196,0.918,197,0.956,198,0.899,199,0.441,200,0.569,201,0.441,202,0.541,203,0.862,204,0.465,205,1.706,206,0.569,207,0.441,208,0.569,209,0.465,210,0.569,211,0.441,212,0.561,213,0.569,214,0.569,215,0.011,216,0.009,222,0.746,261,0.773,262,0.773,326,2.85,342,1.868,356,3.099,368,2.445,369,2.191,381,1.682,395,1.461,421,1.435,450,1.715,474,1.773,501,2.763,502,1.244,503,2.082,508,2.576,510,0.963,511,0.86,530,1.519,533,1.343,551,1.343,554,2.326,579,1.021,581,1.087,585,3.196,586,3.752,593,1.021,606,2.538,607,3.571,617,2.433,637,2.305,641,2.625,642,3.61,643,2.625,644,2.763,645,2.625,646,2.625,647,2.119,651,2.625,654,2.472,660,3.144,661,2.119,663,2.119,664,2.98,665,2.119,667,2.305,669,1.343,676,2.981,678,3.61,681,1.608,682,1.343,683,2.326,684,2.119,685,2.413,691,1.343,692,1.087,695,2.119,700,3.196,701,2.305,703,3.243,704,2.305,706,2.538,709,1.087,711,2.625,713,2.119,714,2.981,715,2.119,716,2.119,717,2.119,718,2.119,719,1.964,720,2.119,721,1.964,722,2.119,723,2.119,724,2.119,725,2.119,726,1.964,732,1.244,733,1.16,751,2.119,753,2.856,754,3.57,755,2.305,870,4.639,871,1.806,872,2.85,873,4.118,874,3.324,875,2.85,876,2.85,877,1.244,878,3.324,879,2.106,880,2.85,881,2.106,882,2.856,883,1.964,884,2.106,885,2.106,886,2.85,887,2.106,888,1.806,889,2.106,890,2.106,891,1.461,892,1.608,893,2.106,894,2.106,895,2.106,896,2.106,897,2.106,898,2.106,899,2.106,900,2.106,901,1.806,902,1.806,903,1.806,904,2.85,905,3.324,906,2.106,907,3.324,908,2.305,909,3.324,910,3.324,911,3.531,912,3.324,913,2.85,914,4.01,915,2.85,916,2.85,917,2.305,918,2.106,919,2.106,920,2.85,921,2.85,922,2.106,923,1.806,924,2.85,925,2.85,926,2.85,927,2.85,928,2.85,929,2.106,930,2.106,931,2.106,932,2.106,933,2.106,934,2.106,935,2.106,936,3.144,937,2.106,938,2.85,939,4.118,940,4.118,941,4.118,942,4.118,943,3.324,944,2.106,945,2.106,946,2.106]],["title/interfaces/Image.html",[629,0.485,947,1.877]],["body/interfaces/Image.html",[3,0.257,4,0.224,9,0.192,35,0.324,36,0.558,57,0.02,58,1.191,59,0.452,116,0.257,215,0.017,216,0.017,222,1.21,503,1.939,511,2.882,629,0.716,630,1.689,908,3.725,947,3.297,948,4.606,949,5.39,950,5.39]],["title/injectables/ImageServiceService.html",[407,1.335,951,2.522]],["body/injectables/ImageServiceService.html",[3,0.174,4,0.152,9,0.255,11,1.205,35,0.22,36,0.435,44,1.219,46,1.037,49,1.282,52,1.383,56,1.563,57,0.02,58,1.079,59,0.399,60,1.411,71,2.364,74,1.682,87,0.847,88,0.847,109,2.419,110,0.699,111,0.582,116,0.174,117,0.615,118,2.022,121,1.411,196,0.814,203,0.764,215,0.013,216,0.013,218,1.882,222,0.974,269,2.01,339,2.574,390,4.065,404,1.769,407,1.83,410,2.01,418,2.364,474,1.737,494,2.574,503,1.985,509,3.809,510,2.279,511,2.884,530,3.019,649,3.459,656,3.179,672,3.459,683,2.279,758,2.01,760,3.179,761,3.358,768,4.211,781,3.179,783,2.01,784,2.325,808,2.53,816,3.128,817,3.128,908,4.237,947,3.833,951,3.459,952,3.128,953,4.277,954,3.459,955,4.988,956,4.277,957,5.044,958,4.988,959,4.988,960,4.988,961,4.988,962,4.988,963,4.988,964,3.648,965,4.277,966,4.988,967,4.277,968,4.988,969,4.988,970,3.648,971,4.988,972,4.988,973,4.988,974,4.988,975,3.648,976,4.988,977,4.988,978,3.648,979,4.988,980,3.809,981,4.277,982,4.988,983,3.648,984,4.874,985,3.648,986,3.648,987,3.648,988,3.648,989,3.648,990,3.128]],["title/components/LoginComponent.html",[0,0.219,186,0.762]],["body/components/LoginComponent.html",[0,0.367,1,0.667,2,1.166,3,0.152,4,0.133,5,0.861,6,0.906,7,0.861,8,0.861,9,0.114,11,0.855,12,2.342,19,0.95,27,1.301,28,0.861,29,1.997,30,1.899,31,1.29,33,1.227,35,0.192,36,0.396,44,1.109,46,1.637,49,1.166,52,1.206,56,1.109,57,0.02,58,0.972,59,0.348,60,1.001,74,0.779,75,1.054,87,1.054,88,1.054,98,0.779,110,0.692,111,0.508,112,1.11,116,0.152,117,0.538,118,1.054,121,1.233,165,1.227,166,1.227,167,0.861,168,1.557,169,0.861,170,0.861,171,0.703,172,0.861,173,0.667,174,0.819,175,1.227,176,0.667,177,0.861,178,0.703,179,0.861,180,0.667,181,0.861,182,0.703,183,0.861,184,0.667,185,0.861,186,1.206,187,0.861,188,0.667,189,1.227,190,0.667,191,0.861,192,0.703,193,0.861,194,0.667,195,0.667,196,0.605,197,0.74,198,1.227,199,0.667,200,0.861,201,0.667,202,0.819,203,0.667,204,0.703,205,0.861,206,0.861,207,0.667,208,0.861,209,0.703,210,0.861,211,0.667,212,1.099,213,0.861,214,0.861,215,0.012,216,0.012,222,0.918,231,2.433,258,1.883,261,1.169,262,1.169,317,3.404,318,2.433,321,2.433,322,3.977,339,2.342,340,3.404,342,2.389,346,3.147,355,3.466,358,2.682,360,2.732,367,3.158,368,2.811,369,2.519,381,1.301,406,2.031,428,2.732,457,3.892,472,3.995,494,2.342,523,3.995,529,4.389,530,2.074,574,1.883,581,1.644,593,1.545,614,3.174,669,2.893,692,2.972,732,1.883,733,1.755,739,1.644,754,1.883,846,3.147,857,2.433,866,2.031,883,2.682,892,4.399,917,2.21,991,2.732,992,4.539,993,5.286,994,4.539,995,4.151,996,3.666,997,2.732,998,3.739,999,4.539,1000,4.539,1001,3.187,1002,4.539,1003,5.221,1004,4.539,1005,4.539,1006,3.995,1007,3.187,1008,4.399,1009,2.732,1010,3.187,1011,3.187,1012,3.187,1013,4.036,1014,3.187,1015,3.187,1016,3.187,1017,3.187,1018,4.539,1019,3.187,1020,3.892,1021,2.732,1022,3.187,1023,3.187,1024,3.187,1025,3.466,1026,4.539,1027,3.892,1028,2.732,1029,3.187]],["title/interfaces/LoginRequest.html",[629,0.485,1030,2.522]],["body/interfaces/LoginRequest.html",[3,0.27,4,0.235,9,0.202,35,0.34,36,0.574,57,0.019,59,0.397,116,0.27,215,0.017,216,0.017,222,1.179,629,0.752,630,1.774,995,4.571,996,4.972,1030,4.56,1031,4.307,1032,4.837]],["title/interfaces/LoginResponse.html",[629,0.485,1033,2.522]],["body/interfaces/LoginResponse.html",[3,0.267,4,0.233,9,0.2,35,0.337,36,0.571,57,0.019,59,0.395,110,0.611,116,0.267,212,1.272,215,0.017,216,0.017,222,1.106,629,0.745,630,1.758,1031,4.269,1033,4.536,1034,4.269,1035,6.131]],["title/interfaces/MyOrderDetails.html",[629,0.485,1036,2.319]],["body/interfaces/MyOrderDetails.html",[3,0.238,4,0.208,9,0.178,19,1.043,35,0.301,36,0.533,57,0.02,59,0.447,110,0.667,116,0.238,196,0.986,212,1.249,215,0.016,216,0.016,222,1.21,503,2.042,629,0.664,630,1.566,1036,3.891,1037,3.454,1038,4.271,1039,6.881,1040,6.881,1041,6.881,1042,6.881,1043,6.881,1044,5.9,1045,5.254]],["title/components/MyOrdersComponent.html",[0,0.219,188,0.762]],["body/components/MyOrdersComponent.html",[0,0.327,1,0.504,2,0.947,3,0.115,4,0.1,5,0.65,6,0.684,7,0.65,8,0.65,9,0.086,11,0.946,12,1.902,13,2.178,19,1.134,26,1.505,27,1.83,28,0.65,29,1.931,30,1.836,31,1.048,33,0.996,35,0.38,36,0.322,44,0.901,45,2.168,46,1.048,49,0.947,52,1.405,56,1.227,57,0.02,58,1.035,59,0.394,60,1.108,71,1.426,74,1.323,75,1.891,78,2.296,80,3.715,81,2.031,87,1.381,88,1.381,98,0.588,109,2.173,110,0.549,111,0.383,116,0.115,117,0.406,118,1.483,143,1.685,152,2.434,165,0.996,166,0.996,167,0.65,168,1.358,169,0.65,170,0.65,171,0.53,172,0.65,173,0.504,174,0.618,175,0.996,176,0.504,177,0.65,178,0.53,179,0.65,180,0.504,181,0.65,182,0.53,183,0.65,184,0.504,185,0.65,186,0.504,187,0.65,188,1.052,189,0.996,190,0.504,191,0.65,192,0.53,193,0.65,194,0.504,195,0.504,196,0.491,197,0.558,198,0.996,199,0.504,200,0.65,201,0.504,202,0.618,203,0.504,204,0.53,205,1.608,206,0.65,207,0.504,208,0.65,209,0.53,210,0.65,211,0.504,212,0.914,213,0.65,214,0.65,215,0.01,216,0.01,222,0.801,261,0.883,262,0.883,289,4.702,342,2.097,356,3.119,369,2.301,381,1.83,421,1.591,450,1.241,474,1.284,501,2.968,503,2.083,504,2.35,511,1.505,533,1.533,554,1.685,579,1.166,581,1.241,593,1.166,613,2.063,619,2.815,620,2.815,635,3.161,637,2.556,641,2.857,642,3.453,643,2.857,644,2.968,645,2.857,646,2.857,647,2.35,651,2.857,654,2.611,661,2.35,663,2.35,664,3.277,665,2.857,666,2.815,667,2.556,676,3.202,678,3.453,682,1.533,683,2.475,684,3.202,686,1.668,691,1.533,692,1.241,693,1.668,695,2.857,700,3.376,701,2.556,703,3.483,704,2.556,709,1.241,711,2.857,713,2.35,714,3.202,715,2.35,716,2.35,717,2.35,718,2.35,719,2.178,720,2.35,721,2.178,722,2.35,723,2.35,724,2.35,725,2.35,726,1.421,731,2.063,732,1.421,733,1.325,751,2.35,760,1.533,872,3.161,877,1.421,882,3.108,883,2.968,1036,3.643,1037,1.668,1046,5.814,1047,2.063,1048,3.843,1049,3.161,1050,3.686,1051,3.161,1052,3.686,1053,2.405,1054,3.686,1055,2.405,1056,2.405,1057,2.405,1058,2.405,1059,2.405,1060,2.063,1061,2.405,1062,2.405,1063,2.063,1064,2.405,1065,2.405,1066,3.161,1067,2.405,1068,3.686,1069,2.405,1070,2.405,1071,2.405,1072,2.405,1073,2.405,1074,3.161,1075,2.063,1076,3.161,1077,3.161,1078,3.161,1079,3.161,1080,3.161,1081,3.161,1082,3.161]],["title/interfaces/OrderAndProductDto.html",[629,0.485,785,2.319]],["body/interfaces/OrderAndProductDto.html",[3,0.253,4,0.221,9,0.189,35,0.319,36,0.552,57,0.02,59,0.44,116,0.253,196,0.705,215,0.016,216,0.016,222,1.192,503,2.125,549,2.914,629,0.705,630,1.663,785,4.036,1044,6.022,1045,5.362,1083,4.536,1084,7.023,1085,5.362,1086,5.362,1087,4.87]],["title/components/OrderConfirmationComponent.html",[0,0.219,190,0.762]],["body/components/OrderConfirmationComponent.html",[0,0.375,1,0.704,2,1.211,3,0.161,4,0.14,5,0.908,6,0.955,7,0.908,8,0.908,9,0.12,11,0.633,12,2.431,19,1.569,26,1.924,27,2.222,28,0.908,29,2.008,30,1.909,31,1.339,33,1.274,35,0.203,36,0.411,44,1.151,45,2.546,46,1.765,49,1.211,52,1.235,56,0.821,57,0.02,58,0.918,59,0.284,60,0.741,70,3.598,71,1.823,74,1.151,75,1.8,87,0.78,88,0.78,98,0.821,110,0.645,111,0.536,116,0.161,117,0.567,121,1.3,165,1.274,166,1.274,167,0.908,168,1.594,169,0.908,170,0.908,171,0.741,172,0.908,173,0.704,174,0.864,175,1.274,176,0.704,177,0.908,178,0.741,179,0.908,180,0.704,181,0.908,182,0.741,183,0.908,184,0.704,185,0.908,186,0.704,187,0.908,188,0.704,189,1.274,190,1.235,191,0.908,192,0.741,193,0.908,194,0.704,195,0.704,196,0.628,197,0.78,198,1.274,199,0.704,200,0.908,201,0.704,202,0.864,203,0.704,204,0.741,205,0.908,206,0.908,207,0.704,208,0.908,209,0.741,210,0.908,211,0.704,212,0.567,213,0.908,214,0.908,215,0.012,216,0.012,261,1.233,262,1.233,281,4.307,342,1.729,369,2.558,381,1.372,413,1.734,474,2.303,484,4.666,527,4.04,530,2.153,539,3.469,540,3.598,541,3.598,542,3.598,543,3.598,544,3.598,549,1.851,550,4.666,574,3.215,579,1.629,626,3.598,627,3.003,654,2.942,709,1.734,739,1.734,773,4.155,877,1.985,883,2.784,886,4.04,1088,4.743,1089,2.881,1090,4.04,1091,5.442,1092,5.058,1093,5.058,1094,4.712,1095,4.712,1096,4.712,1097,5.442,1098,4.712,1099,5.898,1100,3.36,1101,3.36,1102,3.598,1103,3.598,1104,3.598,1105,3.36,1106,3.36,1107,4.712,1108,3.36,1109,3.36,1110,3.36,1111,3.36,1112,3.36,1113,3.36,1114,3.36,1115,3.36,1116,3.36,1117,3.36,1118,4.04,1119,4.712,1120,4.712,1121,4.712]],["title/interfaces/OrderDetailsModel.html",[539,2.319,629,0.485]],["body/interfaces/OrderDetailsModel.html",[3,0.254,4,0.221,9,0.19,19,1.111,35,0.32,36,0.554,57,0.02,59,0.434,110,0.58,116,0.254,196,0.707,215,0.016,216,0.016,222,1.208,474,1.849,516,4.053,539,4.044,540,5.368,541,5.368,542,5.368,543,5.368,544,5.368,549,2.924,629,0.707,630,1.669,797,4.053,1122,4.875]],["title/components/OrderErrorComponent.html",[0,0.219,192,0.802]],["body/components/OrderErrorComponent.html",[0,0.411,1,0.922,2,1.452,3,0.21,4,0.184,5,1.19,6,1.251,7,1.19,8,1.19,9,0.158,11,0.829,19,1.556,28,1.19,29,2.057,30,1.956,31,1.606,33,1.527,57,0.02,58,0.953,98,1.076,110,0.481,111,0.702,116,0.21,117,0.743,165,1.527,166,1.527,167,1.19,168,1.779,169,1.19,170,1.19,171,0.971,172,1.19,173,0.922,174,1.131,175,1.527,176,0.922,177,1.19,178,0.971,179,1.19,180,0.922,181,1.19,182,0.971,183,1.19,184,0.922,185,1.19,186,0.922,187,1.19,188,0.922,189,1.527,190,0.922,191,1.19,192,1.452,193,1.19,194,0.922,195,0.922,196,0.753,197,1.022,198,1.527,199,0.922,200,1.19,201,0.922,202,1.131,203,0.922,204,0.971,205,1.19,206,1.19,207,0.922,208,1.19,209,0.971,210,1.19,211,0.922,212,0.743,213,1.19,214,1.19,215,0.015,216,0.015,293,3.362,342,2.556,477,4.845,497,4.314,581,2.915,685,2.915,733,3.113,1088,3.362,1123,3.775,1124,5.65,1125,5.65,1126,6.239,1127,5.65]],["title/interfaces/OrderProductQuantity.html",[629,0.485,1122,2.522]],["body/interfaces/OrderProductQuantity.html",[3,0.269,4,0.235,9,0.202,35,0.34,36,0.573,57,0.019,59,0.396,116,0.269,196,0.75,215,0.017,216,0.017,503,2.101,510,3.275,516,5.472,549,3.102,629,0.75,630,1.77,1122,4.555,1128,4.828]],["title/components/OrdersComponent.html",[0,0.219,194,0.762]],["body/components/OrdersComponent.html",[0,0.34,1,0.435,2,0.846,3,0.099,4,0.087,5,0.562,6,0.591,7,0.562,8,0.562,9,0.074,11,1.013,19,1.429,28,0.562,29,1.891,30,1.798,31,0.936,33,0.89,35,0.305,36,0.287,44,0.804,45,2.004,46,0.936,49,0.846,52,1.406,56,1.315,57,0.02,58,1.04,59,0.397,60,1.187,62,2.282,74,1.428,75,1.934,78,2.122,80,3.775,81,3.834,87,1.357,88,1.357,98,0.508,99,3.225,109,2.252,110,0.508,111,0.332,116,0.099,117,0.351,118,1.865,143,1.504,152,2.328,165,0.89,166,0.89,167,0.562,168,1.255,169,0.562,170,0.562,171,0.459,172,0.562,173,0.435,174,0.534,175,0.89,176,0.435,177,0.562,178,0.459,179,0.562,180,0.435,181,0.562,182,0.459,183,0.562,184,0.435,185,0.562,186,0.435,187,0.562,188,0.435,189,0.89,190,0.435,191,0.562,192,0.459,193,0.562,194,0.972,195,0.435,196,0.439,197,0.483,198,0.89,199,0.435,200,0.562,201,0.435,202,0.534,203,1.059,204,0.459,205,1.454,206,0.562,207,0.435,208,0.562,209,0.459,210,0.562,211,0.435,212,0.351,213,0.562,214,0.562,215,0.009,216,0.009,222,1.06,261,0.763,262,0.763,342,2.208,356,3.094,369,2.181,381,1.896,395,2.832,421,1.421,450,1.698,474,1.146,501,2.744,502,1.945,503,2.091,504,2.098,509,2.513,511,2.197,521,2.098,533,1.326,554,1.504,579,1.009,581,1.698,593,1.596,619,2.513,620,2.513,641,2.604,642,3.225,643,2.604,644,2.744,645,2.604,646,2.604,647,2.098,651,2.604,654,2.459,661,2.098,663,2.098,664,3.22,665,2.96,666,2.513,676,3.43,678,3.43,682,1.326,683,2.459,684,2.96,685,1.698,686,1.442,691,1.326,692,2.611,693,1.442,696,5.012,700,3.179,701,2.282,703,2.282,704,3.22,706,2.513,709,1.073,711,3.43,713,2.098,714,2.96,715,2.098,716,2.098,717,2.098,718,2.098,719,1.945,720,2.098,721,1.945,722,2.098,723,2.098,724,2.098,725,2.098,726,1.229,732,1.945,733,1.813,739,1.073,751,2.098,760,1.326,773,3.546,877,1.229,882,3.509,891,2.282,954,2.282,1036,3.43,1037,1.442,1045,4.802,1048,3.502,1049,2.822,1051,2.822,1060,1.783,1063,2.822,1074,2.822,1075,1.783,1076,2.822,1077,2.822,1078,2.822,1079,2.822,1080,2.822,1081,2.822,1082,2.822,1118,3.982,1129,1.783,1130,3.291,1131,3.291,1132,2.822,1133,3.291,1134,3.291,1135,3.291,1136,3.291,1137,2.08,1138,3.291,1139,4.644,1140,2.08,1141,4.084,1142,2.822,1143,3.291,1144,3.291,1145,2.08,1146,3.291,1147,3.291,1148,2.08,1149,2.08,1150,2.08,1151,2.08,1152,2.08,1153,2.08,1154,2.08,1155,2.08,1156,2.08,1157,2.08,1158,2.08,1159,4.084,1160,4.644,1161,2.08,1162,2.08,1163,2.08,1164,2.08,1165,2.08,1166,2.08,1167,2.08,1168,2.822,1169,4.644]],["title/injectables/PaymentService.html",[407,1.335,492,2.522]],["body/injectables/PaymentService.html",[3,0.207,4,0.18,9,0.155,11,1.165,35,0.261,36,0.487,44,1.364,46,1.229,49,1.68,52,1.295,56,1.364,57,0.02,58,0.942,59,0.373,60,1.232,71,2.161,74,1.364,87,1.004,88,1.004,110,0.758,111,0.689,116,0.207,117,0.73,118,1.848,215,0.014,216,0.014,218,2.231,222,0.89,269,2.382,338,4.265,339,2.882,348,4.789,390,3.729,404,2.097,407,2.049,410,2.382,418,1.673,474,1.945,480,4.892,492,3.873,494,3.373,496,6.357,525,4.789,530,2.552,532,4.419,582,4.497,593,3,614,3.077,656,3.56,657,4.992,758,2.382,761,3.655,768,4.497,781,3.56,783,2.382,784,2.756,808,2.999,953,4.789,954,3.873,1170,3.708,1171,5.585,1172,5.585,1173,5.585,1174,5.585,1175,5.585,1176,5.585,1177,4.324,1178,5.585,1179,5.585,1180,4.324,1181,2.999,1182,4.324,1183,4.324]],["title/interfaces/Product.html",[196,0.485,629,0.485]],["body/interfaces/Product.html",[3,0.247,4,0.216,9,0.185,35,0.312,36,0.545,57,0.02,59,0.437,60,1.537,110,0.565,116,0.247,196,0.832,215,0.016,216,0.016,222,1.156,413,2.667,503,2.117,510,3.185,629,0.689,630,1.625,947,3.681,1085,5.321,1086,5.321,1087,4.832,1184,4.432,1185,5.975,1186,6.969,1187,5.169,1188,5.169,1189,3.947,1190,3.947,1191,3.947]],["title/components/ProductViewDetailsComponent.html",[0,0.219,195,0.762]],["body/components/ProductViewDetailsComponent.html",[0,0.233,1,0.4,2,0.791,3,0.091,4,0.08,5,0.517,6,0.543,7,0.517,8,0.517,9,0.068,11,1.027,18,0.74,19,0.644,21,1.13,26,1.257,27,1.577,28,0.517,29,1.866,30,1.774,31,0.875,33,0.832,35,0.115,36,0.269,44,0.752,45,1.911,46,1.379,49,0.791,50,1.46,51,2.822,52,1.31,56,1.267,57,0.02,58,1.014,59,0.37,60,1.143,61,1.818,73,1.13,74,1.332,75,1.715,87,1.028,88,1.028,96,2.117,98,0.467,99,1.219,100,1.713,104,3.07,110,0.596,111,0.305,112,0.666,116,0.091,117,0.323,118,1.465,141,1.326,143,2.217,152,2.193,165,0.832,166,0.832,167,0.517,168,1.196,169,0.517,170,0.517,171,0.422,172,0.517,173,0.4,174,1.247,175,0.832,176,0.4,177,0.517,178,0.422,179,0.517,180,0.4,181,0.517,182,0.422,183,0.517,184,0.4,185,0.517,186,0.4,187,0.517,188,0.4,189,0.832,190,0.4,191,0.517,192,0.422,193,0.517,194,0.4,195,0.927,196,0.969,197,1.676,198,0.832,199,0.4,200,0.517,201,0.4,202,1.332,203,0.809,204,0.422,205,0.517,206,0.517,207,0.4,208,0.517,209,0.422,210,0.517,211,0.4,212,1.036,213,0.517,214,0.517,215,0.008,216,0.008,242,2.282,261,0.701,262,0.701,277,4.408,328,2.639,330,3.123,342,1.129,353,1.962,356,1.328,367,2.643,368,2.353,369,2.109,376,2.639,381,0.781,397,2.514,398,1.962,406,1.219,413,2.813,418,0.74,421,1.667,452,1.639,453,1.639,474,1.806,502,3.549,503,1.474,508,2.439,510,2.217,511,2.226,521,3.093,536,2.35,537,1.962,551,1.219,554,1.406,555,1.326,557,1.219,558,1.326,559,2.134,585,3.063,586,3.595,616,2.35,617,2.867,626,1.46,627,1.962,636,2.639,648,2.639,654,2.491,664,1.695,669,1.962,679,1.639,709,0.986,734,1.639,735,1.639,736,1.46,739,0.986,753,2.678,754,3.221,755,2.134,851,2.462,854,3.38,866,1.219,869,1.639,911,3.796,917,4.058,920,1.639,921,4.161,923,2.639,924,4.161,925,1.639,926,4.161,927,1.639,928,1.639,936,2.35,938,2.639,947,3.493,949,2.35,950,2.35,1006,2.134,1192,5.45,1193,1.46,1194,3.312,1195,2.639,1196,3.862,1197,5.185,1198,3.862,1199,3.077,1200,3.077,1201,3.077,1202,3.077,1203,3.077,1204,3.077,1205,1.912,1206,5.45,1207,1.912,1208,2.639,1209,3.862,1210,3.862,1211,3.862,1212,3.312,1213,3.862,1214,3.862,1215,3.077,1216,1.912,1217,3.077,1218,1.912,1219,3.077,1220,3.077,1221,1.912,1222,3.796,1223,1.818,1224,1.639,1225,3.077,1226,1.639,1227,3.077,1228,3.077,1229,1.912,1230,3.077,1231,3.077,1232,3.077,1233,1.912,1234,3.077,1235,3.077,1236,1.912,1237,3.077,1238,2.639,1239,3.077,1240,1.912,1241,3.077,1242,1.912,1243,1.639,1244,1.912,1245,1.912,1246,3.38,1247,1.912,1248,1.912,1249,1.912,1250,1.912,1251,1.639,1252,1.912,1253,3.077,1254,3.077,1255,1.912,1256,1.912,1257,1.912,1258,3.077,1259,1.912,1260,1.912,1261,1.912,1262,1.912,1263,1.912,1264,1.912,1265,1.912,1266,4.427,1267,3.077,1268,3.077,1269,3.077,1270,3.077,1271,3.077,1272,3.077,1273,4.427,1274,3.077,1275,3.077,1276,3.077,1277,3.077,1278,3.077,1279,1.912,1280,1.912,1281,1.912,1282,1.912,1283,1.912,1284,1.639,1285,1.912,1286,3.077,1287,3.077,1288,3.077,1289,3.312,1290,3.077,1291,3.077,1292,3.077,1293,1.912,1294,1.46,1295,1.912,1296,1.639,1297,1.639,1298,1.912,1299,1.639,1300,1.912,1301,1.912,1302,3.077,1303,3.077,1304,1.912,1305,1.912,1306,1.912,1307,1.912,1308,1.912,1309,1.912,1310,3.077,1311,3.077,1312,4.427,1313,1.912,1314,1.912,1315,1.912,1316,3.077,1317,1.912,1318,1.639,1319,1.912,1320,3.077,1321,3.312,1322,1.912,1323,1.912,1324,4.427,1325,1.912,1326,1.639,1327,3.077,1328,3.077,1329,3.077,1330,1.912,1331,1.912,1332,3.077,1333,1.912,1334,1.912,1335,1.912,1336,1.912,1337,1.912,1338,1.912]],["title/components/RegisterComponent.html",[0,0.219,199,0.762]],["body/components/RegisterComponent.html",[0,0.372,1,0.687,2,1.191,3,0.157,4,0.137,5,0.887,6,0.933,7,0.887,8,0.887,9,0.117,11,0.873,18,1.793,19,0.971,27,1.341,28,0.887,29,2.003,30,1.905,31,1.318,33,1.253,35,0.198,36,0.404,44,1.132,46,1.527,49,1.191,52,1.125,56,1.132,57,0.02,58,1.132,59,0.324,60,1.022,74,0.802,75,1.086,87,0.762,88,0.762,98,0.802,110,0.699,111,0.523,112,1.143,116,0.157,117,0.554,118,1.086,165,1.253,166,1.253,167,0.887,168,1.578,169,0.887,170,0.887,171,0.724,172,0.887,173,0.687,174,0.844,175,1.253,176,0.687,177,0.887,178,0.724,179,0.887,180,0.687,181,0.887,182,0.724,183,0.887,184,0.687,185,0.887,186,0.687,187,0.887,188,0.687,189,1.253,190,0.687,191,0.887,192,0.724,193,0.887,194,0.687,195,0.687,196,0.618,197,0.762,198,1.253,199,1.222,200,0.887,201,0.687,202,0.844,203,0.687,204,0.724,205,0.887,206,0.887,207,0.687,208,0.887,209,0.724,210,0.887,211,0.687,212,1.18,213,0.887,214,0.887,215,0.012,216,0.012,258,1.94,261,1.205,262,1.205,322,2.554,333,5.122,342,1.972,358,2.739,368,2.835,369,2.541,381,1.341,449,2.815,523,4.048,529,4.048,574,1.94,579,1.592,594,2.815,614,3.216,618,3.54,627,2.955,739,1.694,754,1.94,771,3.214,917,2.277,995,4.074,996,3.214,997,2.815,998,3.776,1008,3.54,1009,2.815,1020,2.815,1025,4.103,1028,2.815,1296,3.975,1339,2.815,1340,5.752,1341,5.374,1342,4.636,1343,3.283,1344,4.636,1345,3.283,1346,4.636,1347,4.636,1348,3.975,1349,3.975,1350,3.283,1351,3.283,1352,3.283,1353,3.283,1354,3.283,1355,2.815,1356,3.283,1357,3.283,1358,3.283,1359,3.283,1360,5.838,1361,3.283,1362,3.283,1363,3.283,1364,3.283,1365,3.283,1366,4.636,1367,5.838,1368,3.975,1369,6.709,1370,4.636,1371,4.636,1372,5.838,1373,4.636,1374,4.636,1375,4.636,1376,3.283,1377,3.283]],["title/interfaces/Role.html",[629,0.485,1223,2.149]],["body/interfaces/Role.html",[3,0.27,4,0.236,9,0.202,35,0.341,36,0.574,57,0.019,59,0.397,116,0.27,215,0.017,216,0.017,222,1.179,629,0.753,630,1.777,1013,5.479,1223,3.889,1378,4.845,1379,6.152]],["title/interfaces/SalesData.html",[42,2.004,629,0.485]],["body/interfaces/SalesData.html",[3,0.27,4,0.235,9,0.202,35,0.34,36,0.574,42,3.623,57,0.019,59,0.397,89,5.475,114,3.911,116,0.27,215,0.017,216,0.017,222,1.11,503,1.979,629,0.752,630,1.774,1380,4.837,1381,7.171]],["title/components/SaveProductComponent.html",[0,0.219,201,0.762]],["body/components/SaveProductComponent.html",[0,0.296,1,0.314,2,0.647,3,0.072,4,0.062,5,0.88,7,0.405,8,0.405,9,0.241,11,1.095,18,2.25,19,0.527,23,1.386,26,1.028,27,1.329,28,0.405,29,1.785,30,1.697,33,0.68,35,0.257,36,0.22,44,0.615,45,1.647,46,1.687,49,0.647,51,2.432,52,1.32,54,1.922,56,1.35,57,0.02,58,1.075,59,0.388,60,1.219,61,1.923,71,0.974,72,2.791,74,1.421,75,1.999,87,1.283,88,0.886,96,0.611,98,0.366,100,0.974,109,2.235,110,0.562,111,0.239,112,0.522,116,0.072,117,0.253,118,1.77,121,2.138,143,0.684,152,2.408,165,0.68,166,0.68,167,0.405,168,1.031,169,0.405,170,0.405,171,0.33,172,0.405,173,0.314,174,0.385,175,0.68,176,0.314,177,0.405,178,0.33,179,0.405,180,0.314,181,0.405,182,0.33,183,0.405,184,0.314,185,0.405,186,0.314,187,0.405,188,0.314,189,0.68,190,0.314,191,0.405,192,0.33,193,0.405,194,0.314,195,0.314,196,0.971,197,0.348,198,0.68,199,0.314,200,0.405,201,0.799,202,0.837,203,1.189,204,0.33,205,0.405,206,0.405,207,0.314,208,0.405,209,0.33,210,0.405,211,0.314,212,0.253,213,0.405,214,0.405,215,0.007,216,0.007,248,2.075,258,0.885,261,0.549,262,0.549,271,4.42,339,1.68,342,2.028,358,3.038,368,2.114,369,1.895,375,2.257,381,1.329,397,1.22,411,1.284,412,2.486,413,2.378,414,1.284,418,1.259,420,1.038,421,2.219,435,2.791,440,2.158,450,2.195,464,2.646,469,1.143,474,1.863,482,2.158,493,1.284,502,1.487,503,1.31,508,3.204,510,1.744,511,2.257,521,0.954,523,3.832,529,4.257,530,2.239,536,1.922,537,1.604,551,0.954,554,2.35,555,1.745,557,1.604,558,1.038,559,1.745,574,1.923,577,1.922,578,1.143,579,0.726,580,2.646,583,4.084,610,2.158,614,2.833,616,3.249,617,1.487,618,3.519,649,2.257,654,2.106,672,1.745,674,3.951,683,0.684,709,0.773,719,0.885,721,0.885,726,1.487,738,2.158,739,1.68,741,2.646,760,0.954,814,1.922,823,2.158,824,2.257,837,1.284,844,2.646,877,0.885,883,0.885,908,1.745,947,3.431,949,1.922,950,1.922,951,2.646,957,3.741,980,3.249,981,2.791,984,5.09,1021,2.158,1027,1.284,1085,2.486,1086,2.486,1087,2.257,1102,2.486,1103,1.922,1132,2.158,1142,2.791,1185,2.791,1189,1.922,1191,2.913,1206,5.263,1226,1.284,1243,1.284,1246,1.143,1251,2.158,1284,1.284,1289,2.158,1294,1.922,1355,1.284,1382,5.465,1383,3.815,1384,2.158,1385,3.815,1386,4.608,1387,4.255,1388,3.256,1389,5.142,1390,2.517,1391,2.517,1392,2.517,1393,2.517,1394,2.517,1395,3.815,1396,2.517,1397,2.517,1398,4.255,1399,2.517,1400,3.256,1401,1.497,1402,2.517,1403,1.497,1404,3.815,1405,5.142,1406,2.517,1407,1.497,1408,2.158,1409,2.517,1410,1.497,1411,1.497,1412,1.497,1413,1.497,1414,2.517,1415,1.497,1416,1.497,1417,2.517,1418,1.497,1419,2.517,1420,5.527,1421,1.497,1422,2.517,1423,4.255,1424,5.681,1425,4.608,1426,4.608,1427,3.256,1428,3.272,1429,2.517,1430,2.517,1431,2.517,1432,2.517,1433,1.497,1434,4.899,1435,3.256,1436,3.256,1437,3.256,1438,2.517,1439,1.497,1440,2.517,1441,3.815,1442,2.257,1443,2.517,1444,1.497,1445,3.272,1446,4.987,1447,5.527,1448,3.256,1449,3.256,1450,3.256,1451,2.517,1452,1.497,1453,2.158,1454,1.497,1455,1.497,1456,2.517,1457,1.497,1458,3.648,1459,1.497,1460,1.497,1461,1.497,1462,2.517,1463,1.497,1464,1.497,1465,2.517,1466,2.158,1467,2.517,1468,1.497,1469,1.497,1470,2.517,1471,1.497,1472,1.497,1473,1.497,1474,1.497,1475,1.497,1476,1.497,1477,1.143,1478,1.497,1479,1.497,1480,2.517,1481,1.497,1482,1.497,1483,1.497,1484,3.256,1485,1.497,1486,1.497,1487,2.517,1488,1.284,1489,1.497,1490,2.517,1491,1.497,1492,2.517,1493,1.497,1494,1.497,1495,2.517,1496,1.497,1497,1.497,1498,1.497,1499,3.815,1500,2.517,1501,1.497,1502,1.497,1503,1.497,1504,3.256,1505,1.497,1506,1.497,1507,1.497,1508,2.517,1509,2.517,1510,2.517,1511,2.517,1512,1.497,1513,1.497,1514,1.497,1515,2.791,1516,1.497,1517,1.497,1518,1.497,1519,1.284,1520,1.497,1521,1.497,1522,1.497,1523,1.497,1524,1.497,1525,1.497,1526,1.497,1527,1.497,1528,1.497,1529,1.284,1530,1.497,1531,1.497,1532,1.497,1533,1.497,1534,1.497,1535,2.517,1536,1.497,1537,2.517,1538,1.497,1539,1.497,1540,1.497,1541,1.497,1542,1.497,1543,1.497,1544,1.497,1545,1.497,1546,1.497,1547,1.497,1548,1.497,1549,1.497,1550,1.497,1551,1.497,1552,1.497,1553,1.497,1554,1.497,1555,1.497,1556,1.497,1557,1.497,1558,1.497,1559,1.497,1560,1.497,1561,1.497,1562,2.517,1563,1.497,1564,1.497,1565,1.497,1566,1.497,1567,1.497,1568,1.497,1569,1.497,1570,2.517,1571,3.815,1572,3.815,1573,3.815,1574,2.158,1575,2.517,1576,2.517,1577,2.517,1578,2.517,1579,2.517,1580,2.517]],["title/components/SearchBarComponent.html",[0,0.219,204,0.802]],["body/components/SearchBarComponent.html",[0,0.413,1,0.799,2,1.322,3,0.182,4,0.159,5,1.031,6,1.085,7,1.031,8,1.031,9,0.137,11,0.719,19,1.077,28,1.031,29,2.032,30,1.932,31,1.462,33,1.39,35,0.23,36,0.449,44,1.256,52,1.303,57,0.02,58,0.868,59,0.351,74,0.932,75,1.702,87,1.194,88,1.194,98,0.932,110,0.417,111,0.608,116,0.182,117,0.644,165,1.39,166,1.39,167,1.031,168,1.682,169,1.031,170,1.031,171,0.842,172,1.031,173,0.799,174,0.981,175,1.39,176,0.799,177,1.031,178,0.842,179,1.031,180,0.799,181,1.031,182,0.842,183,1.031,184,0.799,185,1.031,186,0.799,187,1.031,188,0.799,189,1.39,190,0.799,191,1.031,192,0.842,193,1.031,194,0.799,195,0.799,196,0.685,197,0.886,198,1.39,199,0.799,200,1.031,201,0.799,202,0.981,203,1.077,204,1.373,205,2.036,206,1.031,207,0.799,208,1.031,209,0.842,210,1.031,211,0.799,212,0.981,213,1.031,214,1.031,215,0.013,216,0.013,222,0.992,285,4.962,421,2.22,471,4.41,472,3.566,554,1.744,644,3.437,694,4.41,742,4.41,1246,2.914,1428,4.41,1442,4.642,1581,5.572,1582,3.272,1583,6.225,1584,5.143,1585,5.143,1586,5.143,1587,5.143,1588,5.143,1589,5.817,1590,5.143,1591,6.225,1592,4.41,1593,6.225,1594,5.143,1595,3.816,1596,5.817,1597,3.816,1598,3.816,1599,3.816,1600,5.143,1601,3.816,1602,3.816,1603,3.816,1604,3.816,1605,3.816,1606,3.816,1607,3.816]],["title/components/ShowProductDetailsComponent.html",[0,0.219,207,0.762]],["body/components/ShowProductDetailsComponent.html",[0,0.296,1,0.314,2,0.647,3,0.072,4,0.063,5,0.405,6,0.426,7,0.405,8,0.405,9,0.203,11,1.007,13,1.488,18,1.646,19,0.527,21,0.885,23,3.547,26,1.028,27,1.33,28,0.405,29,1.785,30,1.697,31,0.716,33,0.681,35,0.343,36,0.22,44,0.615,45,1.647,46,1.085,49,0.647,52,1.383,56,1.197,57,0.02,58,0.959,59,0.392,60,1.081,71,0.58,74,1.388,75,2.085,78,1.744,87,1.283,88,1.283,96,1.558,98,0.366,100,1.896,109,2.879,110,0.585,111,0.239,112,0.522,116,0.072,117,0.253,118,1.525,120,1.039,121,1.783,141,1.039,143,1.151,152,2.138,155,1.746,161,2.487,165,0.681,166,0.681,167,0.405,168,1.15,169,0.405,170,0.405,171,0.33,172,0.405,173,0.314,174,0.385,175,0.681,176,0.314,177,0.405,178,0.33,179,0.405,180,0.314,181,0.405,182,0.33,183,0.405,184,0.314,185,0.405,186,0.314,187,0.405,188,0.314,189,0.681,190,0.314,191,0.405,192,0.33,193,0.405,194,0.314,195,0.314,196,1.003,197,0.348,198,0.681,199,0.314,200,0.405,201,0.314,202,0.385,203,0.799,204,0.33,205,1.15,206,0.405,207,0.799,208,1.39,209,0.33,210,0.405,211,0.314,212,0.644,213,0.405,214,0.405,215,0.007,216,0.007,222,0.781,261,0.55,262,0.55,274,4.612,342,2.253,356,2.923,368,2.115,369,1.896,381,2.1,397,1.851,404,0.726,413,0.773,418,0.58,421,1.406,450,2.654,462,2.792,464,1.746,474,0.877,483,2.792,501,2.255,502,2.255,503,1.985,508,2.103,510,1.744,511,1.738,532,0.955,537,1.605,551,0.955,554,1.488,565,2.159,566,3.952,574,0.885,579,1.851,580,2.258,581,1.299,593,1.221,606,1.922,607,1.922,617,1.924,641,2.076,642,2.938,643,2.076,644,2.723,645,2.076,646,2.076,647,1.605,649,1.746,651,2.076,654,2.106,661,1.605,663,1.605,664,2.539,665,1.605,669,1.605,672,1.039,676,2.433,678,2.938,681,1.144,682,1.605,683,1.945,684,2.076,685,1.969,686,2.647,691,1.605,692,1.299,693,1.746,695,1.605,700,2.895,709,0.773,711,2.938,713,1.605,714,2.433,715,1.605,716,1.605,717,1.605,718,1.605,719,1.488,720,1.605,721,1.488,722,1.605,723,1.605,724,1.605,725,1.605,726,1.488,727,1.285,730,1.285,732,0.885,733,1.387,739,0.773,741,1.746,751,1.605,752,2.159,753,1.746,754,2.255,755,1.746,756,1.285,799,3.398,801,3.952,802,3.952,803,3.952,804,3.952,811,3.273,844,1.039,846,1.746,851,4.318,875,2.159,876,2.159,877,0.885,880,2.159,882,2.647,883,1.488,888,2.159,891,1.746,892,1.922,901,2.792,902,1.285,903,1.285,904,2.159,913,2.159,914,3.273,915,2.159,916,2.159,936,1.922,947,1.969,954,1.746,956,1.285,957,4.339,965,2.159,967,2.159,1006,1.746,1090,1.285,1168,3.273,1190,1.144,1191,1.144,1193,1.144,1194,2.792,1195,2.159,1208,1.285,1212,2.159,1224,1.285,1238,2.159,1297,2.792,1299,1.285,1321,1.285,1326,1.285,1384,2.159,1442,1.746,1445,3.273,1446,3.273,1515,1.285,1519,2.159,1529,1.285,1608,5.703,1609,2.518,1610,2.518,1611,2.518,1612,2.518,1613,3.257,1614,3.257,1615,2.518,1616,3.817,1617,3.817,1618,3.817,1619,2.518,1620,2.518,1621,1.498,1622,1.498,1623,1.498,1624,2.518,1625,2.518,1626,1.498,1627,1.498,1628,4.609,1629,1.498,1630,1.498,1631,1.498,1632,1.498,1633,1.498,1634,2.518,1635,1.498,1636,1.922,1637,2.518,1638,1.498,1639,2.159,1640,1.498,1641,2.518,1642,1.498,1643,1.498,1644,1.498,1645,1.498,1646,2.518,1647,2.518,1648,1.498,1649,1.498,1650,1.498,1651,1.498,1652,2.159,1653,1.498,1654,1.498,1655,1.285,1656,3.817,1657,1.498,1658,1.498,1659,1.498,1660,2.518,1661,1.498,1662,1.498,1663,1.498,1664,1.498,1665,1.498,1666,1.498,1667,1.498,1668,1.498,1669,1.498,1670,1.498,1671,1.498,1672,1.498,1673,1.498,1674,3.257,1675,3.817,1676,3.257,1677,1.498,1678,1.498,1679,1.498,1680,1.498,1681,4.609,1682,1.498,1683,1.498,1684,3.257,1685,2.518,1686,2.518,1687,2.518,1688,2.518,1689,1.498,1690,2.518,1691,2.518,1692,1.498,1693,1.498,1694,1.498,1695,1.498,1696,1.498,1697,1.498,1698,3.952,1699,2.518,1700,2.518,1701,2.518,1702,1.285,1703,1.498,1704,1.498,1705,1.498,1706,1.498,1707,2.518,1708,1.498,1709,1.498,1710,1.498,1711,1.498,1712,3.257,1713,1.498,1714,1.498,1715,1.498,1716,1.498,1717,1.498,1718,1.498,1719,1.498,1720,2.518]],["title/components/SpinnerComponent.html",[0,0.219,209,0.802]],["body/components/SpinnerComponent.html",[0,0.4,1,0.851,2,1.378,3,0.194,4,0.17,5,1.098,6,1.155,7,1.098,8,1.098,9,0.228,11,0.765,19,1.123,28,1.098,29,2.043,30,1.943,31,1.524,33,1.449,35,0.245,52,1.123,57,0.02,58,0.905,59,0.324,87,1.482,88,1.245,98,0.992,100,2.322,110,0.444,111,0.648,116,0.194,117,0.685,165,1.449,166,1.449,167,1.098,168,1.725,169,1.098,170,1.098,171,0.896,172,1.098,173,0.851,174,1.044,175,1.449,176,0.851,177,1.098,178,0.896,179,1.098,180,0.851,181,1.098,182,0.896,183,1.098,184,0.851,185,1.098,186,0.851,187,1.098,188,0.851,189,1.449,190,0.851,191,1.098,192,0.896,193,1.098,194,0.851,195,0.851,196,0.714,197,0.943,198,1.449,199,0.851,200,1.098,201,0.851,202,1.044,203,0.851,204,0.896,205,1.098,206,1.098,207,0.851,208,1.725,209,1.408,210,1.098,211,0.851,212,0.685,213,1.098,214,1.098,215,0.014,216,0.014,222,0.855,397,2.6,497,4.583,537,3.418,685,3.293,695,3.418,824,3.718,840,4.597,990,5.959,1442,4.162,1477,4.873,1592,4.597,1721,3.483,1722,7.054,1723,5.362,1724,4.597,1725,6.002,1726,5.362,1727,4.062,1728,5.362,1729,4.062,1730,4.597,1731,5.362]],["title/interfaces/TopSelling.html",[43,2.149,629,0.485]],["body/interfaces/TopSelling.html",[3,0.265,4,0.232,9,0.199,35,0.335,36,0.568,43,3.849,57,0.019,59,0.417,115,4.239,116,0.265,215,0.017,216,0.017,222,1.102,503,2.094,510,3.26,629,0.74,630,1.746,1087,4.947,1732,4.76,1733,7.134]],["title/interfaces/UrlPaypalResponse.html",[629,0.485,1181,2.522]],["body/interfaces/UrlPaypalResponse.html",[3,0.274,4,0.239,9,0.205,35,0.345,36,0.579,57,0.019,59,0.345,116,0.274,215,0.017,216,0.017,222,1.116,480,3.968,532,4.592,629,0.762,630,1.799,1034,4.37,1181,4.599,1734,4.907]],["title/interfaces/User.html",[212,0.614,629,0.485]],["body/interfaces/User.html",[3,0.255,4,0.222,9,0.191,35,0.321,36,0.555,57,0.02,59,0.434,60,1.402,110,0.582,116,0.255,212,1.073,215,0.017,216,0.017,222,1.208,629,0.71,630,1.675,995,4.487,996,4.881,1223,4.422,1348,6.035,1349,6.035,1735,4.567]],["title/injectables/UserAuthService.html",[367,1.764,407,1.335]],["body/injectables/UserAuthService.html",[3,0.155,4,0.135,9,0.116,11,0.864,14,2.925,18,1.775,35,0.195,44,1.121,49,1.37,52,1.423,56,1.121,57,0.02,58,0.774,59,0.277,60,1.012,71,2.244,74,1.734,75,1.764,96,2.597,100,2.461,104,3.182,110,0.501,111,0.516,116,0.155,117,0.546,118,1.518,121,2.369,212,1.241,215,0.012,216,0.012,218,1.67,222,1.132,317,4.295,318,3.503,321,3.503,340,3.427,345,4.857,346,4.958,353,4.055,367,2.225,397,3.084,398,4.055,407,1.684,410,1.783,418,2.369,456,3.934,624,3.934,683,2.651,758,1.783,851,4.742,852,4.974,853,4.974,854,4.429,857,4.429,866,4.394,1006,4.022,1013,2.471,1035,4.571,1092,5.911,1093,5.911,1103,3.503,1104,5.103,1222,3.934,1223,4.073,1379,2.775,1408,3.934,1574,4.974,1736,2.775,1737,5.801,1738,5.801,1739,4.588,1740,4.588,1741,3.236,1742,3.236,1743,3.236,1744,4.588,1745,4.588,1746,3.236,1747,4.588,1748,3.236,1749,3.236,1750,4.588,1751,3.236,1752,4.588,1753,3.236,1754,4.588,1755,3.236,1756,3.236,1757,3.236,1758,3.236,1759,4.588,1760,3.236,1761,3.236,1762,3.236,1763,4.588,1764,3.236,1765,3.236,1766,4.588,1767,3.236,1768,3.236]],["title/components/UserComponent.html",[0,0.219,211,0.762]],["body/components/UserComponent.html",[0,0.343,1,0.562,2,1.029,3,0.128,4,0.112,5,0.725,6,0.763,7,0.725,8,0.725,9,0.096,11,0.505,15,2.777,17,4.58,18,2.654,19,1.248,21,1.586,25,3.683,26,1.635,27,1.956,28,0.725,29,1.958,30,1.862,31,1.138,33,1.082,35,0.162,36,0.349,37,4.108,38,4.108,40,5.11,41,3.658,42,3.496,44,0.978,45,2.292,46,1.362,47,4.554,49,0.69,50,2.05,51,3.386,52,1.358,56,0.656,57,0.02,58,0.959,59,0.373,60,0.592,61,2.366,73,1.586,74,0.978,75,1.757,77,3.434,78,2.822,79,4.282,80,3.573,81,3.402,84,5.11,86,4.872,87,1.384,88,1.384,89,4.551,90,5.11,95,3.434,96,1.635,97,3.434,98,1.17,99,2.553,100,1.549,102,3.058,104,4.401,110,0.621,111,0.428,112,0.935,113,2.05,114,1.861,116,0.128,117,0.453,119,2.05,121,1.038,122,2.302,123,2.302,124,3.434,125,2.302,126,3.434,127,2.302,132,2.302,134,2.302,135,2.302,136,3.434,137,2.302,138,3.434,139,3.434,140,4.554,141,1.861,142,3.434,143,2.189,144,3.434,145,2.777,146,2.302,147,2.302,148,2.302,149,3.434,150,3.434,152,1.038,160,3.434,161,3.058,162,2.05,163,2.302,164,2.302,165,1.082,166,1.082,167,0.725,168,1.436,169,0.725,170,0.725,171,0.592,172,0.725,173,0.562,174,0.69,175,1.082,176,0.562,177,0.725,178,0.592,179,0.725,180,0.562,181,0.725,182,0.592,183,0.725,184,0.562,185,0.725,186,0.562,187,0.725,188,0.562,189,1.082,190,0.562,191,0.725,192,0.592,193,0.725,194,0.562,195,0.562,196,0.757,197,0.623,198,1.082,199,0.562,200,0.725,201,0.562,202,0.69,203,0.562,204,0.592,205,0.725,206,0.725,207,0.562,208,0.725,209,0.592,210,0.725,211,1.112,212,1.095,213,0.725,214,0.725,215,0.01,216,0.01,464,2.777,504,2.553,508,2.926,511,1.635,546,3.434,549,1.479,557,2.553,558,1.861,559,1.861,585,3.138,627,2.553,656,2.553,741,2.777,771,3.683,785,3.054,787,2.302,1636,3.058,1769,2.302,1770,4.791,1771,4.005,1772,4.108,1773,2.684,1774,2.684,1775,2.684,1776,2.684,1777,2.684,1778,2.684,1779,4.005,1780,2.684,1781,2.684,1782,2.684,1783,2.684,1784,2.684,1785,2.684,1786,2.684,1787,2.684,1788,5.312,1789,4.005,1790,4.005,1791,4.005,1792,4.005,1793,4.005,1794,4.005,1795,4.005,1796,4.005]],["title/injectables/UserService.html",[407,1.335,998,2.149]],["body/injectables/UserService.html",[3,0.175,4,0.152,9,0.131,11,1.071,35,0.22,36,0.436,44,1.22,46,1.419,49,1.283,52,1.34,56,1.493,57,0.02,58,1.031,59,0.386,60,1.348,74,1.614,87,0.848,88,0.848,96,2.496,100,1.931,110,0.753,111,0.582,116,0.175,117,0.616,118,1.882,121,1.413,152,1.413,203,1.28,212,1.24,215,0.013,216,0.013,218,1.884,222,1.053,269,2.012,317,4.248,322,3.64,333,3.812,340,3.612,346,3.462,350,4.28,353,3.182,367,3.28,375,4.438,390,3.848,392,4.28,397,2.421,398,3.182,404,1.771,406,2.328,407,1.832,410,2.012,418,2.2,474,2.129,530,3.02,593,2.758,614,2.75,683,2.281,758,2.012,761,3.36,768,4.212,781,3.182,783,2.012,784,2.328,808,2.533,844,4.239,846,3.462,851,4.452,995,3.182,998,2.949,1003,4.28,1008,3.812,1025,3.812,1030,4.239,1033,2.533,1102,4.668,1340,5.242,1488,4.28,1797,3.132,1798,4.992,1799,4.992,1800,4.992,1801,3.652,1802,4.992,1803,5.687,1804,4.992,1805,4.992,1806,3.652,1807,4.992,1808,4.992,1809,3.652,1810,4.28,1811,4.992,1812,4.992,1813,4.992,1814,5.687,1815,4.992,1816,3.652,1817,3.652,1818,3.652,1819,3.652,1820,3.652,1821,3.652,1822,3.652,1823,3.652]],["title/coverage.html",[1824,4.269]],["body/coverage.html",[0,0.449,1,0.747,9,0.128,10,3.061,19,0.747,42,1.966,43,2.109,57,0.02,59,0.215,114,2.475,115,2.726,152,2.876,159,3.061,171,0.787,173,0.747,176,0.747,178,0.787,180,0.747,182,0.787,184,0.747,186,0.747,188,0.747,190,0.747,192,0.787,194,0.747,195,0.747,196,0.874,197,1.141,199,0.747,201,0.747,203,0.747,204,0.787,207,0.747,209,0.787,211,0.747,212,0.602,215,0.013,216,0.013,217,3.061,239,2.275,271,2.475,274,2.475,277,2.475,279,2.475,281,2.475,285,2.726,289,2.475,293,2.726,304,2.726,306,2.726,308,2.726,310,2.726,313,2.726,330,1.966,335,2.726,337,3.061,367,1.731,386,2.475,407,2.467,468,3.061,469,3.752,474,1.243,480,2.475,492,2.475,539,2.275,549,3.096,582,2.275,617,4.232,629,0.977,631,3.061,634,3.061,654,1.631,757,2.475,759,3.061,783,2.707,785,2.275,793,3.061,794,3.061,795,2.726,796,3.061,797,3.752,799,2.475,800,3.061,820,3.061,839,3.061,845,3.061,866,2.275,871,3.061,947,1.842,948,3.061,951,2.475,952,3.061,991,3.061,998,2.109,1030,2.475,1031,3.752,1032,3.061,1033,2.475,1034,3.752,1036,2.275,1037,2.475,1038,3.061,1046,3.061,1047,3.061,1083,3.061,1088,3.752,1089,3.061,1122,2.475,1123,3.061,1128,3.061,1129,3.061,1170,3.061,1181,2.475,1184,3.061,1192,3.061,1193,3.752,1223,2.109,1318,4.819,1339,3.061,1378,3.061,1380,3.061,1382,3.061,1581,3.061,1582,3.061,1608,3.061,1702,3.061,1721,3.061,1732,3.061,1734,3.061,1735,3.061,1736,3.061,1769,3.061,1797,3.061,1824,3.061,1825,3.569,1826,3.569,1827,3.569,1828,4.914,1829,3.061,1830,6.723,1831,6.562,1832,6.054,1833,4.914,1834,4.914,1835,3.569,1836,3.569,1837,3.569,1838,3.569,1839,3.569,1840,3.569,1841,4.914,1842,3.569,1843,3.569,1844,3.569,1845,3.569,1846,3.569,1847,3.569,1848,3.569,1849,3.569,1850,3.061,1851,3.569,1852,3.569,1853,3.569,1854,3.569,1855,4.914,1856,6.723,1857,3.569,1858,5.62,1859,3.569,1860,4.914,1861,3.569,1862,3.061,1863,3.061,1864,4.214,1865,3.061,1866,5.62,1867,3.061,1868,3.061,1869,3.569,1870,3.569,1871,3.569,1872,3.569,1873,3.569,1874,3.569,1875,3.569,1876,3.569,1877,3.569,1878,3.569,1879,3.061,1880,3.061,1881,3.569]],["title/dependencies.html",[228,3.036,1882,2.314]],["body/dependencies.html",[9,0.189,25,3.656,57,0.02,111,0.841,112,1.836,113,4.026,215,0.016,216,0.016,228,3.656,230,4.026,247,4.825,248,4.028,258,3.115,261,1.935,262,1.935,296,4.521,345,4.026,404,2.557,409,4.521,1652,4.521,1655,4.521,1883,5.273,1884,7.424,1885,5.273,1886,6.319,1887,5.273,1888,5.273,1889,5.273,1890,5.273,1891,5.273,1892,5.273,1893,5.273,1894,5.273,1895,5.273,1896,5.273,1897,5.273,1898,5.273,1899,5.273,1900,5.273,1901,5.273,1902,5.273,1903,5.273,1904,5.273,1905,5.273]],["title/index.html",[35,0.183,1906,3.031,1907,3.031]],["body/index.html",[0,0.4,4,0.209,26,2.05,57,0.016,58,0.847,202,1.29,203,1.051,215,0.016,216,0.016,223,4.305,242,2.966,356,2.167,396,3.481,479,5.26,512,5.26,659,5.68,667,3.481,824,3.481,980,4.684,1104,3.833,1368,4.305,1453,4.305,1458,4.305,1639,4.305,1698,5.68,1882,3.833,1908,6.134,1909,6.624,1910,4.305,1911,5.02,1912,5.02,1913,7.077,1914,7.29,1915,5.02,1916,5.02,1917,5.02,1918,5.02,1919,5.02,1920,5.02,1921,5.02,1922,5.02,1923,6.624,1924,5.02,1925,6.9,1926,5.02,1927,5.02,1928,5.02,1929,6.134,1930,6.9,1931,5.02,1932,6.134,1933,5.02,1934,7.199,1935,5.02,1936,5.02,1937,5.02,1938,6.134,1939,5.02,1940,5.02,1941,5.02,1942,5.02,1943,6.624,1944,5.02,1945,5.02,1946,3.833]],["title/modules.html",[227,3.173]],["body/modules.html",[57,0.017,215,0.017,216,0.017,226,4.08,227,3.75,238,3.75,248,3.75,700,3.476,1947,5.883,1948,5.883,1949,6.738,1950,5.883]],["title/overview.html",[1946,3.801]],["body/overview.html",[1,1.327,2,1.169,57,0.02,98,1.111,145,3.154,171,1.574,173,1.327,176,1.327,178,1.397,180,1.327,182,1.397,184,1.327,186,1.327,188,1.327,190,1.327,192,1.397,194,1.327,195,1.327,199,1.327,201,1.327,204,1.397,207,1.327,209,1.397,211,1.327,215,0.015,216,0.015,225,3.154,226,5.383,227,2.9,228,3.154,229,3.901,230,3.473,231,3.473,232,3.473,233,3.901,234,3.901,235,3.901,236,3.901,237,3.901,238,4.039,239,4.039,240,4.947,241,3.901,242,2.688,303,2.9,630,1.43,758,2.506,1850,3.901,1946,3.473,1951,4.549,1952,4.549,1953,4.549]],["title/properties.html",[36,0.382,1882,2.314]],["body/properties.html",[36,0.519,57,0.018,215,0.018,216,0.018,1910,5.102,1954,5.95]],["title/routes.html",[303,3.173]],["body/routes.html",[57,0.018,215,0.018,216,0.018,303,3.814]],["title/miscellaneous/variables.html",[1955,2.599,1956,3.755]],["body/miscellaneous/variables.html",[15,3.707,17,2.255,18,2.67,19,0.681,35,0.196,41,3.516,42,2.537,43,1.922,56,1.125,57,0.02,59,0.395,61,3.954,63,3.193,71,2.068,73,3.435,78,1.486,79,2.255,80,1.678,81,1.792,87,1.521,88,1.521,96,2.183,100,1.258,121,2.768,152,1.258,174,0.836,196,0.953,212,1.035,215,0.012,216,0.012,303,2.073,304,3.516,306,3.516,308,3.516,310,3.516,313,3.516,317,3.764,322,1.792,323,2.255,340,1.922,342,2.338,356,2.648,358,1.922,359,2.789,367,1.577,368,1.404,369,1.781,375,2.255,377,2.789,412,3.516,413,1.678,418,2.67,420,2.255,421,2.648,465,3.949,474,2.137,494,2.758,510,2.443,511,2.183,554,2.104,555,2.255,557,2.935,577,2.483,578,3.516,580,3.193,614,2.945,654,2.104,657,2.483,658,4.985,692,2.758,736,2.483,757,3.193,761,1.922,771,2.255,772,2.789,783,3.203,814,4.082,863,2.789,891,3.193,998,1.922,1066,2.789,1189,2.483,1190,2.483,1294,3.516,1466,2.789,1477,2.483,1636,2.483,1724,5.262,1730,2.789,1772,2.789,1810,3.949,1829,2.789,1862,2.789,1863,3.949,1864,3.949,1865,3.949,1867,3.949,1868,2.789,1879,2.789,1880,2.789,1955,2.789,1956,2.789,1957,3.252,1958,3.252,1959,4.605,1960,3.252,1961,3.252,1962,3.252,1963,3.252,1964,3.252,1965,3.252,1966,3.252,1967,3.252,1968,3.252,1969,3.252,1970,3.252,1971,3.252,1972,3.252,1973,3.252,1974,3.252,1975,3.252,1976,3.252,1977,3.252,1978,3.252,1979,3.252,1980,3.252,1981,3.252,1982,3.252,1983,3.252,1984,3.252,1985,3.252,1986,4.605,1987,4.605,1988,3.252,1989,5.814,1990,4.605,1991,4.605,1992,3.252,1993,3.252,1994,3.252,1995,3.252,1996,3.252,1997,3.252,1998,3.252,1999,3.252,2000,3.252,2001,3.252,2002,3.252,2003,4.605,2004,4.605,2005,4.605,2006,5.346,2007,5.346,2008,5.346,2009,5.346,2010,4.605,2011,4.605,2012,4.605,2013,3.252,2014,5.814,2015,3.252,2016,3.252,2017,3.252,2018,4.605,2019,3.252,2020,3.252,2021,3.252,2022,3.252,2023,3.252,2024,3.252,2025,3.252,2026,3.252,2027,3.252,2028,3.252,2029,3.252,2030,3.252,2031,4.605,2032,3.252,2033,3.252,2034,3.252,2035,3.252]]],"invertedIndex":[["",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"components/OrderErrorComponent.html":{},"interfaces/OrderProductQuantity.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1954,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":935,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.3s",{"_index":925,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["0.5",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{}}}],["0.5rem",{"_index":1338,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["0.5s",{"_index":1312,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["0.7em",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["0/1",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["0:100",{"_index":916,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["0].quantity",{"_index":602,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["0px",{"_index":937,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{}}}],["1/1",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1641,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["10/13",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":617,"title":{},"body":{"components/BuyProductComponent.html":{},"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"coverage.html":{}}}],["1000",{"_index":462,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ShowProductDetailsComponent.html":{}}}],["10px",{"_index":1303,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["11.6.13",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1269,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["12/12",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["13/15",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1953,"title":{},"body":{"overview.html":{}}}],["15/17",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":1707,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["16",{"_index":1952,"title":{},"body":{"overview.html":{}}}],["16.2.0",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["16.2.1",{"_index":1911,"title":{},"body":{"index.html":{}}}],["16.2.14",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["16/16",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["16/18",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":933,"title":{},"body":{"components/HomeComponent.html":{}}}],["19.0.0",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["192",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["198754",{"_index":1300,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["1px",{"_index":1326,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["2",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/UserComponent.html":{},"overview.html":{}}}],["2.0.5",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1850,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["200px",{"_index":1293,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["206",{"_index":158,"title":{},"body":{"components/AdminComponent.html":{}}}],["20px",{"_index":1706,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["21/23",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":1306,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["24",{"_index":945,"title":{},"body":{"components/HomeComponent.html":{}}}],["247",{"_index":1305,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["25/25",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":1277,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["3",{"_index":616,"title":{},"body":{"components/BuyProductComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{}}}],["3/3",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"components/UserComponent.html":{}}}],["32em",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["36a2eb",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["3px",{"_index":1298,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["4",{"_index":627,"title":{},"body":{"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{}}}],["4.0.0",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["4.4.8",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":449,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/RegisterComponent.html":{}}}],["401",{"_index":360,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["403",{"_index":362,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["40px",{"_index":919,"title":{},"body":{"components/HomeComponent.html":{}}}],["45",{"_index":944,"title":{},"body":{"components/HomeComponent.html":{}}}],["5",{"_index":1119,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["5.3.3",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1318,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"coverage.html":{}}}],["500",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{},"components/SaveProductComponent.html":{}}}],["514",{"_index":1255,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["576px",{"_index":1701,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["6.7.2",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1376,"title":{},"body":{"components/RegisterComponent.html":{}}}],["66",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1951,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["700px",{"_index":1330,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["71",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["750px",{"_index":922,"title":{},"body":{"components/HomeComponent.html":{}}}],["76",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["768",{"_index":1260,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["768px",{"_index":938,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["8",{"_index":701,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["8/10",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1832,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["88",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":932,"title":{},"body":{"components/HomeComponent.html":{}}}],["91",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["991px",{"_index":943,"title":{},"body":{"components/HomeComponent.html":{}}}],["_",{"_index":725,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["abrir",{"_index":1514,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["accedemos",{"_index":1244,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["acceder",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/ForbiddenComponent.html":{},"miscellaneous/variables.html":{}}}],["acción",{"_index":1512,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["accordingly",{"_index":1213,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["account",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["action",{"_index":742,"title":{},"body":{"components/CartComponent.html":{},"components/SearchBarComponent.html":{}}}],["actions",{"_index":1168,"title":{},"body":{"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["activa",{"_index":1279,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["activatedroute",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/UserComponent.html":{}}}],["active",{"_index":1714,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["active>.page",{"_index":1710,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["actual",{"_index":464,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{}}}],["actual_component",{"_index":214,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["actualizar",{"_index":1481,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["add",{"_index":202,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["added",{"_index":1264,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["adding",{"_index":1383,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["addnewproduct",{"_index":324,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["addproduct",{"_index":1390,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["addproduct(productform",{"_index":1402,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["address",{"_index":619,"title":{},"body":{"components/BuyProductComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["adds",{"_index":376,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ProductViewDetailsComponent.html":{}}}],["addtocart",{"_index":1199,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["addtocart(productid",{"_index":1215,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["addtoken",{"_index":363,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["addtoken(request",{"_index":371,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["admin",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/DashboardService.html":{},"components/HeaderComponent.html":{},"injectables/UserAuthService.html":{}}}],["admin'},{'name",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["admin.component.css",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.resolver",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["admin.resolver.ts",{"_index":1865,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["admincomponent",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminrole",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"injectables/UserAuthService.html":{}}}],["again",{"_index":428,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["agregamos",{"_index":1187,"title":{},"body":{"interfaces/Product.html":{}}}],["agregar",{"_index":435,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/SaveProductComponent.html":{}}}],["ajustar",{"_index":1545,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["al",{"_index":577,"title":{},"body":{"components/BuyProductComponent.html":{},"components/SaveProductComponent.html":{},"miscellaneous/variables.html":{}}}],["alguno",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":1423,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["allowed",{"_index":844,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserService.html":{}}}],["allowedroles",{"_index":1811,"title":{},"body":{"injectables/UserService.html":{}}}],["allowedroles.includes(role",{"_index":1822,"title":{},"body":{"injectables/UserService.html":{}}}],["allowing",{"_index":1609,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["allows",{"_index":471,"title":{},"body":{"components/BuyProductComponent.html":{},"components/SearchBarComponent.html":{}}}],["almacenada",{"_index":1117,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["alongside",{"_index":1731,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["already",{"_index":1360,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alt]=\"product.productname",{"_index":912,"title":{},"body":{"components/HomeComponent.html":{}}}],["alternate",{"_index":625,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["alternatecontactnumber",{"_index":543,"title":{},"body":{"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{}}}],["altura",{"_index":1328,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["always",{"_index":827,"title":{},"body":{"components/FooterComponent.html":{}}}],["amount",{"_index":504,"title":{},"body":{"components/BuyProductComponent.html":{},"interfaces/DataPayment.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/UserComponent.html":{}}}],["amp",{"_index":1377,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ancho",{"_index":1335,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["angular",{"_index":659,"title":{},"body":{"components/CartComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1885,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"components/BuyProductComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FileHandle.html":{},"dependencies.html":{}}}],["angular/router",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["animación",{"_index":1314,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["animation",{"_index":1310,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["another",{"_index":1364,"title":{},"body":{"components/RegisterComponent.html":{}}}],["api",{"_index":657,"title":{},"body":{"components/CartComponent.html":{},"injectables/PaymentService.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":761,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["aplica",{"_index":1313,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["app",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["app.component",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":171,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":824,"title":{},"body":{"components/FooterComponent.html":{},"components/SaveProductComponent.html":{},"components/SpinnerComponent.html":{},"index.html":{}}}],["application/json",{"_index":1492,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["application/pdf",{"_index":1677,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["application/vnd.openxmlformats",{"_index":1693,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["applies",{"_index":1146,"title":{},"body":{"components/OrdersComponent.html":{}}}],["apply",{"_index":1143,"title":{},"body":{"components/OrdersComponent.html":{}}}],["appmodule",{"_index":226,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":238,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archivo",{"_index":1515,"title":{},"body":{"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["area",{"_index":1431,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["arguments",{"_index":1205,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["arrastrar",{"_index":1513,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["array",{"_index":683,"title":{},"body":{"components/CartComponent.html":{},"injectables/DashboardService.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{}}}],["array.from",{"_index":723,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["array.from(input.files",{"_index":1523,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["artifacts",{"_index":1926,"title":{},"body":{"index.html":{}}}],["asegura",{"_index":1331,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["associated",{"_index":976,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["attach",{"_index":385,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["attaches",{"_index":344,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["autenticado",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":350,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/UserService.html":{}}}],["auth.service",{"_index":406,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProductViewDetailsComponent.html":{},"injectables/UserService.html":{}}}],["auth.service.ts",{"_index":1736,"title":{},"body":{"injectables/UserAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:15",{"_index":1753,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:23",{"_index":1743,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:34",{"_index":1755,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:43",{"_index":1746,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:51",{"_index":1742,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:59",{"_index":1749,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:7",{"_index":1741,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:70",{"_index":1748,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.service.ts:79",{"_index":1751,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth/auth.guard",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.interceptor",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticated",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":340,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":239,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authorization",{"_index":377,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":920,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["automatically",{"_index":1918,"title":{},"body":{"index.html":{}}}],["available",{"_index":700,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{},"modules.html":{}}}],["azul",{"_index":1302,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["añadir",{"_index":411,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/SaveProductComponent.html":{}}}],["backend",{"_index":883,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["background",{"_index":1717,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["backgroundcolor",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["bar",{"_index":1583,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar'},{'name",{"_index":206,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["bar.component",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.css",{"_index":1589,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.html",{"_index":1590,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts",{"_index":1582,"title":{},"body":{"components/SearchBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:15",{"_index":1595,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:16",{"_index":1597,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:18",{"_index":1599,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:20",{"_index":1598,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar/search",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"components/SearchBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":1179,"title":{},"body":{"injectables/PaymentService.html":{}}}],["base64",{"_index":908,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/SaveProductComponent.html":{}}}],["based",{"_index":692,"title":{},"body":{"components/CartComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":456,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/UserAuthService.html":{}}}],["before",{"_index":2008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behavior",{"_index":1426,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["being",{"_index":1238,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["best",{"_index":780,"title":{},"body":{"injectables/DashboardService.html":{}}}],["between",{"_index":615,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["bg",{"_index":748,"title":{},"body":{"components/CartComponent.html":{}}}],["big",{"_index":1324,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["blob",{"_index":811,"title":{},"body":{"injectables/FileService.html":{},"components/ShowProductDetailsComponent.html":{}}}],["blob([data",{"_index":1676,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["blob([json.stringify(existingimagenames",{"_index":1507,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["blob([json.stringify(this.product",{"_index":1491,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["boolean",{"_index":397,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/HeaderComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["borde",{"_index":1301,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["border",{"_index":1297,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["bordercolor",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["borderwidth",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["bottom",{"_index":1708,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["bounce",{"_index":1311,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["box",{"_index":927,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["browse",{"_index":1949,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FileHandle.html":{},"components/SaveProductComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":1713,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["build",{"_index":1925,"title":{},"body":{"index.html":{}}}],["business",{"_index":1120,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["buy",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["buyproduct",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProductViewDetailsComponent.html":{}}}],["buyproduct(productid",{"_index":1217,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["buyproductcomponent",{"_index":173,"title":{"components/BuyProductComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buyproductresolver",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["búsqueda",{"_index":1606,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["cabecera",{"_index":414,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/SaveProductComponent.html":{}}}],["calc(50",{"_index":1337,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["calculated",{"_index":513,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["calculates",{"_index":499,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["calls",{"_index":658,"title":{},"body":{"components/CartComponent.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cantidad",{"_index":611,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["canvas",{"_index":163,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["capabilities",{"_index":1941,"title":{},"body":{"index.html":{}}}],["capturing",{"_index":1584,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["card",{"_index":917,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["card:focus",{"_index":930,"title":{},"body":{"components/HomeComponent.html":{}}}],["card:hover",{"_index":929,"title":{},"body":{"components/HomeComponent.html":{}}}],["cargar",{"_index":1466,"title":{},"body":{"components/SaveProductComponent.html":{},"miscellaneous/variables.html":{}}}],["cart",{"_index":330,"title":{"interfaces/Cart.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"components/HeaderComponent.html":{},"components/ProductViewDetailsComponent.html":{},"coverage.html":{}}}],["cart'},{'name",{"_index":177,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["cart.component.css",{"_index":638,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.component.html",{"_index":639,"title":{},"body":{"components/CartComponent.html":{}}}],["cartcomponent",{"_index":176,"title":{"components/CartComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cartdetails",{"_index":640,"title":{},"body":{"components/CartComponent.html":{}}}],["cartid",{"_index":632,"title":{},"body":{"interfaces/Cart.html":{}}}],["cartitem.productentity.productactualprice",{"_index":745,"title":{},"body":{"components/CartComponent.html":{}}}],["cartitem.productentity.productdescription",{"_index":744,"title":{},"body":{"components/CartComponent.html":{}}}],["cartitem.productentity.productdiscountedprice",{"_index":749,"title":{},"body":{"components/CartComponent.html":{}}}],["cartitem.productentity.productname",{"_index":743,"title":{},"body":{"components/CartComponent.html":{}}}],["case",{"_index":534,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["catcherror",{"_index":402,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{}}}],["catcherror((err",{"_index":439,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["catcherror((error",{"_index":2003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categorized",{"_index":92,"title":{},"body":{"components/AdminComponent.html":{}}}],["center",{"_index":1280,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["centra",{"_index":1281,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["change",{"_index":1920,"title":{},"body":{"index.html":{}}}],["changed",{"_index":1232,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["changepage",{"_index":647,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["changepage(page",{"_index":661,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["changes",{"_index":663,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["changestatus",{"_index":1133,"title":{},"body":{"components/OrdersComponent.html":{}}}],["changestatus(id",{"_index":1138,"title":{},"body":{"components/OrdersComponent.html":{}}}],["character",{"_index":1375,"title":{},"body":{"components/RegisterComponent.html":{}}}],["characters",{"_index":618,"title":{},"body":{"components/BuyProductComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{}}}],["chart",{"_index":84,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["chart.js",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["chartdata",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["chartdataordersbystatus",{"_index":37,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["chartdatasalespermonth",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["chartdatatopselling",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{}}}],["chartoptions",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["charts",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["check",{"_index":396,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/CartComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["checkout",{"_index":648,"title":{},"body":{"components/CartComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["checks",{"_index":353,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/ProductViewDetailsComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{}}}],["choice",{"_index":1937,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1363,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chosen",{"_index":1230,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["class",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["class=\"badge",{"_index":747,"title":{},"body":{"components/CartComponent.html":{}}}],["class=\"card",{"_index":910,"title":{},"body":{"components/HomeComponent.html":{}}}],["class=\"row",{"_index":1267,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["clave",{"_index":1250,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["clear",{"_index":1574,"title":{},"body":{"components/SaveProductComponent.html":{},"injectables/UserAuthService.html":{}}}],["cleared",{"_index":573,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["clearform",{"_index":1391,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["clearform(productform",{"_index":1406,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["clearing",{"_index":864,"title":{},"body":{"components/HeaderComponent.html":{}}}],["clears",{"_index":1408,"title":{},"body":{"components/SaveProductComponent.html":{},"injectables/UserAuthService.html":{}}}],["cli",{"_index":1909,"title":{},"body":{"index.html":{}}}],["click",{"_index":1577,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["client",{"_index":1174,"title":{},"body":{"injectables/PaymentService.html":{}}}],["clonar",{"_index":432,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["cloned",{"_index":379,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["clonedrequest",{"_index":436,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["clones",{"_index":374,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["cluster_appmodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1921,"title":{},"body":{"index.html":{}}}],["col",{"_index":1268,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["color",{"_index":1712,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["command",{"_index":1938,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":838,"title":{},"body":{"components/FooterComponent.html":{}}}],["communicates",{"_index":992,"title":{},"body":{"components/LoginComponent.html":{}}}],["como",{"_index":1284,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{}}}],["completa",{"_index":1668,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["component",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":169,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"overview.html":{}}}],["components/admin/admin.component",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/buy",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/cart/cart.component",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/forbidden/forbidden.component",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/home/home.component",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/my",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/order",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/orders/orders.component",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/product",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/register/register.component",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/save",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/shared/footer/footer.component",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["components/shared/header/header.component",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["components/shared/search",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["components/shared/spinner/spinner.component",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["components/show",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/user/user.component",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["comportamiento",{"_index":1510,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["comprobar",{"_index":423,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["configura",{"_index":1786,"title":{},"body":{"components/UserComponent.html":{}}}],["configuration",{"_index":1779,"title":{},"body":{"components/UserComponent.html":{}}}],["configurations",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{}}}],["configures",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["confirmation",{"_index":1096,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["confirmation'},{'name",{"_index":191,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["confirmation.component",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirmation.component.css",{"_index":1097,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["confirmation.component.html",{"_index":1098,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["confirmation.component.ts",{"_index":1089,"title":{},"body":{"components/OrderConfirmationComponent.html":{},"coverage.html":{}}}],["confirmation.component.ts:18",{"_index":1106,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["confirmation.component.ts:24",{"_index":1100,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["confirmation.component.ts:33",{"_index":1105,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["confirmation.component.ts:45",{"_index":1101,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["confirmation/order",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/OrderConfirmationComponent.html":{},"coverage.html":{}}}],["confirming",{"_index":1090,"title":{},"body":{"components/OrderConfirmationComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["console.error('código",{"_index":1482,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["console.error('error",{"_index":580,"title":{},"body":{"components/BuyProductComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["console.error('product",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error(err",{"_index":1489,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["console.log('cart",{"_index":572,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["console.log('datos",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["constructor(activatedroute",{"_index":491,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["constructor(http",{"_index":767,"title":{},"body":{"injectables/DashboardService.html":{}}}],["constructor(httpclient",{"_index":808,"title":{},"body":{"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{},"injectables/DashboardService.html":{},"components/UserComponent.html":{}}}],["constructor(productservice",{"_index":877,"title":{},"body":{"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["constructor(route",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/UserComponent.html":{}}}],["constructor(toastrservice",{"_index":653,"title":{},"body":{"components/CartComponent.html":{}}}],["constructor(userauthservice",{"_index":366,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{}}}],["constructor(userservice",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["construir",{"_index":1667,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["contact",{"_index":620,"title":{},"body":{"components/BuyProductComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["contactnumber",{"_index":542,"title":{},"body":{"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{}}}],["contain",{"_index":1296,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["containing",{"_index":530,"title":{},"body":{"components/BuyProductComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/OrderConfirmationComponent.html":{},"injectables/PaymentService.html":{},"components/SaveProductComponent.html":{},"injectables/UserService.html":{}}}],["contenedor",{"_index":1332,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["content",{"_index":756,"title":{},"body":{"components/CartComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["contienen",{"_index":1247,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["controls",{"_index":686,"title":{},"body":{"components/CartComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["copy",{"_index":835,"title":{},"body":{"components/FooterComponent.html":{}}}],["copyright",{"_index":834,"title":{},"body":{"components/FooterComponent.html":{}}}],["correspondiente",{"_index":1566,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["corresponding",{"_index":666,"title":{},"body":{"components/CartComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["corto",{"_index":1549,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["count",{"_index":775,"title":{},"body":{"injectables/DashboardService.html":{}}}],["coverage",{"_index":1824,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crear",{"_index":719,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["create",{"_index":1488,"title":{},"body":{"components/SaveProductComponent.html":{},"injectables/UserService.html":{}}}],["created",{"_index":1355,"title":{},"body":{"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{}}}],["createorder",{"_index":1099,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["createproduct",{"_index":1392,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["createproduct(formdata",{"_index":1409,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["creates",{"_index":54,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/SaveProductComponent.html":{}}}],["creating",{"_index":1365,"title":{},"body":{"components/RegisterComponent.html":{}}}],["creation",{"_index":1456,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["credentials",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["csv",{"_index":803,"title":{},"body":{"injectables/FileService.html":{},"components/ShowProductDetailsComponent.html":{}}}],["cualquier",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currency",{"_index":585,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"interfaces/DataPayment.html":{},"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/UserComponent.html":{}}}],["currency:'eur",{"_index":1700,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["currency:\\'eur",{"_index":1720,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["current",{"_index":664,"title":{},"body":{"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["currently",{"_index":1241,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["currentpage",{"_index":641,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["currenttime",{"_index":460,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["currentyear",{"_index":831,"title":{},"body":{"components/FooterComponent.html":{}}}],["cursor",{"_index":1716,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["custom",{"_index":1427,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["dashboard",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"injectables/DashboardService.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["dashboardadminresolver",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboarddata",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["dashboardservice",{"_index":757,"title":{"injectables/DashboardService.html":{}},"body":{"injectables/DashboardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboardservice.getlastfourorders",{"_index":2025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboardservice.getordersbyorderstatus",{"_index":2018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboardservice.getsalespermonth",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboardservice.getsalespermonthadmin",{"_index":2019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboardservice.gettopsellingproducts",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboarduserresolver",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":18,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"injectables/DashboardService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["data.ts",{"_index":1380,"title":{},"body":{"interfaces/SalesData.html":{},"coverage.html":{}}}],["data:${img.type};base64,${img.picbyte",{"_index":1671,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["data['product",{"_index":1252,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["data['productdetails",{"_index":561,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["datapayment",{"_index":582,"title":{"interfaces/DataPayment.html":{}},"body":{"components/BuyProductComponent.html":{},"interfaces/DataPayment.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["datasets",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["date",{"_index":1788,"title":{},"body":{"components/UserComponent.html":{}}}],["date().getfullyear",{"_index":832,"title":{},"body":{"components/FooterComponent.html":{}}}],["datos",{"_index":558,"title":{},"body":{"components/BuyProductComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/UserComponent.html":{}}}],["days",{"_index":1121,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["dd/mm/yyyy",{"_index":1791,"title":{},"body":{"components/UserComponent.html":{}}}],["de",{"_index":554,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decode",{"_index":409,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"dependencies.html":{}}}],["decoded",{"_index":458,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["decoded.exp",{"_index":467,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["decorators",{"_index":1226,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{}}}],["default",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultimage",{"_index":905,"title":{},"body":{"components/HomeComponent.html":{}}}],["defecto",{"_index":1511,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["define",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["del",{"_index":559,"title":{},"body":{"components/BuyProductComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/UserComponent.html":{}}}],["delete",{"_index":649,"title":{},"body":{"components/CartComponent.html":{},"injectables/ImageServiceService.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["delete(id",{"_index":670,"title":{},"body":{"components/CartComponent.html":{}}}],["delete(productid",{"_index":1622,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["deleted",{"_index":1624,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["deleteimage",{"_index":958,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["deleteimage(id",{"_index":963,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["deletes",{"_index":672,"title":{},"body":{"components/CartComponent.html":{},"injectables/ImageServiceService.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["deleting",{"_index":956,"title":{},"body":{"injectables/ImageServiceService.html":{},"components/ShowProductDetailsComponent.html":{}}}],["deletion",{"_index":967,"title":{},"body":{"injectables/ImageServiceService.html":{},"components/ShowProductDetailsComponent.html":{}}}],["delivered",{"_index":1118,"title":{},"body":{"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{}}}],["dependencies",{"_index":228,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desborde",{"_index":1291,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["descargar",{"_index":1680,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DataPayment.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["desktop",{"_index":1234,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["details",{"_index":474,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["details'},{'name",{"_index":198,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["details.component",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["details.component.css",{"_index":1194,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["details.component.html",{"_index":1195,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts",{"_index":1193,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:102",{"_index":1632,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:106",{"_index":1221,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["details.component.ts:121",{"_index":1623,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:149",{"_index":1626,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:157",{"_index":1635,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:169",{"_index":1630,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":1233,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["details.component.ts:190",{"_index":1627,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":1236,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["details.component.ts:214",{"_index":1629,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:23",{"_index":1240,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["details.component.ts:242",{"_index":1633,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:25",{"_index":1642,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":1645,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:31",{"_index":1644,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:32",{"_index":1204,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["details.component.ts:34",{"_index":1638,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:37",{"_index":1649,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:40",{"_index":1648,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:43",{"_index":1224,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:46",{"_index":1640,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:49",{"_index":1643,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:52",{"_index":1620,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:62",{"_index":1208,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:70",{"_index":1229,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["details.component.ts:71",{"_index":1631,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:79",{"_index":1218,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["details.component.ts:91",{"_index":1621,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["details.component.ts:92",{"_index":1216,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["details.ts",{"_index":1038,"title":{},"body":{"interfaces/MyOrderDetails.html":{},"coverage.html":{}}}],["details/product",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProductViewDetailsComponent.html":{},"coverage.html":{}}}],["details/show",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ShowProductDetailsComponent.html":{},"coverage.html":{}}}],["detects",{"_index":1209,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["determine",{"_index":847,"title":{},"body":{"components/HeaderComponent.html":{}}}],["determines",{"_index":1728,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["dev",{"_index":1916,"title":{},"body":{"index.html":{}}}],["development",{"_index":1912,"title":{},"body":{"index.html":{}}}],["device",{"_index":1235,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["different",{"_index":1611,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["digit",{"_index":1370,"title":{},"body":{"components/RegisterComponent.html":{}}}],["directive",{"_index":167,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["directives",{"_index":213,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1924,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1928,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":1715,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["discount",{"_index":750,"title":{},"body":{"components/CartComponent.html":{}}}],["discounted",{"_index":741,"title":{},"body":{"components/CartComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{}}}],["display",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/UserComponent.html":{}}}],["displayed",{"_index":685,"title":{},"body":{"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HomeComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{}}}],["displaying",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["displays",{"_index":1636,"title":{},"body":{"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["disponible",{"_index":1540,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["dist",{"_index":1927,"title":{},"body":{"index.html":{}}}],["div",{"_index":1709,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["document.createelement('a",{"_index":1685,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["documentation",{"_index":1825,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["don't",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["downloads",{"_index":801,"title":{},"body":{"injectables/FileService.html":{},"components/ShowProductDetailsComponent.html":{}}}],["drag",{"_index":1575,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["dragevent",{"_index":1420,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["dragged",{"_index":1429,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["dragover",{"_index":1422,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["drop",{"_index":1424,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["dropped",{"_index":1434,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["dto",{"_index":787,"title":{},"body":{"injectables/DashboardService.html":{},"components/UserComponent.html":{}}}],["dto.ts",{"_index":1083,"title":{},"body":{"interfaces/OrderAndProductDto.html":{},"coverage.html":{}}}],["during",{"_index":1125,"title":{},"body":{"components/OrderErrorComponent.html":{}}}],["dynamic",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":825,"title":{},"body":{"components/FooterComponent.html":{}}}],["e",{"_index":837,"title":{},"body":{"components/FooterComponent.html":{},"components/SaveProductComponent.html":{}}}],["e.g",{"_index":1435,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["e.target.result.split(',')[1",{"_index":1551,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["e2e",{"_index":1935,"title":{},"body":{"index.html":{}}}],["ease",{"_index":926,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["ecommerce",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["edit",{"_index":1446,"title":{},"body":{"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["editing",{"_index":1384,"title":{},"body":{"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["editproduct",{"_index":1393,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["editproduct(formdata",{"_index":1411,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["editproduct/:productid",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["editproductdetails",{"_index":1615,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["editproductdetails(productid",{"_index":1625,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["el",{"_index":421,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["elementref",{"_index":1450,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["elements",{"_index":706,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/OrdersComponent.html":{}}}],["eliminamos",{"_index":1115,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["eliminar",{"_index":1565,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["emite",{"_index":1604,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["emits",{"_index":1588,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["emitting",{"_index":1585,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["empty",{"_index":533,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["emptycart",{"_index":740,"title":{},"body":{"components/CartComponent.html":{}}}],["en",{"_index":465,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["encoded",{"_index":971,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["end",{"_index":1934,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1802,"title":{},"body":{"injectables/UserService.html":{}}}],["enter",{"_index":473,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["entered",{"_index":892,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["environment",{"_index":783,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":781,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserService.html":{}}}],["err",{"_index":450,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["err.error",{"_index":726,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["err.error?.message",{"_index":1166,"title":{},"body":{"components/OrdersComponent.html":{}}}],["err.message",{"_index":1167,"title":{},"body":{"components/OrdersComponent.html":{}}}],["err.status",{"_index":440,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/SaveProductComponent.html":{}}}],["error",{"_index":342,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["error'},{'name",{"_index":193,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["error(\"something",{"_index":451,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["error('invalid",{"_index":592,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["error.component",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["error.component.css",{"_index":1126,"title":{},"body":{"components/OrderErrorComponent.html":{}}}],["error.component.html",{"_index":1127,"title":{},"body":{"components/OrderErrorComponent.html":{}}}],["error.component.ts",{"_index":1123,"title":{},"body":{"components/OrderErrorComponent.html":{},"coverage.html":{}}}],["error.error",{"_index":1075,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["error.status",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["error/order",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"components/OrderErrorComponent.html":{},"coverage.html":{}}}],["error?.error?.message",{"_index":1661,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["errormessage",{"_index":1660,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["errorresponse",{"_index":1357,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errorresponse.error",{"_index":1359,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errorresponse.status",{"_index":1358,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errors",{"_index":359,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["es",{"_index":1249,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["est",{"_index":415,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["estado",{"_index":1483,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["esto",{"_index":1546,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["eur",{"_index":586,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["event",{"_index":1206,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{}}}],["event.datatransfer?.files",{"_index":1516,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["event.preventdefault",{"_index":1508,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["event.target",{"_index":1520,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["eventemitter",{"_index":1596,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["evento",{"_index":1603,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["events",{"_index":1586,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["evita",{"_index":1288,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["excel",{"_index":804,"title":{},"body":{"injectables/FileService.html":{},"components/ShowProductDetailsComponent.html":{}}}],["execute",{"_index":1932,"title":{},"body":{"index.html":{}}}],["existentes",{"_index":1467,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["existing",{"_index":1413,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["existingimagenames",{"_index":1501,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["exists",{"_index":1361,"title":{},"body":{"components/RegisterComponent.html":{}}}],["expirada",{"_index":446,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["expirado",{"_index":424,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["expired",{"_index":354,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["export",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"components/OrderErrorComponent.html":{},"interfaces/OrderProductQuantity.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["exporting",{"_index":1610,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["exports",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["fadeinscale",{"_index":1320,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["fails",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HeaderComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":814,"title":{},"body":{"injectables/FileService.html":{},"components/SaveProductComponent.html":{},"miscellaneous/variables.html":{}}}],["fetches",{"_index":665,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["fetching",{"_index":2007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff6384",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["ffffff27",{"_index":1719,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"components/OrderErrorComponent.html":{},"interfaces/OrderProductQuantity.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["file.name",{"_index":1499,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["file.type",{"_index":1550,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["filehandle",{"_index":795,"title":{"interfaces/FileHandle.html":{}},"body":{"interfaces/FileHandle.html":{},"coverage.html":{}}}],["filereader",{"_index":1533,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["files",{"_index":1458,"title":{},"body":{"components/SaveProductComponent.html":{},"index.html":{}}}],["files.foreach(file",{"_index":1530,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["files.length",{"_index":1527,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["files?.length",{"_index":1517,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["fileservice",{"_index":799,"title":{"injectables/FileService.html":{}},"body":{"injectables/FileService.html":{},"components/ShowProductDetailsComponent.html":{},"coverage.html":{}}}],["filter",{"_index":696,"title":{},"body":{"components/CartComponent.html":{},"components/OrdersComponent.html":{}}}],["filteredproduct",{"_index":595,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["filteredproduct[0].quantity",{"_index":599,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["filtering",{"_index":704,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["filterorders",{"_index":1134,"title":{},"body":{"components/OrdersComponent.html":{}}}],["filterorders(status",{"_index":1144,"title":{},"body":{"components/OrdersComponent.html":{}}}],["filtrar",{"_index":1564,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["finalize",{"_index":1656,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["first",{"_index":1368,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["fit",{"_index":1295,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["five",{"_index":779,"title":{},"body":{"injectables/DashboardService.html":{}}}],["flag",{"_index":1212,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["footer",{"_index":822,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":179,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["footer.component.css",{"_index":829,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":830,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":178,"title":{"components/FooterComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forbidden",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/ForbiddenComponent.html":{},"miscellaneous/variables.html":{}}}],["forbidden'},{'name",{"_index":181,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["forbidden.component.css",{"_index":842,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbidden.component.html",{"_index":843,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["forbiddencomponent",{"_index":180,"title":{"components/ForbiddenComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forkjoin",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form",{"_index":529,"title":{},"body":{"components/BuyProductComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{}}}],["format",{"_index":973,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["formats",{"_index":1612,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["formdata",{"_index":984,"title":{},"body":{"injectables/ImageServiceService.html":{},"components/SaveProductComponent.html":{}}}],["formdata.append('existingimages",{"_index":1506,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["formdata.append('file",{"_index":985,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["formdata.append('imagefile",{"_index":1498,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["formdata.append('product",{"_index":1493,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["formsmodule",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/fontawesome",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}],["four",{"_index":772,"title":{},"body":{"injectables/DashboardService.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["fuera",{"_index":1336,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["full",{"_index":613,"title":{},"body":{"components/BuyProductComponent.html":{},"components/MyOrdersComponent.html":{}}}],["fulladdress",{"_index":541,"title":{},"body":{"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{}}}],["fullname",{"_index":540,"title":{},"body":{"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{}}}],["functionalities",{"_index":1131,"title":{},"body":{"components/OrdersComponent.html":{}}}],["functionality",{"_index":637,"title":{},"body":{"components/CartComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{}}}],["further",{"_index":1942,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1271,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["generate",{"_index":1698,"title":{},"body":{"components/ShowProductDetailsComponent.html":{},"index.html":{}}}],["generatecsv",{"_index":1616,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["generated",{"_index":1639,"title":{},"body":{"components/ShowProductDetailsComponent.html":{},"index.html":{}}}],["generateexcel",{"_index":1617,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["generatepdf",{"_index":1618,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["generates",{"_index":1628,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["generating",{"_index":1681,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["getallorderspaginated",{"_index":1135,"title":{},"body":{"components/OrdersComponent.html":{}}}],["getallorderspaginated(page",{"_index":1147,"title":{},"body":{"components/OrdersComponent.html":{}}}],["getallproductspaginated",{"_index":875,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["getallproductspaginated(page",{"_index":880,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["getcalculatedgrandtotal",{"_index":485,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["getcalculatedtotal",{"_index":486,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["getcalculatedtotal(product.productid",{"_index":628,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["getcalculatedtotal(productid",{"_index":505,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["getcartdetailspaginated",{"_index":650,"title":{},"body":{"components/CartComponent.html":{}}}],["getcartdetailspaginated(page",{"_index":675,"title":{},"body":{"components/CartComponent.html":{}}}],["getcsv",{"_index":805,"title":{},"body":{"injectables/FileService.html":{}}}],["getexcel",{"_index":806,"title":{},"body":{"injectables/FileService.html":{}}}],["getimageasbase64",{"_index":959,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["getimageasbase64(imageid",{"_index":969,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["getlastfourorders",{"_index":762,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getmyorderspaginated",{"_index":1050,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["getmyorderspaginated(page",{"_index":1054,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["getordersbyorderstatus",{"_index":763,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getpdf",{"_index":807,"title":{},"body":{"injectables/FileService.html":{}}}],["getproduct",{"_index":1394,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["getproduct(productid",{"_index":1414,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["getproductimages",{"_index":960,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["getproductimages(productid",{"_index":974,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["getquantityforproduct",{"_index":487,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["getquantityforproduct(productid",{"_index":514,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["getroles",{"_index":1737,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["gets",{"_index":1057,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["getsalespermonth",{"_index":764,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getsalespermonthadmin",{"_index":765,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getting",{"_index":1906,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1738,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["gettopsellingproducts",{"_index":766,"title":{},"body":{"injectables/DashboardService.html":{}}}],["geturlpaypalpayment",{"_index":1172,"title":{},"body":{"injectables/PaymentService.html":{}}}],["geturlpaypalpayment(datapayment",{"_index":1176,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getvisiblepages",{"_index":651,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["given",{"_index":395,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/OrdersComponent.html":{}}}],["go",{"_index":1945,"title":{},"body":{"index.html":{}}}],["grand",{"_index":500,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["grandtotal",{"_index":603,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["graph",{"_index":1950,"title":{},"body":{"modules.html":{}}}],["graphs",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{}}}],["greater",{"_index":1572,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["grey",{"_index":1718,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["grid",{"_index":1278,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["grouped",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{},"injectables/DashboardService.html":{}}}],["gráficos",{"_index":1787,"title":{},"body":{"components/UserComponent.html":{}}}],["guard",{"_index":1983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guardar",{"_index":1543,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["ha",{"_index":443,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["handle",{"_index":386,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/FileHandle.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["handler",{"_index":388,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["handles",{"_index":358,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"miscellaneous/variables.html":{}}}],["handling",{"_index":339,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"injectables/PaymentService.html":{},"components/SaveProductComponent.html":{}}}],["hasta",{"_index":1541,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["hay",{"_index":1495,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["header",{"_index":351,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":183,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["header.component.css",{"_index":849,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":850,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":182,"title":{"components/HeaderComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":392,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/UserService.html":{}}}],["height",{"_index":921,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["help",{"_index":1943,"title":{},"body":{"index.html":{}}}],["here",{"_index":1576,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["hh:mm",{"_index":1792,"title":{},"body":{"components/UserComponent.html":{}}}],["hidden",{"_index":1287,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["holds",{"_index":1237,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["home",{"_index":870,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":185,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["home.component.css",{"_index":873,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":874,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":184,"title":{"components/HomeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hook",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{}}}],["horizontal",{"_index":1283,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["hostlistener",{"_index":1242,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["hostlistener('window:resize",{"_index":1227,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["hostlisteners",{"_index":1202,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["html",{"_index":165,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["htmlinputelement",{"_index":1521,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["http",{"_index":338,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/DashboardService.html":{},"injectables/PaymentService.html":{}}}],["http://localhost:4200",{"_index":1917,"title":{},"body":{"index.html":{}}}],["http://localhost:8081/api/v1",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":768,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":399,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpevent",{"_index":400,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":382,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaders",{"_index":1814,"title":{},"body":{"injectables/UserService.html":{}}}],["httpinterceptor",{"_index":401,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":372,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["id",{"_index":511,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":947,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"coverage.html":{}}}],["image.name",{"_index":1503,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["image/png",{"_index":1475,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["imagechanged",{"_index":1196,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["imageid",{"_index":972,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["imagen",{"_index":1289,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{}}}],["imagepreviews",{"_index":1386,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["imagepreviewsection",{"_index":1387,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["images",{"_index":957,"title":{},"body":{"injectables/ImageServiceService.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["imageservice",{"_index":1400,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["imageserviceservice",{"_index":951,"title":{"injectables/ImageServiceService.html":{}},"body":{"injectables/ImageServiceService.html":{},"components/SaveProductComponent.html":{},"coverage.html":{}}}],["img",{"_index":911,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["img.fade",{"_index":1325,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["img.id",{"_index":1472,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["img.name",{"_index":1473,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["img.picbyte",{"_index":1476,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["img.shortname",{"_index":1474,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["implements",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["import",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/FileHandle.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["importa",{"_index":1653,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["important",{"_index":1703,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["importar",{"_index":552,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["imports",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["imágenes",{"_index":1191,"title":{},"body":{"interfaces/Product.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["included",{"_index":1813,"title":{},"body":{"injectables/UserService.html":{}}}],["including",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"interfaces/OrderProductQuantity.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1723,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["indicates",{"_index":536,"title":{},"body":{"components/BuyProductComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{}}}],["indicating",{"_index":965,"title":{},"body":{"injectables/ImageServiceService.html":{},"components/ShowProductDetailsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"components/OrderErrorComponent.html":{},"interfaces/OrderProductQuantity.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["information",{"_index":546,"title":{},"body":{"components/BuyProductComponent.html":{},"components/UserComponent.html":{}}}],["inicia",{"_index":444,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["initialization",{"_index":70,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{}}}],["initialize",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{}}}],["initializes",{"_index":518,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{}}}],["initiates",{"_index":525,"title":{},"body":{"components/BuyProductComponent.html":{},"injectables/PaymentService.html":{}}}],["initiating",{"_index":1171,"title":{},"body":{"injectables/PaymentService.html":{}}}],["inject(dashboardservice",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(productservice",{"_index":1990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(toastrservice",{"_index":1991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(userauthservice",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(userservice",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":407,"title":{"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":758,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":1442,"title":{},"body":{"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{}}}],["input.files",{"_index":1522,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["inputs",{"_index":1592,"title":{},"body":{"components/SearchBarComponent.html":{},"components/SpinnerComponent.html":{}}}],["instance",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{}}}],["intercept",{"_index":364,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":380,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":335,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":336,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercepts",{"_index":384,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":629,"title":{"interfaces/Cart.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"interfaces/Image.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"interfaces/OrderAndProductDto.html":{},"interfaces/OrderDetailsModel.html":{},"interfaces/OrderProductQuantity.html":{},"interfaces/Product.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{}},"body":{"interfaces/Cart.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"interfaces/Image.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"interfaces/OrderAndProductDto.html":{},"interfaces/OrderDetailsModel.html":{},"interfaces/OrderProductQuantity.html":{},"interfaces/Product.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":630,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"interfaces/Image.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"interfaces/OrderAndProductDto.html":{},"interfaces/OrderDetailsModel.html":{},"interfaces/OrderProductQuantity.html":{},"interfaces/Product.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/data",{"_index":1180,"title":{},"body":{"injectables/PaymentService.html":{}}}],["interfaces/image",{"_index":983,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["interfaces/login",{"_index":1815,"title":{},"body":{"injectables/UserService.html":{}}}],["interfaces/order",{"_index":786,"title":{},"body":{"injectables/DashboardService.html":{}}}],["interfaces/role",{"_index":1756,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["interfaces/sales",{"_index":782,"title":{},"body":{"injectables/DashboardService.html":{}}}],["interfaces/top",{"_index":788,"title":{},"body":{"injectables/DashboardService.html":{}}}],["interfaces/url",{"_index":1182,"title":{},"body":{"injectables/PaymentService.html":{}}}],["interfaces/user",{"_index":1816,"title":{},"body":{"injectables/UserService.html":{}}}],["inyecta",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isadmin",{"_index":852,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserAuthService.html":{}}}],["isdesktop",{"_index":1197,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["iseditmode",{"_index":1388,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["isgeneratingfile",{"_index":483,"title":{},"body":{"components/BuyProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["isloggedin",{"_index":853,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserAuthService.html":{}}}],["issingleproductcheckout",{"_index":736,"title":{},"body":{"components/CartComponent.html":{},"components/ProductViewDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["istokenexpired",{"_index":365,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["istokenexpired(token",{"_index":393,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["isuser",{"_index":854,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProductViewDetailsComponent.html":{},"injectables/UserAuthService.html":{}}}],["item",{"_index":673,"title":{},"body":{"components/CartComponent.html":{}}}],["items",{"_index":679,"title":{},"body":{"components/CartComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["json",{"_index":817,"title":{},"body":{"injectables/FileService.html":{},"injectables/ImageServiceService.html":{}}}],["json.parse(orderdata",{"_index":1110,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["json.parse(roles).map((role",{"_index":1760,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["json.stringify(roles",{"_index":1758,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["json.stringify(this.orderdetails",{"_index":568,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["jwt",{"_index":345,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/UserAuthService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":408,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["jwtdecode(token",{"_index":459,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["jwttoken",{"_index":1035,"title":{},"body":{"interfaces/LoginResponse.html":{},"injectables/UserAuthService.html":{}}}],["karma",{"_index":1933,"title":{},"body":{"index.html":{}}}],["key",{"_index":703,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["keyframes",{"_index":1316,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["keyword",{"_index":693,"title":{},"body":{"components/CartComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["la",{"_index":413,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["labels",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/SalesData.html":{},"components/UserComponent.html":{}}}],["lacks",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["las",{"_index":1190,"title":{},"body":{"interfaces/Product.html":{},"components/ShowProductDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":771,"title":{},"body":{"injectables/DashboardService.html":{},"components/RegisterComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["last4orders",{"_index":1772,"title":{},"body":{"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{}}}],["left",{"_index":1705,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"overview.html":{}}}],["length",{"_index":724,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["letter",{"_index":1372,"title":{},"body":{"components/RegisterComponent.html":{}}}],["lifecycle",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{}}}],["limita",{"_index":1327,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["link",{"_index":1684,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["link.active",{"_index":1711,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["link.click",{"_index":1690,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["link.download",{"_index":1688,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["link.href",{"_index":1686,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["list",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["list.pdf",{"_index":1679,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["lista",{"_index":1554,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["llamadas",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":2005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadformdata",{"_index":1395,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["loading",{"_index":1477,"title":{},"body":{"components/SaveProductComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":688,"title":{},"body":{"components/CartComponent.html":{}}}],["local",{"_index":1092,"title":{},"body":{"components/OrderConfirmationComponent.html":{},"injectables/UserAuthService.html":{}}}],["localstorage.clear",{"_index":1765,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["localstorage.getitem(\"jwttoken",{"_index":1763,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["localstorage.getitem(\"roles",{"_index":1759,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["localstorage.getitem('pendingorder",{"_index":1108,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["localstorage.removeitem('pendingorder",{"_index":1114,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["localstorage.setitem(\"jwttoken",{"_index":1762,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["localstorage.setitem(\"roles",{"_index":1757,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["localstorage.setitem('pendingorder",{"_index":567,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["log",{"_index":427,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["logged",{"_index":857,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/UserAuthService.html":{}}}],["login",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":187,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["login(logindata",{"_index":1800,"title":{},"body":{"injectables/UserService.html":{}}}],["login(loginform",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":186,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logindata",{"_index":1803,"title":{},"body":{"injectables/UserService.html":{}}}],["loginform",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginrequest",{"_index":1030,"title":{"interfaces/LoginRequest.html":{}},"body":{"interfaces/LoginRequest.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["loginresponse",{"_index":1033,"title":{"interfaces/LoginResponse.html":{}},"body":{"interfaces/LoginResponse.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["logout",{"_index":848,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logs",{"_index":863,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["long",{"_index":1366,"title":{},"body":{"components/RegisterComponent.html":{}}}],["los",{"_index":557,"title":{},"body":{"components/BuyProductComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["lowercase",{"_index":1371,"title":{},"body":{"components/RegisterComponent.html":{}}}],["making",{"_index":1175,"title":{},"body":{"injectables/PaymentService.html":{}}}],["manage",{"_index":1130,"title":{},"body":{"components/OrdersComponent.html":{}}}],["managing",{"_index":635,"title":{},"body":{"components/CartComponent.html":{},"components/MyOrdersComponent.html":{}}}],["margin",{"_index":918,"title":{},"body":{"components/HomeComponent.html":{}}}],["mark",{"_index":1169,"title":{},"body":{"components/OrdersComponent.html":{}}}],["match",{"_index":1810,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":216,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"components/OrderErrorComponent.html":{},"interfaces/OrderProductQuantity.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.floor(date.now",{"_index":461,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["max",{"_index":755,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["maximum",{"_index":1571,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["md",{"_index":942,"title":{},"body":{"components/HomeComponent.html":{}}}],["media",{"_index":936,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["medianas",{"_index":941,"title":{},"body":{"components/HomeComponent.html":{}}}],["message",{"_index":1730,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":28,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["method",{"_index":583,"title":{},"body":{"components/BuyProductComponent.html":{},"interfaces/DataPayment.html":{},"components/SaveProductComponent.html":{}}}],["methods",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["min",{"_index":753,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["minimum",{"_index":1570,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["miscellaneous",{"_index":1955,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":1647,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["mode",{"_index":1447,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["model",{"_index":550,"title":{},"body":{"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{}}}],["model.ts",{"_index":797,"title":{},"body":{"interfaces/FileHandle.html":{},"interfaces/OrderDetailsModel.html":{},"coverage.html":{}}}],["modelo",{"_index":553,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["modified",{"_index":391,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["modify",{"_index":475,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["module",{"_index":225,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":227,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":1542,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["month",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{},"injectables/DashboardService.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1944,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":721,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["mt",{"_index":1270,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["multi",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":2023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multiplicamos",{"_index":609,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["myorderdetails",{"_index":1036,"title":{"interfaces/MyOrderDetails.html":{}},"body":{"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"coverage.html":{}}}],["myorders",{"_index":332,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["myorderscomponent",{"_index":188,"title":{"components/MyOrdersComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["más",{"_index":1526,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["máxima",{"_index":1329,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["names",{"_index":1744,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["navigate",{"_index":667,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"index.html":{}}}],["navigates",{"_index":669,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["navigating",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navigation",{"_index":660,"title":{},"body":{"components/CartComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["necessary",{"_index":357,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ForbiddenComponent.html":{}}}],["need",{"_index":1939,"title":{},"body":{"index.html":{}}}],["new",{"_index":203,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newstatus",{"_index":1139,"title":{},"body":{"components/OrdersComponent.html":{}}}],["newstatus).subscribe",{"_index":1164,"title":{},"body":{"components/OrdersComponent.html":{}}}],["next",{"_index":381,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["next.handle(clonedrequest).pipe",{"_index":438,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req",{"_index":419,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":1914,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngchartsmodule",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["ngform",{"_index":523,"title":{},"body":{"components/BuyProductComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{}}}],["ngmodule",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{}}}],["ngx",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"dependencies.html":{}}}],["nodiscount",{"_index":746,"title":{},"body":{"components/CartComponent.html":{}}}],["nombre",{"_index":1548,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["nombres",{"_index":1505,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["noorders",{"_index":1076,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["noproducts",{"_index":1699,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["notification",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notifications",{"_index":495,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{}}}],["now",{"_index":1275,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["nuevamente",{"_index":445,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["nuevas",{"_index":1494,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["null",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/ProductViewDetailsComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{}}}],["number",{"_index":503,"title":{},"body":{"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"interfaces/OrderProductQuantity.html":{},"components/OrdersComponent.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"interfaces/SalesData.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"interfaces/TopSelling.html":{}}}],["number(route.parammap.get('productid",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(route.queryparammap.get('id",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(this.route.snapshot.parammap.get('productid",{"_index":1461,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["numbers",{"_index":684,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["numeric",{"_index":621,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["object",{"_index":1294,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"miscellaneous/variables.html":{}}}],["objeto",{"_index":1536,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["observable",{"_index":390,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserService.html":{}}}],["obtained",{"_index":547,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["obtener",{"_index":420,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/SaveProductComponent.html":{},"miscellaneous/variables.html":{}}}],["obtenidos",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtén",{"_index":1783,"title":{},"body":{"components/UserComponent.html":{}}}],["occurred",{"_index":581,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["occurs",{"_index":1124,"title":{},"body":{"components/OrderErrorComponent.html":{}}}],["ocupe",{"_index":1333,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["of(null",{"_index":2006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(paymentresponse.url.tostring",{"_index":591,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["officedocument.spreadsheetml.sheet",{"_index":1694,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["ondragover",{"_index":1396,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["ondragover(event",{"_index":1419,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["ondrop",{"_index":1397,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["ondrop(event",{"_index":1432,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["one",{"_index":1369,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onfileselected",{"_index":1398,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["onfileselected(event",{"_index":1438,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["oninit",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{}}}],["onquantitychanged",{"_index":488,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["onquantitychanged(quantity",{"_index":519,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["onresize",{"_index":1200,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["onresize(event",{"_index":1225,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["onsearch",{"_index":1591,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["opacity",{"_index":1321,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["opening",{"_index":1436,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["operation",{"_index":968,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["operations",{"_index":953,"title":{},"body":{"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{}}}],["optional",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["optionally",{"_index":622,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["options",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"components/HeaderComponent.html":{},"components/UserComponent.html":{}}}],["orden",{"_index":1116,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["order",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["order.orderdate",{"_index":1790,"title":{},"body":{"components/UserComponent.html":{}}}],["order.orderid",{"_index":1789,"title":{},"body":{"components/UserComponent.html":{}}}],["order.orderstatus",{"_index":1793,"title":{},"body":{"components/UserComponent.html":{}}}],["order.productactualprice",{"_index":1795,"title":{},"body":{"components/UserComponent.html":{}}}],["order.productdiscountedprice",{"_index":1796,"title":{},"body":{"components/UserComponent.html":{}}}],["order.productname",{"_index":1794,"title":{},"body":{"components/UserComponent.html":{}}}],["orderalternatecontactnumber",{"_index":1039,"title":{},"body":{"interfaces/MyOrderDetails.html":{}}}],["orderamount",{"_index":1040,"title":{},"body":{"interfaces/MyOrderDetails.html":{}}}],["orderandproductdto",{"_index":785,"title":{"interfaces/OrderAndProductDto.html":{}},"body":{"injectables/DashboardService.html":{},"interfaces/OrderAndProductDto.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["orderconfirmationcomponent",{"_index":190,"title":{"components/OrderConfirmationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ordercontactnumber",{"_index":1041,"title":{},"body":{"interfaces/MyOrderDetails.html":{}}}],["orderdata",{"_index":1107,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["orderdate",{"_index":1084,"title":{},"body":{"interfaces/OrderAndProductDto.html":{}}}],["orderdetail.orderamount",{"_index":1081,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["orderdetail.ordercontactnumber",{"_index":1080,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["orderdetail.orderfullname",{"_index":1078,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["orderdetail.orderfullorder",{"_index":1079,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["orderdetail.orderid",{"_index":1077,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["orderdetail.orderstatus",{"_index":1082,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["orderdetails",{"_index":484,"title":{},"body":{"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{}}}],["orderdetailsmodel",{"_index":539,"title":{"interfaces/OrderDetailsModel.html":{}},"body":{"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"coverage.html":{}}}],["ordererrorcomponent",{"_index":192,"title":{"components/OrderErrorComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["orderform",{"_index":528,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["orderform.reset",{"_index":571,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["orderfullname",{"_index":1042,"title":{},"body":{"interfaces/MyOrderDetails.html":{}}}],["orderfullorder",{"_index":1043,"title":{},"body":{"interfaces/MyOrderDetails.html":{}}}],["orderid",{"_index":1044,"title":{},"body":{"interfaces/MyOrderDetails.html":{},"interfaces/OrderAndProductDto.html":{}}}],["orderproduct",{"_index":600,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["orderproduct.productid",{"_index":601,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["orderproductquantity",{"_index":1122,"title":{"interfaces/OrderProductQuantity.html":{}},"body":{"interfaces/OrderDetailsModel.html":{},"interfaces/OrderProductQuantity.html":{},"coverage.html":{}}}],["orderproductquantitylist",{"_index":544,"title":{},"body":{"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{}}}],["orders",{"_index":80,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/DashboardService.html":{},"components/HeaderComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["orders'},{'name",{"_index":189,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["orders.component",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["orders.component.css",{"_index":1048,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["orders.component.html",{"_index":1049,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["orders.component.ts",{"_index":1047,"title":{},"body":{"components/MyOrdersComponent.html":{},"coverage.html":{}}}],["orders.component.ts:104",{"_index":1061,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["orders.component.ts:18",{"_index":1065,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["orders.component.ts:21",{"_index":1064,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["orders.component.ts:24",{"_index":1071,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["orders.component.ts:27",{"_index":1070,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["orders.component.ts:30",{"_index":1069,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["orders.component.ts:33",{"_index":1067,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["orders.component.ts:36",{"_index":1052,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["orders.component.ts:45",{"_index":1059,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["orders.component.ts:54",{"_index":1055,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["orders.component.ts:74",{"_index":1053,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["orders.component.ts:85",{"_index":1056,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["orders/my",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MyOrdersComponent.html":{},"coverage.html":{}}}],["orderschart",{"_index":160,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["orderscomponent",{"_index":194,"title":{"components/OrdersComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ordersdata",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["orderstatus",{"_index":1045,"title":{},"body":{"interfaces/MyOrderDetails.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrdersComponent.html":{}}}],["orderstatus).subscribe",{"_index":1162,"title":{},"body":{"components/OrdersComponent.html":{}}}],["original",{"_index":378,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["otherwise",{"_index":398,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/ProductViewDetailsComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{}}}],["out",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/CartComponent.html":{},"components/HeaderComponent.html":{},"components/ProductViewDetailsComponent.html":{},"index.html":{},"overview.html":{}}}],["outgoing",{"_index":347,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["output",{"_index":1600,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["outputs",{"_index":1594,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["over",{"_index":1430,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["overflow",{"_index":1286,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["overview",{"_index":1946,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1882,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":161,"title":{},"body":{"components/AdminComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{}}}],["page",{"_index":356,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/CartComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pages",{"_index":642,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["pagesize",{"_index":643,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["paginated",{"_index":882,"title":{},"body":{"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["pagination",{"_index":678,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["pantallas",{"_index":940,"title":{},"body":{"components/HomeComponent.html":{}}}],["para",{"_index":1189,"title":{},"body":{"interfaces/Product.html":{},"components/SaveProductComponent.html":{},"miscellaneous/variables.html":{}}}],["paralelo",{"_index":2017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parallel",{"_index":2024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parte",{"_index":1552,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["partir",{"_index":939,"title":{},"body":{"components/HomeComponent.html":{}}}],["parámetros",{"_index":1992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passing",{"_index":1437,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["password",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["path",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":1804,"title":{},"body":{"injectables/UserService.html":{}}}],["payment",{"_index":496,"title":{},"body":{"components/BuyProductComponent.html":{},"injectables/PaymentService.html":{}}}],["payment.ts",{"_index":794,"title":{},"body":{"interfaces/DataPayment.html":{},"coverage.html":{}}}],["payment/success",{"_index":331,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paymentresponse?.url",{"_index":590,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["payments",{"_index":478,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["paymentservice",{"_index":492,"title":{"injectables/PaymentService.html":{}},"body":{"components/BuyProductComponent.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["paymenturl",{"_index":570,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["paypal",{"_index":480,"title":{},"body":{"components/BuyProductComponent.html":{},"injectables/PaymentService.html":{},"interfaces/UrlPaypalResponse.html":{},"coverage.html":{}}}],["pdf",{"_index":802,"title":{},"body":{"injectables/FileService.html":{},"components/ShowProductDetailsComponent.html":{}}}],["per",{"_index":78,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permissions",{"_index":841,"title":{},"body":{"components/ForbiddenComponent.html":{}}}],["permite",{"_index":1601,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["permitted",{"_index":1812,"title":{},"body":{"injectables/UserService.html":{}}}],["personalizar",{"_index":1602,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["picbyte",{"_index":949,"title":{},"body":{"interfaces/Image.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{}}}],["pipeline",{"_index":389,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["place",{"_index":626,"title":{},"body":{"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["placed",{"_index":773,"title":{},"body":{"injectables/DashboardService.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{}}}],["placeholder",{"_index":1593,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["placement",{"_index":526,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["placeorder",{"_index":489,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["placeorder(orderform",{"_index":522,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["placing",{"_index":1091,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["platform",{"_index":1936,"title":{},"body":{"index.html":{}}}],["please",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["plugins",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["populates",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{}}}],["por",{"_index":610,"title":{},"body":{"components/BuyProductComponent.html":{},"components/SaveProductComponent.html":{}}}],["prefix",{"_index":624,"title":{},"body":{"components/BuyProductComponent.html":{},"injectables/UserAuthService.html":{}}}],["prepares",{"_index":1417,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["present",{"_index":1747,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["presente",{"_index":416,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["prevents",{"_index":1425,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["previene",{"_index":1509,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["preview",{"_index":1445,"title":{},"body":{"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["preview.shortname",{"_index":1579,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["previewimage",{"_index":1539,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["previews",{"_index":1441,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["previous",{"_index":751,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["previsualización",{"_index":1537,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["price",{"_index":508,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{}}}],["private",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/FileService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["privileges",{"_index":858,"title":{},"body":{"components/HeaderComponent.html":{}}}],["process",{"_index":477,"title":{},"body":{"components/BuyProductComponent.html":{},"components/OrderErrorComponent.html":{}}}],["processed",{"_index":587,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["processes",{"_index":72,"title":{},"body":{"components/AdminComponent.html":{},"components/SaveProductComponent.html":{}}}],["processing",{"_index":497,"title":{},"body":{"components/BuyProductComponent.html":{},"components/OrderErrorComponent.html":{},"components/SpinnerComponent.html":{}}}],["processpayment",{"_index":490,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["product",{"_index":196,"title":{"interfaces/Product.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"components/OrderErrorComponent.html":{},"interfaces/OrderProductQuantity.html":{},"components/OrdersComponent.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product's",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product'},{'name",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["product.component",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["product.component.css",{"_index":481,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["product.component.html",{"_index":482,"title":{},"body":{"components/BuyProductComponent.html":{},"components/SaveProductComponent.html":{}}}],["product.component.ts",{"_index":469,"title":{},"body":{"components/BuyProductComponent.html":{},"components/SaveProductComponent.html":{},"coverage.html":{}}}],["product.component.ts:103",{"_index":531,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["product.component.ts:118",{"_index":1412,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:130",{"_index":515,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["product.component.ts:142",{"_index":1410,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:143",{"_index":507,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["product.component.ts:155",{"_index":520,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["product.component.ts:162",{"_index":1416,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:165",{"_index":498,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["product.component.ts:187",{"_index":1421,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:199",{"_index":1433,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:213",{"_index":1439,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:22",{"_index":545,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["product.component.ts:24",{"_index":1452,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:259",{"_index":1444,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:283",{"_index":1407,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:29",{"_index":1457,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:31",{"_index":535,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["product.component.ts:34",{"_index":493,"title":{},"body":{"components/BuyProductComponent.html":{},"components/SaveProductComponent.html":{}}}],["product.component.ts:39",{"_index":1454,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:44",{"_index":1455,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:49",{"_index":1401,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:53",{"_index":517,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["product.component.ts:60",{"_index":1418,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:72",{"_index":1415,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.component.ts:75",{"_index":524,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["product.component.ts:99",{"_index":1403,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["product.productactualprice",{"_index":607,"title":{},"body":{"components/BuyProductComponent.html":{},"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["product.productdescription",{"_index":914,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["product.productdescription.length",{"_index":913,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["product.productdiscountedprice",{"_index":606,"title":{},"body":{"components/BuyProductComponent.html":{},"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["product.productid",{"_index":565,"title":{},"body":{"components/BuyProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["product.productimages",{"_index":1664,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["product.productimages.length",{"_index":1665,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["product.productimages.map(img",{"_index":1670,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["product.productimages[0].picbyte",{"_index":909,"title":{},"body":{"components/HomeComponent.html":{}}}],["product.productimages[0].type",{"_index":907,"title":{},"body":{"components/HomeComponent.html":{}}}],["product.productname",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["product.totalsales",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{}}}],["product/buy",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"coverage.html":{}}}],["product/save",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SaveProductComponent.html":{},"coverage.html":{}}}],["product?.productactualprice",{"_index":1273,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["product?.productdescription",{"_index":1272,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["product?.productdiscountedprice",{"_index":1274,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["product?.productname",{"_index":1266,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["product_list.csv",{"_index":1689,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["product_list.xlsx",{"_index":1695,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["productactualprice",{"_index":1085,"title":{},"body":{"interfaces/OrderAndProductDto.html":{},"interfaces/Product.html":{},"components/SaveProductComponent.html":{}}}],["productblob",{"_index":1490,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["productdata",{"_index":1465,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["productdata.productimages",{"_index":1468,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["productdata.productimages.length",{"_index":1469,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["productdata.productimages.map(img",{"_index":1471,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["productdescription",{"_index":1185,"title":{},"body":{"interfaces/Product.html":{},"components/SaveProductComponent.html":{}}}],["productdetails",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{}}}],["productdiscountedprice",{"_index":1086,"title":{},"body":{"interfaces/OrderAndProductDto.html":{},"interfaces/Product.html":{},"components/SaveProductComponent.html":{}}}],["productentity",{"_index":633,"title":{},"body":{"interfaces/Cart.html":{}}}],["productform",{"_index":1405,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["productform.resetform",{"_index":1569,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["productid",{"_index":510,"title":{},"body":{"components/BuyProductComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"interfaces/OrderProductQuantity.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"interfaces/TopSelling.html":{},"miscellaneous/variables.html":{}}}],["productid).pipe",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productimages",{"_index":1186,"title":{},"body":{"interfaces/Product.html":{}}}],["production",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productname",{"_index":1087,"title":{},"body":{"interfaces/OrderAndProductDto.html":{},"interfaces/Product.html":{},"components/SaveProductComponent.html":{},"interfaces/TopSelling.html":{}}}],["producto",{"_index":555,"title":{},"body":{"components/BuyProductComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"miscellaneous/variables.html":{}}}],["productprice",{"_index":506,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["productquantity",{"_index":597,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["productquantity.productid",{"_index":598,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["productquantity.quantity",{"_index":608,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["productresolver",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"injectables/DashboardService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["productservice",{"_index":654,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice.getproductbyid(productid).pipe",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productservice.getproductdetails(issingleproductcheckout",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productviewdetails/:productid",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["productviewdetailscomponent",{"_index":195,"title":{"components/ProductViewDetailsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["progress",{"_index":538,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["project",{"_index":1908,"title":{},"body":{"index.html":{}}}],["properties",{"_index":36,"title":{"properties.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"interfaces/OrderProductQuantity.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["property",{"_index":85,"title":{},"body":{"components/AdminComponent.html":{}}}],["propiedad",{"_index":1188,"title":{},"body":{"interfaces/Product.html":{}}}],["provide",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1062,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["providedin",{"_index":410,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["provides",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/HeaderComponent.html":{},"components/OrdersComponent.html":{}}}],["public",{"_index":851,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{}}}],["puede",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puedes",{"_index":1544,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["purchases",{"_index":470,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["purchasing",{"_index":1219,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["páginas",{"_index":720,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["quantities",{"_index":476,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["quantity",{"_index":516,"title":{},"body":{"components/BuyProductComponent.html":{},"interfaces/OrderDetailsModel.html":{},"interfaces/OrderProductQuantity.html":{}}}],["quantity.ts",{"_index":1128,"title":{},"body":{"interfaces/OrderProductQuantity.html":{},"coverage.html":{}}}],["que",{"_index":1246,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{}}}],["queries",{"_index":1587,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["query",{"_index":891,"title":{},"body":{"components/HomeComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["queryparams",{"_index":735,"title":{},"body":{"components/CartComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["quieres",{"_index":1547,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["range",{"_index":681,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["reader",{"_index":1532,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["reader.onload",{"_index":1534,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["reader.readasdataurl(file",{"_index":1556,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["realizar",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rebote",{"_index":1315,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["redirected",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirecting",{"_index":865,"title":{},"body":{"components/HeaderComponent.html":{}}}],["redirects",{"_index":355,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/LoginComponent.html":{}}}],["redirigir",{"_index":576,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["reference",{"_index":1453,"title":{},"body":{"components/SaveProductComponent.html":{},"index.html":{}}}],["reflect",{"_index":828,"title":{},"body":{"components/FooterComponent.html":{}}}],["regardless",{"_index":1449,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["register",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":200,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["register(registerform",{"_index":1344,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register(user",{"_index":1805,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.css",{"_index":1341,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1342,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":199,"title":{"components/RegisterComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":1807,"title":{},"body":{"injectables/UserService.html":{}}}],["registerform",{"_index":1347,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.valid",{"_index":1352,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":1340,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["regular",{"_index":861,"title":{},"body":{"components/HeaderComponent.html":{}}}],["related",{"_index":656,"title":{},"body":{"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"components/UserComponent.html":{}}}],["reload",{"_index":1919,"title":{},"body":{"index.html":{}}}],["reloads",{"_index":1141,"title":{},"body":{"components/OrdersComponent.html":{}}}],["remove",{"_index":1561,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["removed",{"_index":674,"title":{},"body":{"components/CartComponent.html":{},"components/SaveProductComponent.html":{}}}],["removedfilename",{"_index":1562,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["removefile",{"_index":1399,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["removefile(index",{"_index":1443,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["removes",{"_index":1103,"title":{},"body":{"components/OrderConfirmationComponent.html":{},"components/SaveProductComponent.html":{},"injectables/UserAuthService.html":{}}}],["removing",{"_index":1560,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["rendering",{"_index":821,"title":{},"body":{"components/FooterComponent.html":{}}}],["representing",{"_index":1068,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["represents",{"_index":840,"title":{},"body":{"components/ForbiddenComponent.html":{},"components/SpinnerComponent.html":{}}}],["req",{"_index":387,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.get(\"no",{"_index":417,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requeridos",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":375,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/SaveProductComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":454,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.ts",{"_index":1032,"title":{},"body":{"interfaces/LoginRequest.html":{},"coverage.html":{}}}],["requests",{"_index":348,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/PaymentService.html":{}}}],["required",{"_index":614,"title":{},"body":{"components/BuyProductComponent.html":{},"components/LoginComponent.html":{},"injectables/PaymentService.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resets",{"_index":890,"title":{},"body":{"components/HomeComponent.html":{}}}],["resize",{"_index":1214,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["resizing",{"_index":1211,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["resolve",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resolved",{"_index":65,"title":{},"body":{"components/AdminComponent.html":{}}}],["resolveddata",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["resolveddata.last4orders",{"_index":1785,"title":{},"body":{"components/UserComponent.html":{}}}],["resolveddata.ordersdata",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["resolveddata.salesdata",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["resolveddata.topselling",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{}}}],["resolvefn",{"_index":1989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolver",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["resolver.ts",{"_index":1863,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvers/buy",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resolvers/dashboard",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resolvers/product.resolver",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["response",{"_index":593,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserService.html":{}}}],["response.content",{"_index":713,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["response.pagesize",{"_index":718,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["response.totalelements",{"_index":717,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["response.totalpages",{"_index":715,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["response.ts",{"_index":1034,"title":{},"body":{"interfaces/LoginResponse.html":{},"interfaces/UrlPaypalResponse.html":{},"coverage.html":{}}}],["response.user.role![0].rolename",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{}}}],["responses",{"_index":343,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["responsetype",{"_index":816,"title":{},"body":{"injectables/FileService.html":{},"injectables/ImageServiceService.html":{}}}],["responsible",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{}}}],["responsive",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["restricts",{"_index":1984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resueltos",{"_index":1245,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["result",{"_index":966,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["result.isconfirmed",{"_index":1657,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["results",{"_index":215,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"components/OrderErrorComponent.html":{},"interfaces/OrderProductQuantity.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["retrieved",{"_index":1066,"title":{},"body":{"components/MyOrdersComponent.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":71,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"injectables/PaymentService.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":760,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ImageServiceService.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/SaveProductComponent.html":{}}}],["return",{"_index":418,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/HeaderComponent.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["rgba(0",{"_index":934,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(255",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{}}}],["rgba(3",{"_index":1304,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["rgba(75",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["role",{"_index":1223,"title":{"interfaces/Role.html":{}},"body":{"components/ProductViewDetailsComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"coverage.html":{}}}],["role.rolename",{"_index":1761,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["roledescription",{"_index":1379,"title":{},"body":{"interfaces/Role.html":{},"injectables/UserAuthService.html":{}}}],["rolematch",{"_index":1798,"title":{},"body":{"injectables/UserService.html":{}}}],["rolematch(allowedroles",{"_index":1808,"title":{},"body":{"injectables/UserService.html":{}}}],["rolename",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Role.html":{},"injectables/UserAuthService.html":{}}}],["roles",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["roles.includes('adminrole",{"_index":1767,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["roles.includes('userrole",{"_index":1768,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["roles.length",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["route",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["route.data[\"roles",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route.queryparammap.get('issingleproductcheckout",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":368,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["router.createurltree(['/forbidden",{"_index":1982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/login",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":334,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":303,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["routing.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1913,"title":{},"body":{"index.html":{}}}],["running",{"_index":1929,"title":{},"body":{"index.html":{}}}],["runs",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{}}}],["ruta",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":404,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["safeurl",{"_index":798,"title":{},"body":{"interfaces/FileHandle.html":{}}}],["sales",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"injectables/DashboardService.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["salesdata",{"_index":42,"title":{"interfaces/SalesData.html":{}},"body":{"components/AdminComponent.html":{},"injectables/DashboardService.html":{},"interfaces/SalesData.html":{},"components/UserComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["save",{"_index":1385,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["saveas",{"_index":1651,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["saveas(blob",{"_index":1678,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["saveproductcomponent",{"_index":201,"title":{"components/SaveProductComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["saver",{"_index":1652,"title":{},"body":{"components/ShowProductDetailsComponent.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":1922,"title":{},"body":{"index.html":{}}}],["scale(0.9",{"_index":1322,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["scale(1",{"_index":1323,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["scale(1.05",{"_index":931,"title":{},"body":{"components/HomeComponent.html":{}}}],["se",{"_index":1290,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["search",{"_index":205,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["searchbarcomponent",{"_index":204,"title":{"components/SearchBarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchcartdetails",{"_index":652,"title":{},"body":{"components/CartComponent.html":{}}}],["searchcartdetails(searchkey",{"_index":689,"title":{},"body":{"components/CartComponent.html":{}}}],["searches",{"_index":691,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["searching",{"_index":1063,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["searchkey",{"_index":644,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["searchkey.trim",{"_index":728,"title":{},"body":{"components/CartComponent.html":{}}}],["searchorderdetails",{"_index":1051,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["searchorderdetails(searchkey",{"_index":1060,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["searchproducts",{"_index":876,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["searchproducts(searchkey",{"_index":888,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["section",{"_index":823,"title":{},"body":{"components/FooterComponent.html":{},"components/SaveProductComponent.html":{}}}],["segundos",{"_index":466,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["seleccionada",{"_index":612,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["select",{"_index":1578,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["selected",{"_index":502,"title":{},"body":{"components/BuyProductComponent.html":{},"components/HomeComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["selectedfiles",{"_index":1389,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["selectedfiles[i].name",{"_index":1580,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["selectedimage",{"_index":1198,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["selectedimages",{"_index":1613,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["selectimage",{"_index":1201,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["selectimage(image",{"_index":1228,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["selection",{"_index":1440,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["selector",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["selling",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"injectables/DashboardService.html":{}}}],["selling.ts",{"_index":1732,"title":{},"body":{"interfaces/TopSelling.html":{},"coverage.html":{}}}],["sending",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{}}}],["sends",{"_index":1102,"title":{},"body":{"components/OrderConfirmationComponent.html":{},"components/SaveProductComponent.html":{},"injectables/UserService.html":{}}}],["serve",{"_index":1915,"title":{},"body":{"index.html":{}}}],["server",{"_index":980,"title":{},"body":{"injectables/ImageServiceService.html":{},"components/SaveProductComponent.html":{},"index.html":{}}}],["service",{"_index":494,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"injectables/PaymentService.html":{},"miscellaneous/variables.html":{}}}],["services/user",{"_index":405,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["servicio",{"_index":2012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sesión",{"_index":442,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["session",{"_index":429,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["set",{"_index":352,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["setheaders",{"_index":455,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["setroles",{"_index":1739,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["setroles(roles",{"_index":1752,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["settimeout",{"_index":1674,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["settoken",{"_index":1740,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["settoken(jwttoken",{"_index":1754,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["setupcharts",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["setuptopsellingchart",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{}}}],["shadow",{"_index":928,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["shopping",{"_index":636,"title":{},"body":{"components/CartComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["shortname",{"_index":950,"title":{},"body":{"interfaces/Image.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{}}}],["show",{"_index":208,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["showimagemodal",{"_index":1614,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["showproductdetails",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["showproductdetails(productid",{"_index":893,"title":{},"body":{"components/HomeComponent.html":{}}}],["showproductdetailscomponent",{"_index":207,"title":{"components/ShowProductDetailsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["si",{"_index":412,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/SaveProductComponent.html":{},"miscellaneous/variables.html":{}}}],["sign",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{}}}],["sin",{"_index":1553,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["single",{"_index":1220,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["size",{"_index":676,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["size).subscribe",{"_index":903,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["slice",{"_index":915,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["sm",{"_index":1276,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["small",{"_index":1292,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["solicitud",{"_index":433,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["solid",{"_index":1299,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["solo",{"_index":1504,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["sombra",{"_index":1307,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"components/OrderErrorComponent.html":{},"interfaces/OrderProductQuantity.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spaces",{"_index":1367,"title":{},"body":{"components/RegisterComponent.html":{}}}],["special",{"_index":1374,"title":{},"body":{"components/RegisterComponent.html":{}}}],["specific",{"_index":509,"title":{},"body":{"components/BuyProductComponent.html":{},"injectables/ImageServiceService.html":{},"components/OrdersComponent.html":{}}}],["specify",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":1722,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":210,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["spinner.component.css",{"_index":1725,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.html",{"_index":1726,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinnercomponent",{"_index":209,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spring",{"_index":836,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/.../auth.guard.ts",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../buy",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dashboard",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../product.resolver.ts",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":1829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.interceptor.ts",{"_index":337,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/auth.interceptor.ts:105",{"_index":394,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.interceptor.ts:23",{"_index":370,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.interceptor.ts:38",{"_index":383,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.interceptor.ts:90",{"_index":373,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/components/admin/admin.component.ts",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:115",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:23",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:26",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:29",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:32",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:35",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:38",{"_index":94,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:41",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:46",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:58",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:77",{"_index":76,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/buy",{"_index":468,"title":{},"body":{"components/BuyProductComponent.html":{},"coverage.html":{}}}],["src/app/components/cart/cart.component.ts",{"_index":634,"title":{},"body":{"components/CartComponent.html":{},"coverage.html":{}}}],["src/app/components/cart/cart.component.ts:107",{"_index":690,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:132",{"_index":668,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:145",{"_index":671,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:18",{"_index":697,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:20",{"_index":698,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:22",{"_index":707,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:24",{"_index":705,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:26",{"_index":702,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:28",{"_index":699,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:30",{"_index":655,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:49",{"_index":687,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:57",{"_index":662,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:68",{"_index":680,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:87",{"_index":677,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/forbidden/forbidden.component.ts",{"_index":839,"title":{},"body":{"components/ForbiddenComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":871,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:105",{"_index":894,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:114",{"_index":889,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:19",{"_index":898,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:22",{"_index":895,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:25",{"_index":900,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:28",{"_index":899,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:31",{"_index":897,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:34",{"_index":896,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:37",{"_index":878,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:47",{"_index":887,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:56",{"_index":881,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:76",{"_index":879,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:87",{"_index":884,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":991,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:21",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:24",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:41",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/my",{"_index":1046,"title":{},"body":{"components/MyOrdersComponent.html":{},"coverage.html":{}}}],["src/app/components/order",{"_index":1088,"title":{},"body":{"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"coverage.html":{}}}],["src/app/components/orders/orders.component.ts",{"_index":1129,"title":{},"body":{"components/OrdersComponent.html":{},"coverage.html":{}}}],["src/app/components/orders/orders.component.ts:108",{"_index":1151,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:135",{"_index":1140,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:152",{"_index":1145,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:18",{"_index":1153,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:21",{"_index":1152,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:24",{"_index":1158,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:27",{"_index":1157,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:30",{"_index":1155,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:33",{"_index":1154,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:36",{"_index":1156,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:39",{"_index":1136,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:48",{"_index":1150,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:58",{"_index":1148,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:78",{"_index":1137,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/orders/orders.component.ts:89",{"_index":1149,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/components/product",{"_index":1192,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts",{"_index":1339,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:18",{"_index":1350,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:23",{"_index":1343,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:37",{"_index":1345,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/save",{"_index":1382,"title":{},"body":{"components/SaveProductComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/footer/footer.component.ts",{"_index":820,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/footer/footer.component.ts:14",{"_index":833,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/shared/header/header.component.ts",{"_index":845,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/header/header.component.ts:16",{"_index":855,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/header/header.component.ts:30",{"_index":859,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/header/header.component.ts:37",{"_index":862,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/header/header.component.ts:47",{"_index":856,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/header/header.component.ts:56",{"_index":860,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/shared/search",{"_index":1581,"title":{},"body":{"components/SearchBarComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/spinner/spinner.component.ts",{"_index":1721,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/spinner/spinner.component.ts:18",{"_index":1727,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/components/shared/spinner/spinner.component.ts:24",{"_index":1729,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/components/show",{"_index":1608,"title":{},"body":{"components/ShowProductDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/user/user.component.ts",{"_index":1769,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/components/user/user.component.ts:18",{"_index":1780,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/user/user.component.ts:21",{"_index":1782,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/user/user.component.ts:24",{"_index":1781,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/user/user.component.ts:27",{"_index":1777,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/user/user.component.ts:30",{"_index":1776,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/user/user.component.ts:33",{"_index":1778,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/user/user.component.ts:38",{"_index":1773,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/user/user.component.ts:42",{"_index":1774,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/user/user.component.ts:57",{"_index":1775,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/interfaces/cart",{"_index":708,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/interfaces/cart.ts",{"_index":631,"title":{},"body":{"interfaces/Cart.html":{},"coverage.html":{}}}],["src/app/interfaces/data",{"_index":793,"title":{},"body":{"interfaces/DataPayment.html":{},"coverage.html":{}}}],["src/app/interfaces/file",{"_index":796,"title":{},"body":{"interfaces/FileHandle.html":{},"coverage.html":{}}}],["src/app/interfaces/image",{"_index":1243,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{}}}],["src/app/interfaces/image.ts",{"_index":948,"title":{},"body":{"interfaces/Image.html":{},"coverage.html":{}}}],["src/app/interfaces/login",{"_index":1031,"title":{},"body":{"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"coverage.html":{}}}],["src/app/interfaces/my",{"_index":1037,"title":{},"body":{"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/order",{"_index":549,"title":{},"body":{"components/BuyProductComponent.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"interfaces/OrderProductQuantity.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/product",{"_index":551,"title":{},"body":{"components/BuyProductComponent.html":{},"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["src/app/interfaces/product.ts",{"_index":1184,"title":{},"body":{"interfaces/Product.html":{},"coverage.html":{}}}],["src/app/interfaces/role.ts",{"_index":1378,"title":{},"body":{"interfaces/Role.html":{},"coverage.html":{}}}],["src/app/interfaces/sales",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/SalesData.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/top",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/TopSelling.html":{},"coverage.html":{}}}],["src/app/interfaces/url",{"_index":1734,"title":{},"body":{"interfaces/UrlPaypalResponse.html":{},"coverage.html":{}}}],["src/app/interfaces/user",{"_index":1351,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/interfaces/user.ts",{"_index":1735,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/resolvers/buy",{"_index":1862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/resolvers/dashboard",{"_index":1864,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/resolvers/product.resolver.ts",{"_index":1868,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/dashboard.service.ts",{"_index":759,"title":{},"body":{"injectables/DashboardService.html":{},"coverage.html":{}}}],["src/app/services/dashboard.service.ts:17",{"_index":769,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/app/services/dashboard.service.ts:25",{"_index":776,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/app/services/dashboard.service.ts:33",{"_index":774,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/app/services/dashboard.service.ts:41",{"_index":770,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/app/services/dashboard.service.ts:49",{"_index":777,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/app/services/dashboard.service.ts:57",{"_index":778,"title":{},"body":{"injectables/DashboardService.html":{}}}],["src/app/services/file.service",{"_index":1650,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["src/app/services/file.service.ts",{"_index":800,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/app/services/file.service.ts:14",{"_index":809,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:24",{"_index":813,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:33",{"_index":810,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:42",{"_index":812,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/image.service",{"_index":1460,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["src/app/services/image.service.ts",{"_index":952,"title":{},"body":{"injectables/ImageServiceService.html":{},"coverage.html":{}}}],["src/app/services/image.service.ts:15",{"_index":962,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["src/app/services/image.service.ts:26",{"_index":978,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["src/app/services/image.service.ts:38",{"_index":975,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["src/app/services/image.service.ts:47",{"_index":964,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["src/app/services/image.service.ts:56",{"_index":970,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["src/app/services/payment.service",{"_index":556,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["src/app/services/payment.service.ts",{"_index":1170,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["src/app/services/payment.service.ts:17",{"_index":1173,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/app/services/payment.service.ts:32",{"_index":1177,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/app/services/product.service",{"_index":709,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["src/app/services/product.service.ts",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["src/app/services/user",{"_index":866,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProductViewDetailsComponent.html":{},"injectables/UserAuthService.html":{},"coverage.html":{}}}],["src/app/services/user.service",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":1797,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:15",{"_index":1799,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":1801,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:36",{"_index":1809,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:46",{"_index":1806,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.development",{"_index":784,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FileService.html":{},"injectables/ImageServiceService.html":{},"injectables/PaymentService.html":{},"injectables/UserService.html":{}}}],["src/environments/environment.development.ts",{"_index":1879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1880,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src]=\"'data",{"_index":906,"title":{},"body":{"components/HomeComponent.html":{}}}],["src]=\"\\'data",{"_index":946,"title":{},"body":{"components/HomeComponent.html":{}}}],["standard",{"_index":1222,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"injectables/UserAuthService.html":{}}}],["start",{"_index":623,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["started",{"_index":1907,"title":{"index.html":{}},"body":{}}],["state",{"_index":1724,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{}}}],["status",{"_index":81,"title":{},"body":{"components/AdminComponent.html":{},"injectables/DashboardService.html":{},"components/HeaderComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["storage",{"_index":1093,"title":{},"body":{"components/OrderConfirmationComponent.html":{},"injectables/UserAuthService.html":{}}}],["stored",{"_index":1104,"title":{},"body":{"components/OrderConfirmationComponent.html":{},"injectables/UserAuthService.html":{},"index.html":{}}}],["stores",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{}}}],["storing",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{}}}],["string",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DataPayment.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"interfaces/OrderDetailsModel.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{}}}],["strings",{"_index":1745,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["styleurls",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["suave",{"_index":1309,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["suba",{"_index":1525,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["submission",{"_index":1404,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["submits",{"_index":1094,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["submitting",{"_index":1346,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribe",{"_index":1675,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["subset",{"_index":885,"title":{},"body":{"components/HomeComponent.html":{}}}],["success",{"_index":739,"title":{},"body":{"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["successful",{"_index":527,"title":{},"body":{"components/BuyProductComponent.html":{},"components/OrderConfirmationComponent.html":{}}}],["successfully",{"_index":574,"title":{},"body":{"components/BuyProductComponent.html":{},"components/LoginComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["such",{"_index":954,"title":{},"body":{"injectables/ImageServiceService.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ShowProductDetailsComponent.html":{}}}],["support",{"_index":1947,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":872,"title":{},"body":{"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{}}}],["surrounding",{"_index":1058,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["svg",{"_index":1948,"title":{},"body":{"modules.html":{}}}],["swal",{"_index":1654,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["sweetalert2",{"_index":1655,"title":{},"body":{"components/ShowProductDetailsComponent.html":{},"dependencies.html":{}}}],["switchmap",{"_index":548,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["switchmap(paymentresponse",{"_index":589,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["table",{"_index":1702,"title":{},"body":{"components/ShowProductDetailsComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":1362,"title":{},"body":{"components/RegisterComponent.html":{}}}],["tanto",{"_index":1282,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["tap((data",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":1519,"title":{},"body":{"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["td",{"_index":1704,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["term",{"_index":694,"title":{},"body":{"components/CartComponent.html":{},"components/SearchBarComponent.html":{}}}],["test",{"_index":1931,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1940,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1930,"title":{},"body":{"index.html":{}}}],["text",{"_index":990,"title":{},"body":{"injectables/ImageServiceService.html":{},"components/SpinnerComponent.html":{}}}],["text/csv",{"_index":1683,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["th",{"_index":752,"title":{},"body":{"components/CartComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.activatedroute.data.subscribe((data",{"_index":560,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["this.addtoken(req",{"_index":437,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.cartdetails",{"_index":712,"title":{},"body":{"components/CartComponent.html":{}}}],["this.chartdataordersbystatus",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["this.chartdatasalespermonth",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["this.chartdatatopselling",{"_index":153,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.clearform(productform",{"_index":1486,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.createorder",{"_index":1111,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["this.currentpage",{"_index":730,"title":{},"body":{"components/CartComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.fileservice.getcsv().pipe",{"_index":1682,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["this.fileservice.getexcel().pipe",{"_index":1692,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["this.fileservice.getpdf().pipe",{"_index":1673,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["this.getallorderspaginated(this.currentpage",{"_index":1159,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.getallproductspaginated(this.currentpage",{"_index":901,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.getcalculatedgrandtotal().tostring",{"_index":584,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["this.getcartdetailspaginated(this.currentpage",{"_index":710,"title":{},"body":{"components/CartComponent.html":{}}}],["this.getmyorderspaginated(this.currentpage",{"_index":1072,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["this.getproduct(productid",{"_index":1463,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.getroles",{"_index":1766,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.http.get(`${this.apiurl}/dashboard/last",{"_index":791,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.apiurl}/dashboard/orders",{"_index":790,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.apiurl}/dashboard/sales",{"_index":789,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.apiurl}/dashboard/top",{"_index":792,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.httpclient.delete(`${this.apiurl}/images/${id",{"_index":988,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["this.httpclient.get(`${this.apiurl}/api/v1/products/${productid}/images",{"_index":987,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["this.httpclient.get(`${this.apiurl}/images/image/${imageid",{"_index":989,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["this.httpclient.get(`${this.apiurl}/products/csv",{"_index":818,"title":{},"body":{"injectables/FileService.html":{}}}],["this.httpclient.get(`${this.apiurl}/products/excel",{"_index":819,"title":{},"body":{"injectables/FileService.html":{}}}],["this.httpclient.get(`${this.apiurl}/products/pdf",{"_index":815,"title":{},"body":{"injectables/FileService.html":{}}}],["this.httpclient.post(`${this.apiurl}/authenticate",{"_index":1817,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.post(`${this.apiurl}/images/upload",{"_index":986,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["this.httpclient.post(`${this.apiurl}/payments",{"_index":1183,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.httpclient.post(`${this.apiurl}/user/register",{"_index":1823,"title":{},"body":{"injectables/UserService.html":{}}}],["this.imagechanged",{"_index":1261,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["this.imagepreviews",{"_index":1470,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.imagepreviews.length",{"_index":1500,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.imagepreviews.map(image",{"_index":1502,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.imagepreviews.push(previewimage",{"_index":1555,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.imagepreviews.splice(index",{"_index":1568,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.imagepreviews[index].id",{"_index":1557,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.imagepreviews[index].name",{"_index":1563,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.imageservice.deleteimage(this.imagepreviews[index].id).subscribe",{"_index":1558,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.isdesktop",{"_index":1253,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["this.iseditmode",{"_index":1462,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.isgeneratingfile",{"_index":566,"title":{},"body":{"components/BuyProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.istokenexpired",{"_index":447,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.istokenexpired(token",{"_index":425,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.last4orders",{"_index":1784,"title":{},"body":{"components/UserComponent.html":{}}}],["this.myorderdetails",{"_index":1074,"title":{},"body":{"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{}}}],["this.onfileselected",{"_index":1518,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.orderdetails",{"_index":1109,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["this.orderdetails.orderproductquantitylist.filter",{"_index":596,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["this.orderdetails.orderproductquantitylist.foreach((productquantity",{"_index":604,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["this.orderdetails.orderproductquantitylist.push",{"_index":564,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["this.ordersdata",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["this.ordersdata.labels",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["this.ordersdata.values",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["this.orderstatus",{"_index":1160,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.pages",{"_index":722,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.pagesize",{"_index":711,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.pagesize).subscribe",{"_index":731,"title":{},"body":{"components/CartComponent.html":{},"components/MyOrdersComponent.html":{}}}],["this.paymentservice.geturlpaypalpayment(datapayment).pipe",{"_index":588,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["this.processpayment().subscribe",{"_index":569,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["this.product",{"_index":1251,"title":{},"body":{"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{}}}],["this.product.productactualprice",{"_index":1478,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.product.productimages.length",{"_index":1257,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["this.product.productimages[0",{"_index":1259,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["this.product?.productimages",{"_index":1256,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["this.productdetails",{"_index":562,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["this.productdetails.find(product",{"_index":605,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["this.productdetails.foreach",{"_index":563,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["this.products",{"_index":904,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.productservice.addproduct(formdata).subscribe",{"_index":1485,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.productservice.addtocart(productid).subscribe",{"_index":1262,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["this.productservice.changestatus(id",{"_index":1163,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.productservice.deletecartbyid(id).subscribe",{"_index":737,"title":{},"body":{"components/CartComponent.html":{}}}],["this.productservice.deleteproduct(productid).subscribe",{"_index":1658,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["this.productservice.getallorderspaginated(this.currentpage",{"_index":1161,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.productservice.getallproductspaginated(page",{"_index":902,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.productservice.getmyorderspaginated(this.currentpage",{"_index":1073,"title":{},"body":{"components/MyOrdersComponent.html":{}}}],["this.productservice.getproductbyid(productid).subscribe",{"_index":1464,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.productservice.placeorder(this.orderdetails).subscribe",{"_index":1112,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["this.productservice.searchcartdetails(searchkey",{"_index":729,"title":{},"body":{"components/CartComponent.html":{}}}],["this.productservice.searchproducts(this.searchkey",{"_index":1697,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["this.route.data.subscribe(data",{"_index":1248,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["this.route.snapshot.data['dashboarddata",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["this.router.navigate(['/admin",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/buyproduct",{"_index":734,"title":{},"body":{"components/CartComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["this.router.navigate(['/editproduct",{"_index":1663,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["this.router.navigate(['/forbidden",{"_index":448,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.router.navigate(['/login",{"_index":431,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{}}}],["this.router.navigate(['/showproductdetails",{"_index":1480,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.router.navigate(['/user",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":1356,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.salesdata",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["this.salesdata.labels",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["this.salesdata.values",{"_index":137,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["this.search.emit(this.searchkey",{"_index":1607,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.searchkey",{"_index":727,"title":{},"body":{"components/CartComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.searchkey.trim",{"_index":1696,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["this.selectedfiles",{"_index":1487,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.selectedfiles.filter(file",{"_index":1567,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.selectedfiles.foreach(file",{"_index":1497,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.selectedfiles.length",{"_index":1496,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.selectedfiles.push(file",{"_index":1531,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.selectedimage",{"_index":1258,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["this.selectedimages",{"_index":1669,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["this.setupcharts",{"_index":132,"title":{},"body":{"components/AdminComponent.html":{},"components/UserComponent.html":{}}}],["this.setuptopsellingchart",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.showimagemodal",{"_index":1672,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["this.toastrservice.error(\"session",{"_index":426,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.toastrservice.error(\"something",{"_index":1265,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["this.toastrservice.error(\"tu",{"_index":441,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.toastrservice.error('an",{"_index":732,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.toastrservice.error('error",{"_index":579,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.toastrservice.error('failed",{"_index":1484,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.toastrservice.error('invalid",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.toastrservice.error('server",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.toastrservice.error('the",{"_index":594,"title":{},"body":{"components/BuyProductComponent.html":{},"components/RegisterComponent.html":{}}}],["this.toastrservice.error(`error",{"_index":1662,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["this.toastrservice.success(\"product",{"_index":1263,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["this.toastrservice.success('account",{"_index":1354,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.toastrservice.success('image",{"_index":1559,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.toastrservice.success('order",{"_index":1113,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["this.toastrservice.success('product",{"_index":738,"title":{},"body":{"components/CartComponent.html":{},"components/SaveProductComponent.html":{}}}],["this.toastrservice.success('you",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.toastrservice.success(`product",{"_index":1659,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["this.toastrservice.success(response.message",{"_index":1165,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.toastrservice.warning('no",{"_index":1666,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["this.toastrservice.warning('you",{"_index":1528,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["this.topselling",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.topselling.length",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.topselling.map(product",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.totalelements",{"_index":716,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.totalpages",{"_index":714,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["this.userauthservice.clear",{"_index":430,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{}}}],["this.userauthservice.getroles",{"_index":1819,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userauthservice.gettoken",{"_index":422,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.userauthservice.isadmin",{"_index":868,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.userauthservice.isloggedin",{"_index":867,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.userauthservice.isuser",{"_index":869,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["this.userauthservice.setroles(response.user.role",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauthservice.settoken(response.jwttoken",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.login(loginform.value).subscribe",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.register(this.user).subscribe",{"_index":1353,"title":{},"body":{"components/RegisterComponent.html":{}}}],["throwerror",{"_index":403,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{}}}],["tiempo",{"_index":463,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["tiene",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":1996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toastr",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":369,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["toastrservice.error('failed",{"_index":2004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toastrservice.error('product",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":1334,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["token",{"_index":346,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{}}}],["token.replace(\"bearer",{"_index":1764,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["tokens",{"_index":341,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["top",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{},"injectables/DashboardService.html":{},"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/UserComponent.html":{}}}],["topselling",{"_index":43,"title":{"interfaces/TopSelling.html":{}},"body":{"components/AdminComponent.html":{},"injectables/DashboardService.html":{},"interfaces/TopSelling.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["total",{"_index":501,"title":{},"body":{"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["totalelements",{"_index":645,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["totalpages",{"_index":646,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["totalsales",{"_index":1733,"title":{},"body":{"interfaces/TopSelling.html":{}}}],["tracks",{"_index":1231,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["transaction",{"_index":1178,"title":{},"body":{"injectables/PaymentService.html":{}}}],["transform",{"_index":924,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["transición",{"_index":1308,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["transition",{"_index":923,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductViewDetailsComponent.html":{}}}],["translatey",{"_index":1319,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["translatey(0",{"_index":1317,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["triggered",{"_index":1428,"title":{},"body":{"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{}}}],["true",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"components/HeaderComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":457,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["tslib",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BuyProductComponent.html":{},"interfaces/Cart.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"interfaces/DataPayment.html":{},"interfaces/FileHandle.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/Image.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"interfaces/OrderAndProductDto.html":{},"components/OrderConfirmationComponent.html":{},"interfaces/OrderDetailsModel.html":{},"interfaces/OrderProductQuantity.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/Product.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"interfaces/SalesData.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/TopSelling.html":{},"interfaces/UrlPaypalResponse.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":1535,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["unauthorized",{"_index":361,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["unexpected",{"_index":733,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["unit",{"_index":512,"title":{},"body":{"components/BuyProductComponent.html":{},"index.html":{}}}],["unless",{"_index":349,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["up",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{},"components/SaveProductComponent.html":{}}}],["update",{"_index":1142,"title":{},"body":{"components/OrdersComponent.html":{},"components/SaveProductComponent.html":{}}}],["updated",{"_index":1479,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["updates",{"_index":521,"title":{},"body":{"components/BuyProductComponent.html":{},"components/FooterComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{}}}],["updating",{"_index":1132,"title":{},"body":{"components/OrdersComponent.html":{},"components/SaveProductComponent.html":{}}}],["upload",{"_index":981,"title":{},"body":{"injectables/ImageServiceService.html":{},"components/SaveProductComponent.html":{}}}],["uploaded",{"_index":982,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["uploadimage",{"_index":961,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["uploadimage(file",{"_index":977,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["uploading",{"_index":955,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["uploads",{"_index":979,"title":{},"body":{"injectables/ImageServiceService.html":{}}}],["upon",{"_index":1095,"title":{},"body":{"components/OrderConfirmationComponent.html":{}}}],["uppercase",{"_index":1373,"title":{},"body":{"components/RegisterComponent.html":{}}}],["url",{"_index":532,"title":{},"body":{"components/BuyProductComponent.html":{},"interfaces/FileHandle.html":{},"injectables/PaymentService.html":{},"components/ShowProductDetailsComponent.html":{},"interfaces/UrlPaypalResponse.html":{}}}],["url.createobjecturl(blob",{"_index":1687,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["url.revokeobjecturl(link.href",{"_index":1691,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["urlpaypalresponse",{"_index":1181,"title":{"interfaces/UrlPaypalResponse.html":{}},"body":{"injectables/PaymentService.html":{},"interfaces/UrlPaypalResponse.html":{},"coverage.html":{}}}],["usa",{"_index":2013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usando",{"_index":1538,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["use",{"_index":1923,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":695,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{}}}],["user",{"_index":212,"title":{"interfaces/User.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginResponse.html":{},"interfaces/MyOrderDetails.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/User.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":846,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserService.html":{}}}],["user.component.css",{"_index":1770,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.html",{"_index":1771,"title":{},"body":{"components/UserComponent.html":{}}}],["user.resolver",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user.resolver.ts",{"_index":1867,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userauthservice",{"_index":367,"title":{"injectables/UserAuthService.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProductViewDetailsComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userauthservice.gettoken",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercomponent",{"_index":211,"title":{"components/UserComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userfirstname",{"_index":1348,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["userlastname",{"_index":1349,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["username",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userpassword",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/LoginRequest.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["userrole",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"injectables/UserAuthService.html":{}}}],["userroles",{"_index":1818,"title":{},"body":{"injectables/UserService.html":{}}}],["userroles.every(role",{"_index":1821,"title":{},"body":{"injectables/UserService.html":{}}}],["userroles.length",{"_index":1820,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":472,"title":{},"body":{"components/BuyProductComponent.html":{},"injectables/DashboardService.html":{},"components/LoginComponent.html":{},"components/SearchBarComponent.html":{}}}],["userservice",{"_index":998,"title":{"injectables/UserService.html":{}},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice.rolematch(roles",{"_index":1981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uses",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{}}}],["usuario",{"_index":578,"title":{},"body":{"components/BuyProductComponent.html":{},"components/SaveProductComponent.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":1448,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["valor",{"_index":1605,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["value",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"injectables/DashboardService.html":{},"injectables/FileService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/ImageServiceService.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1381,"title":{},"body":{"interfaces/SalesData.html":{}}}],["var",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{}}}],["variable",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1956,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verificamos",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verificar",{"_index":1524,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["verifying",{"_index":1750,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["version",{"_index":1910,"title":{},"body":{"index.html":{},"properties.html":{}}}],["verticalmente",{"_index":1285,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["via",{"_index":479,"title":{},"body":{"components/BuyProductComponent.html":{},"index.html":{}}}],["view",{"_index":197,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/FooterComponent.html":{},"components/ForbiddenComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrderErrorComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":1459,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["viewchild('imagepreviewsection",{"_index":1451,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["viewed",{"_index":1239,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["viewimages",{"_index":1619,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["viewimages(product",{"_index":1634,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["visibility",{"_index":1646,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["visible",{"_index":682,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrdersComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["visualizes",{"_index":16,"title":{},"body":{"components/AdminComponent.html":{}}}],["void",{"_index":75,"title":{},"body":{"components/AdminComponent.html":{},"components/BuyProductComponent.html":{},"components/CartComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyOrdersComponent.html":{},"components/OrderConfirmationComponent.html":{},"components/OrdersComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SaveProductComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowProductDetailsComponent.html":{},"injectables/UserAuthService.html":{},"components/UserComponent.html":{}}}],["warning",{"_index":1529,"title":{},"body":{"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["went",{"_index":452,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ProductViewDetailsComponent.html":{}}}],["whether",{"_index":537,"title":{},"body":{"components/BuyProductComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/SaveProductComponent.html":{},"components/ShowProductDetailsComponent.html":{},"components/SpinnerComponent.html":{}}}],["whose",{"_index":1637,"title":{},"body":{"components/ShowProductDetailsComponent.html":{}}}],["width",{"_index":754,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductViewDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/ShowProductDetailsComponent.html":{}}}],["window",{"_index":1210,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["window.innerwidth",{"_index":1254,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["window.location.href",{"_index":575,"title":{},"body":{"components/BuyProductComponent.html":{}}}],["window:resize",{"_index":1203,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["window:resize(event",{"_index":1207,"title":{},"body":{"components/ProductViewDetailsComponent.html":{}}}],["within",{"_index":886,"title":{},"body":{"components/HomeComponent.html":{},"components/OrderConfirmationComponent.html":{}}}],["wrong",{"_index":453,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ProductViewDetailsComponent.html":{}}}],["y",{"_index":434,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["year",{"_index":826,"title":{},"body":{"components/FooterComponent.html":{}}}],["zero",{"_index":1573,"title":{},"body":{"components/SaveProductComponent.html":{}}}],["zone.js",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for displaying the admin dashboard.\nIt visualizes sales data, order statistics, and top-selling products using charts.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n\n\n            \n                styleUrls\n                ./admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartDataOrdersByStatus\n                            \n                            \n                                chartDataSalesPerMonth\n                            \n                            \n                                chartDataTopSelling\n                            \n                            \n                                chartOptions\n                            \n                            \n                                ordersData\n                            \n                            \n                                salesData\n                            \n                            \n                                topSelling\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setupCharts\n                            \n                            \n                                    Private\n                                setupTopSellingChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:46\n                            \n                        \n\n                \n                    \n                            Creates an instance of AdminComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProvides access to route data, including resolved dashboard data.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin/admin.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that runs on component initialization.\nRetrieves and processes dashboard data from the route resolver.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupCharts\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupCharts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin/admin.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Configures the charts for sales per month and orders by status.\nPopulates the chartDataSalesPerMonth and chartDataOrdersByStatus properties.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupTopSellingChart\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupTopSellingChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/admin/admin.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Configures the chart for top-selling products.\nPopulates the chartDataTopSelling property.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartDataOrdersByStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartData\n\n                    \n                \n                \n                    \n                        Default value : { labels: [], datasets: [] }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/admin.component.ts:35\n                        \n                    \n\n            \n                \n                    Chart data for orders categorized by status\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartDataSalesPerMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartData\n\n                    \n                \n                \n                    \n                        Default value : { labels: [], datasets: [] }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/admin.component.ts:32\n                        \n                    \n\n            \n                \n                    Chart data for sales per month\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartDataTopSelling\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartData\n\n                    \n                \n                \n                    \n                        Default value : { labels: [], datasets: [] }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/admin.component.ts:38\n                        \n                    \n\n            \n                \n                    Chart data for top-selling products\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    responsive: true,\n    plugins: {\n      legend: { display: false },\n    },\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/admin.component.ts:41\n                        \n                    \n\n            \n                \n                    Chart options for all graphs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SalesData | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/admin.component.ts:23\n                        \n                    \n\n            \n                \n                    Data for orders grouped by status\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salesData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SalesData | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/admin.component.ts:26\n                        \n                    \n\n            \n                \n                    Data for sales grouped by month\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topSelling\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TopSelling[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/admin/admin.component.ts:29\n                        \n                    \n\n            \n                \n                    List of top-selling products\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChartData, ChartOptions } from 'chart.js';\nimport { SalesData } from 'src/app/interfaces/sales-data';\nimport { TopSelling } from 'src/app/interfaces/top-selling';\n\n/**\n * Component responsible for displaying the admin dashboard.\n * It visualizes sales data, order statistics, and top-selling products using charts.\n *\n * @export\n * @class AdminComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  /** Data for orders grouped by status */\n  ordersData: SalesData | null = null;\n\n  /** Data for sales grouped by month */\n  salesData: SalesData | null = null;\n\n  /** List of top-selling products */\n  topSelling: TopSelling[] = [];\n\n  /** Chart data for sales per month */\n  chartDataSalesPerMonth: ChartData = { labels: [], datasets: [] };\n\n  /** Chart data for orders categorized by status */\n  chartDataOrdersByStatus: ChartData = { labels: [], datasets: [] };\n\n  /** Chart data for top-selling products */\n  chartDataTopSelling: ChartData = { labels: [], datasets: [] };\n\n  /** Chart options for all graphs */\n  chartOptions: ChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: { display: false },\n    },\n  };\n\n  /**\n   * Creates an instance of AdminComponent.\n   * @param {ActivatedRoute} route - Provides access to route data, including resolved dashboard data.\n   */\n  constructor(private route: ActivatedRoute) {}\n\n  /**\n   * Lifecycle hook that runs on component initialization.\n   * Retrieves and processes dashboard data from the route resolver.\n   */\n  ngOnInit(): void {\n    // Retrieve data from the resolver\n    const resolvedData = this.route.snapshot.data['dashboardData'];\n\n    this.ordersData = resolvedData.ordersData;\n    this.salesData = resolvedData.salesData;\n    this.topSelling = resolvedData.topSelling;\n\n    // Initialize chart configurations\n    this.setupCharts();\n    this.setupTopSellingChart();\n  }\n\n  /**\n   * Configures the charts for sales per month and orders by status.\n   * Populates the `chartDataSalesPerMonth` and `chartDataOrdersByStatus` properties.\n   * \n   * @private\n   */\n  private setupCharts(): void {\n      if (this.salesData) {\n        this.chartDataSalesPerMonth = {\n          labels: this.salesData.labels,\n          datasets: [\n            {\n              label: 'Orders per Month',\n              data: this.salesData.values,\n              backgroundColor: 'rgba(75, 192, 192, 0.5)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 2,\n            },\n          ],\n        };\n      }\n\n      if (this.ordersData) {\n        this.chartDataOrdersByStatus = {\n          labels: this.ordersData.labels,\n          datasets: [\n            {\n              label: 'Orders by Status',\n              data: this.ordersData.values,\n              backgroundColor: ['#36A2EB', '#FF6384'],\n              borderColor: ['#36A2EB', '#FF6384'],\n              borderWidth: 2,\n            },\n          ],\n        };\n      }\n  }\n\n  /**\n   * Configures the chart for top-selling products.\n   * Populates the `chartDataTopSelling` property.\n   *\n   * @private\n   */\n  private setupTopSellingChart(): void {\n    if (this.topSelling.length > 0) {\n      this.chartDataTopSelling = {\n        labels: this.topSelling.map(product => product.productName),\n        datasets: [\n          {\n            label: 'Top Selling Products',\n            data: this.topSelling.map(product => product.totalSales),\n            backgroundColor: 'rgba(255, 206, 86, 0.5)',\n            borderColor: 'rgba(255, 206, 86, 1)',\n            borderWidth: 2,\n          },\n        ],\n      };\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                Admin Dashboard\n            \n        \n        \n        \n            \n                Sales per month (€)\n                \n            \n\n            \n                Orders by status\n                \n                \n            \n           \n        \n\n        \n            \n                Top Selling Products\n                \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./admin.component.css\n                \n                #ordersChart {\n    padding: 0 300px;\n}\n\n#ordersChart canvas{\n    padding-top: 0.7em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Admin Dashboard                                                                Sales per month (€)                                                        Orders by status                                                                                                   Top Selling Products                                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ecommerce'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ecommerce';\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBuyProductComponent\n\nBuyProductComponent\n\nAppModule -->\n\nBuyProductComponent->AppModule\n\n\n\n\n\nCartComponent\n\nCartComponent\n\nAppModule -->\n\nCartComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\nAppModule -->\n\nForbiddenComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMyOrdersComponent\n\nMyOrdersComponent\n\nAppModule -->\n\nMyOrdersComponent->AppModule\n\n\n\n\n\nOrderConfirmationComponent\n\nOrderConfirmationComponent\n\nAppModule -->\n\nOrderConfirmationComponent->AppModule\n\n\n\n\n\nOrderErrorComponent\n\nOrderErrorComponent\n\nAppModule -->\n\nOrderErrorComponent->AppModule\n\n\n\n\n\nOrdersComponent\n\nOrdersComponent\n\nAppModule -->\n\nOrdersComponent->AppModule\n\n\n\n\n\nProductViewDetailsComponent\n\nProductViewDetailsComponent\n\nAppModule -->\n\nProductViewDetailsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSaveProductComponent\n\nSaveProductComponent\n\nAppModule -->\n\nSaveProductComponent->AppModule\n\n\n\n\n\nSearchBarComponent\n\nSearchBarComponent\n\nAppModule -->\n\nSearchBarComponent->AppModule\n\n\n\n\n\nShowProductDetailsComponent\n\nShowProductDetailsComponent\n\nAppModule -->\n\nShowProductDetailsComponent->AppModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nAppModule -->\n\nSpinnerComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BuyProductComponent\n                        \n                        \n                            CartComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            ForbiddenComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MyOrdersComponent\n                        \n                        \n                            OrderConfirmationComponent\n                        \n                        \n                            OrderErrorComponent\n                        \n                        \n                            OrdersComponent\n                        \n                        \n                            ProductViewDetailsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            SaveProductComponent\n                        \n                        \n                            SearchBarComponent\n                        \n                        \n                            ShowProductDetailsComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            UserComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HeaderComponent } from './components/shared/header/header.component';\nimport { ForbiddenComponent } from './components/forbidden/forbidden.component';\nimport { FormsModule } from '@angular/forms';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \nimport { RouterModule } from '@angular/router';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { SaveProductComponent } from './components/save-product/save-product.component';\nimport { ShowProductDetailsComponent } from './components/show-product-details/show-product-details.component';\nimport { ProductViewDetailsComponent } from './components/product-view-details/product-view-details.component';\nimport { BuyProductComponent } from './components/buy-product/buy-product.component';\nimport { OrderConfirmationComponent } from './components/order-confirmation/order-confirmation.component';\nimport { CartComponent } from './components/cart/cart.component';\nimport { SearchBarComponent } from './components/shared/search-bar/search-bar.component';\nimport { FooterComponent } from './components/shared/footer/footer.component';\nimport { MyOrdersComponent } from './components/my-orders/my-orders.component';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { SpinnerComponent } from './components/shared/spinner/spinner.component';\nimport { OrderErrorComponent } from './components/order-error/order-error.component';\nimport { NgChartsModule } from 'ng2-charts';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AdminComponent,\n    UserComponent,\n    LoginComponent,\n    HeaderComponent,\n    ForbiddenComponent,\n    RegisterComponent,\n    FooterComponent,\n    SaveProductComponent,\n    ShowProductDetailsComponent,\n    ProductViewDetailsComponent,\n    BuyProductComponent,\n    OrderConfirmationComponent,\n    CartComponent,\n    SearchBarComponent,\n    MyOrdersComponent,\n    OrdersComponent,\n    SpinnerComponent,\n    OrderErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ToastrModule.forRoot(), \n    BrowserAnimationsModule,\n    RouterModule,\n    NgChartsModule\n    \n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ForbiddenComponent } from './components/forbidden/forbidden.component';\nimport { authGuard } from './auth/auth.guard';\nimport { SaveProductComponent } from './components/save-product/save-product.component';\nimport { ShowProductDetailsComponent } from './components/show-product-details/show-product-details.component';\nimport { ProductViewDetailsComponent } from './components/product-view-details/product-view-details.component';\nimport { productResolver } from './resolvers/product.resolver';\nimport { BuyProductComponent } from './components/buy-product/buy-product.component';\nimport { buyProductResolver } from './resolvers/buy-product-resolver';\nimport { OrderConfirmationComponent } from './components/order-confirmation/order-confirmation.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { CartComponent } from './components/cart/cart.component';\nimport { MyOrdersComponent } from './components/my-orders/my-orders.component';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { dashboardUserResolver } from './resolvers/dashboard-user.resolver';\nimport { dashboardAdminResolver } from './resolvers/dashboard-admin.resolver';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [authGuard] },\n  { path: 'admin', component: AdminComponent, canActivate: [authGuard], data: {roles: ['AdminRole']}, resolve: { dashboardData: dashboardAdminResolver } },\n  { path: 'user', component: UserComponent, canActivate: [authGuard], data: {roles: ['UserRole']}, resolve: { dashboardData: dashboardUserResolver } },\n  { path: 'login', component: LoginComponent },\n  { path: 'forbidden', component: ForbiddenComponent },\n  { path: 'addNewProduct', component: SaveProductComponent, canActivate: [authGuard], data: { roles: ['AdminRole'] } },\n  { \n    path: 'editProduct/:productId', \n    component: SaveProductComponent, \n    canActivate: [authGuard], \n    data: { roles: ['AdminRole'] },\n    resolve: { product: productResolver }  \n  },\n\n  { path: 'showProductDetails', component: ShowProductDetailsComponent },\n  { path: 'productViewDetails/:productId', component: ProductViewDetailsComponent,  resolve: { product: productResolver } },\n  {\n    path: 'buyProduct',  \n    component: BuyProductComponent,\n    canActivate: [authGuard], \n    data: { roles: ['UserRole'] },\n    resolve: { productDetails: buyProductResolver }  \n\n  },\n  {\n    path: 'cart',  \n    component: CartComponent,\n    canActivate: [authGuard], \n    data: { roles: ['UserRole'] },\n  },\n  {\n    path: 'payment/success',\n    component: OrderConfirmationComponent,\n    canActivate: [authGuard],\n    data: { roles: ['UserRole'] }\n  },\n  {\n    path: 'myOrders',\n    component: MyOrdersComponent,\n    canActivate: [authGuard],\n    data: { roles: ['UserRole'] },\n    \n  },\n  {\n    path: 'orders',\n    component: OrdersComponent,\n    canActivate: [authGuard],\n    data: { roles: ['AdminRole'] }\n  },\n  { path: 'register', component: RegisterComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP interceptor for handling authentication tokens and error responses.\n\nAttaches the JWT token to outgoing requests unless the \"No-Auth\" header is set.\nChecks if the token is expired and redirects to the login page if necessary.\nHandles HTTP errors, including 401 (Unauthorized) and 403 (Forbidden).\n\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addToken\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                isTokenExpired\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userAuthService: UserAuthService, router: Router, toastrService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.interceptor.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userAuthService\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToken(request: HttpRequest, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.interceptor.ts:90\n                        \n                    \n\n\n            \n                \n                        Clones the HTTP request and adds the authorization token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The original HTTP request.\n\n                                            \n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The JWT token.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The cloned request with the Authorization header.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.interceptor.ts:38\n                        \n                    \n\n\n            \n                \n                        Intercepts HTTP requests to attach authentication tokens and handle errors.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The outgoing HTTP request.\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The next handler in the request pipeline.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                The modified request with authentication headers.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isTokenExpired\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTokenExpired(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/auth.interceptor.ts:105\n                        \n                    \n\n\n            \n                \n                        Checks if a given JWT token has expired.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The JWT token to check.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if the token has expired, otherwise false.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { catchError, Observable, throwError } from \"rxjs\";\nimport { UserAuthService } from \"../services/user-auth.service\";\nimport { Router } from \"@angular/router\";\nimport { Injectable } from \"@angular/core\";\nimport { ToastrService } from \"ngx-toastr\";\nimport {jwtDecode} from \"jwt-decode\";\n\n/**\n * HTTP interceptor for handling authentication tokens and error responses.\n * \n * - Attaches the JWT token to outgoing requests unless the \"No-Auth\" header is set.\n * - Checks if the token is expired and redirects to the login page if necessary.\n * - Handles HTTP errors, including 401 (Unauthorized) and 403 (Forbidden).\n * \n * @export\n * @class AuthInterceptor\n * @implements {HttpInterceptor}\n */\n@Injectable({\n    providedIn: 'root', \n})\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(\n        private userAuthService: UserAuthService,\n        private router: Router,\n        private toastrService: ToastrService\n    ) { }\n\n    /**\n     * Intercepts HTTP requests to attach authentication tokens and handle errors.\n     * \n     * @param {HttpRequest} req The outgoing HTTP request.\n     * @param {HttpHandler} next The next handler in the request pipeline.\n     * @returns {Observable>} The modified request with authentication headers.\n     */\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        \n        // No añadir token si la cabecera No-Auth está presente\n        if (req.headers.get(\"No-Auth\") === 'True') {\n            return next.handle(req);\n        }\n\n        // Obtener el token\n        const token = this.userAuthService.getToken();\n\n        // Comprobar si el token está expirado\n        if (token && this.isTokenExpired(token)) {\n            this.toastrService.error(\"Session expired, log in again\", \"Session expired\");\n            this.userAuthService.clear();\n            this.router.navigate(['/login']);\n        }\n\n        // Clonar la solicitud y agregar el token\n        const clonedRequest = this.addToken(req, token);\n\n        return next.handle(clonedRequest).pipe(\n            catchError((err: HttpErrorResponse) => {\n                if (err.status === 401) {\n                    this.toastrService.error(\"Tu sesión ha expirado. Inicia sesión nuevamente.\", \"Sesión Expirada\");\n                    this.router.navigate(['/login']);\n                }              \n                \n                else if (err.status === 403) {\n                    if (!this.isTokenExpired) {\n                        this.router.navigate(['/forbidden']);\n                    } else {\n                        this.router.navigate(['/login']);\n                    }\n                }\n                    \n                else if (err.status === 400) {\n                    return throwError(() => err); \n                }\n\n                return throwError(() => new Error(\"Something went wrong\"));\n            })\n        );\n    }\n\n    /**\n     * Clones the HTTP request and adds the authorization token.\n     * \n     * @private\n     * @param {HttpRequest} request The original HTTP request.\n     * @param {string} token The JWT token.\n     * @returns {HttpRequest} The cloned request with the Authorization header.\n     */\n    private addToken(request: HttpRequest, token: string) {\n        return request.clone({\n            setHeaders: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n    }\n\n    /**\n     * Checks if a given JWT token has expired.\n     * \n     * @private\n     * @param {string} token The JWT token to check.\n     * @returns {boolean} `true` if the token has expired, otherwise `false`.\n     */\n    private isTokenExpired(token: string): boolean {\n        try {\n            const decoded: any = jwtDecode(token);\n            const currentTime = Math.floor(Date.now() / 1000); // Tiempo actual en segundos\n            return decoded.exp \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BuyProductComponent.html":{"url":"components/BuyProductComponent.html","title":"component - BuyProductComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BuyProductComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/buy-product/buy-product.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for handling product purchases.\nAllows users to enter order details, modify quantities, and process payments via PayPal.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buy-product\n            \n\n\n\n            \n                styleUrls\n                ./buy-product.component.css\n            \n\n\n\n            \n                templateUrl\n                ./buy-product.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isGeneratingFile\n                            \n                            \n                                orderDetails\n                            \n                            \n                                productDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCalculatedGrandTotal\n                            \n                            \n                                getCalculatedTotal\n                            \n                            \n                                getQuantityForProduct\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onQuantityChanged\n                            \n                            \n                                placeOrder\n                            \n                            \n                                    Private\n                                processPayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, toastrService: ToastrService, paymentService: PaymentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/buy-product/buy-product.component.ts:34\n                            \n                        \n\n                \n                    \n                            Creates an instance of BuyProductComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProvides access to route data.\n\n\n                                                        \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for displaying notifications.\n\n\n                                                        \n                                                \n                                                \n                                                        paymentService\n                                                  \n                                                        \n                                                                        PaymentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHandles payment processing.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCalculatedGrandTotal\n                        \n                    \n                \n            \n            \n                \ngetCalculatedGrandTotal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/buy-product/buy-product.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Calculates the grand total for all selected products.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The total order amount.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCalculatedTotal\n                        \n                    \n                \n            \n            \n                \ngetCalculatedTotal(productId: number, productPrice: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/buy-product/buy-product.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Calculates the total price for a specific product.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe product ID.\n\n\n                                            \n                                        \n                                        \n                                                productPrice\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe price per unit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The calculated total.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQuantityForProduct\n                        \n                    \n                \n            \n            \n                \ngetQuantityForProduct(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/buy-product/buy-product.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Retrieves the quantity for a specific product.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe product ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The selected quantity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/buy-product/buy-product.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that runs on component initialization.\nRetrieves product data from the resolver and initializes order details.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onQuantityChanged\n                        \n                    \n                \n            \n            \n                \nonQuantityChanged(quantity: number, productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/buy-product/buy-product.component.ts:155\n                        \n                    \n\n\n            \n                \n                        Updates the selected quantity of a product.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new quantity.\n\n\n                                            \n                                        \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe product ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeOrder\n                        \n                    \n                \n            \n            \n                \nplaceOrder(orderForm: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/buy-product/buy-product.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Initiates the order placement process and redirects to PayPal if successful.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderForm\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form containing order details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processPayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    processPayment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/buy-product/buy-product.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Handles payment processing and returns a PayPal URL.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                The PayPal payment URL or an empty string in case of error.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isGeneratingFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/buy-product/buy-product.component.ts:31\n                        \n                    \n\n            \n                \n                    Indicates whether the payment process is in progress\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDetailsModel\n\n                    \n                \n                \n                    \n                        Default value : {\n    fullName: '',\n    fullAddress: '',\n    contactNumber: '',\n    alternateContactNumber: '',\n    orderProductQuantityList: []\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/buy-product/buy-product.component.ts:22\n                        \n                    \n\n            \n                \n                    Order details including user information and product quantities\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/buy-product/buy-product.component.ts:34\n                        \n                    \n\n            \n                \n                    List of products obtained from the resolver\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError, Observable, of, switchMap, throwError } from 'rxjs';\nimport { OrderDetailsModel } from 'src/app/interfaces/order-details-model';\nimport { Product } from 'src/app/interfaces/product';  // Importar el modelo de producto\nimport { PaymentService } from 'src/app/services/payment.service';\n\n/**\n * Component responsible for handling product purchases.\n * Allows users to enter order details, modify quantities, and process payments via PayPal.\n */\n@Component({\n  selector: 'app-buy-product',\n  templateUrl: './buy-product.component.html',\n  styleUrls: ['./buy-product.component.css']\n})\nexport class BuyProductComponent implements OnInit {\n\n  /** Order details including user information and product quantities */\n  orderDetails: OrderDetailsModel = {\n    fullName: '',\n    fullAddress: '',\n    contactNumber: '',\n    alternateContactNumber: '',\n    orderProductQuantityList: []\n  };\n\n  /** Indicates whether the payment process is in progress */\n  isGeneratingFile: boolean = false;\n\n  /** List of products obtained from the resolver */\n  productDetails: Product[] = [];  \n\n  /**\n   * Creates an instance of BuyProductComponent.\n   * @param {ActivatedRoute} activatedRoute - Provides access to route data.\n   * @param {ToastrService} toastrService - Service for displaying notifications.\n   * @param {PaymentService} paymentService - Handles payment processing.\n   */\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private toastrService: ToastrService,\n    private paymentService: PaymentService\n  \n  ) { }\n\n  /**\n   * Lifecycle hook that runs on component initialization.\n   * Retrieves product data from the resolver and initializes order details.\n   */\n  ngOnInit(): void {\n    // Obtener los datos del resolver\n    this.activatedRoute.data.subscribe((data) => {\n      if (data['productDetails']) {\n        this.productDetails = data['productDetails']; \n      }\n    });\n\n    this.productDetails.forEach(\n      product => this.orderDetails.orderProductQuantityList.push(\n        {\n          productId: product.productId!,\n          quantity: 1\n        }\n      )\n    );\n  }\n\n  /**\n   * Initiates the order placement process and redirects to PayPal if successful.\n   * @param {NgForm} orderForm - The form containing order details.\n   */\n  placeOrder(orderForm: NgForm) {\n    this.isGeneratingFile = true;\n    localStorage.setItem('pendingOrder', JSON.stringify(this.orderDetails));\n    this.processPayment().subscribe({\n      next: (paymentUrl: string) => {\n        this.isGeneratingFile = false;\n\n        if (paymentUrl) {\n          orderForm.reset();\n          console.log('Cart cleared successfully.');\n          window.location.href = paymentUrl; // Redirigir al usuario a PayPal\n        } else {\n          this.toastrService.error('Error while processing the payment', 'Error');\n        }\n      },\n      error: (err) => {\n        this.isGeneratingFile = false;\n        console.error('Error occurred:', err);\n        this.toastrService.error('Error while processing the payment', 'Error');\n      }\n    });\n  }\n  \n  /**\n   * Handles payment processing and returns a PayPal URL.\n   * @private\n   * @returns {Observable} The PayPal payment URL or an empty string in case of error.\n   */\n  private processPayment(): Observable {\n    const dataPayment = {\n      method: 'PAYPAL',\n      amount: this.getCalculatedGrandTotal().toString(),\n      currency: 'EUR',\n      description: `Payment processed`\n    };\n  \n    return this.paymentService.getURLPaypalPayment(dataPayment).pipe(\n      switchMap(paymentResponse => {\n        if (paymentResponse?.url) {\n          return of(paymentResponse.url.toString());\n        }\n        return throwError(() => new Error('Invalid payment response'));\n      }),\n      catchError(() => {\n        this.toastrService.error('The payment could not be processed.', 'Payment Error');\n        return of('');\n      })\n    );\n  }\n\n  /**\n   * Retrieves the quantity for a specific product.\n   * @param {number} productId - The product ID.\n   * @returns {number} The selected quantity.\n   */\n  getQuantityForProduct(productId: number): number {\n    const filteredProduct = this.orderDetails.orderProductQuantityList.filter(\n      (productQuantity) => productQuantity.productId === productId\n    );\n    return filteredProduct[0].quantity;\n  }\n\n   /**\n   * Calculates the total price for a specific product.\n   * @param {number} productId - The product ID.\n   * @param {number} productPrice - The price per unit.\n   * @returns {number} The calculated total.\n   */\n  getCalculatedTotal(productId: number, productPrice: number): number {\n    const filteredProduct = this.orderDetails.orderProductQuantityList.filter(\n      (productQuantity) => productQuantity.productId === productId\n    );\n    return filteredProduct[0].quantity * productPrice;\n  }\n\n  /**\n   * Updates the selected quantity of a product.\n   * @param {number} quantity - The new quantity.\n   * @param {number} productId - The product ID.\n   */\n  onQuantityChanged(quantity: number, productId: number) {\n    this.orderDetails.orderProductQuantityList.filter(\n      (orderProduct) => orderProduct.productId === productId\n    )[0].quantity = quantity;\n  }\n\n  /**\n   * Calculates the grand total for all selected products.\n   * @returns {number} The total order amount.\n   */\n  getCalculatedGrandTotal(): number {\n    let grandTotal = 0;\n  \n    this.orderDetails.orderProductQuantityList.forEach((productQuantity) => {\n      const product = this.productDetails.find(product => product.productId === productQuantity.productId);\n  \n      if (product) {\n        const price = product.productDiscountedPrice > 0 ? product.productDiscountedPrice : product.productActualPrice;\n        grandTotal += price * productQuantity.quantity; // Multiplicamos por la cantidad seleccionada\n      }\n    });\n  \n    return grandTotal;\n  }\n  \n}\n\n    \n\n    \n        \n    \n      \n\n      \n        \n          \n            \n            \n              Full Name\n              \n              \n                Full Name is required and must be between 3 and 100 characters.\n              \n            \n  \n            \n            \n              Full Address\n              \n              \n                Full Address is required and must be between 3 and 100 characters.\n              \n            \n  \n            \n            \n              Contact Number\n              \n              \n                Contact Number is required and must be numeric. It can optionally start with a \"+\" for the prefix.\n              \n            \n  \n            \n            \n              Alternate Contact Number\n              \n              \n                Alternate Contact Number is required and must be numeric. It can optionally start with a \"+\" for the prefix.\n              \n            \n  \n            \n            \n              Place Order\n            \n          \n        \n        \n            \n                \n                  \n                    Name\n                    Amount (€)\n                    Quantity\n                    Total (€)\n                  \n                \n                \n                  \n                    {{ product.productName }}\n                    {{ (product.productDiscountedPrice > 0 ? product.productDiscountedPrice : product.productActualPrice) | currency: 'EUR' }}\n                    \n                        \n                        >\n                            1\n                            2\n                            3\n                            4\n                                    \n                    \n                    \n                        {{ (product.productDiscountedPrice > 0 ? \n                            getCalculatedTotal(product.productId!, product.productDiscountedPrice) : \n                            getCalculatedTotal(product.productId!, product.productActualPrice)) \n                            | currency: 'EUR' \n                        }}\n                      \n                      \n                  \n                \n                \n                    \n                      Total:\n                      {{ getCalculatedGrandTotal() | currency: 'EUR' }}\n                    \n                  \n              \n        \n      \n    \n  \n  \n    \n\n    \n                \n                    ./buy-product.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        Full Name                                            Full Name is required and must be between 3 and 100 characters.                                                                  Full Address                                            Full Address is required and must be between 3 and 100 characters.                                                                  Contact Number                                            Contact Number is required and must be numeric. It can optionally start with a \"+\" for the prefix.                                                                  Alternate Contact Number                                            Alternate Contact Number is required and must be numeric. It can optionally start with a \"+\" for the prefix.                                                                  Place Order                                                                                                        Name                    Amount (€)                    Quantity                    Total (€)                                                                                        {{ product.productName }}                    {{ (product.productDiscountedPrice > 0 ? product.productDiscountedPrice : product.productActualPrice) | currency: \\'EUR\\' }}                                                                    >                            1                            2                            3                            4                                                                                                    {{ (product.productDiscountedPrice > 0 ?                             getCalculatedTotal(product.productId!, product.productDiscountedPrice) :                             getCalculatedTotal(product.productId!, product.productActualPrice))                             | currency: \\'EUR\\'                         }}                                                                                                                                        Total:                      {{ getCalculatedGrandTotal() | currency: \\'EUR\\' }}                                                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BuyProductComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cart.html":{"url":"interfaces/Cart.html","title":"interface - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/cart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cartId\n                                        \n                                \n                                \n                                        \n                                            productEntity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cartId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cartId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productEntity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productEntity:         Product\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Product } from \"./product\";\n\nexport interface Cart {\n    cartId?: number,\n    productEntity: Product,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartComponent.html":{"url":"components/CartComponent.html","title":"component - CartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cart/cart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for managing the shopping cart functionality.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart\n            \n\n\n\n            \n                styleUrls\n                ./cart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartDetails\n                            \n                            \n                                currentPage\n                            \n                            \n                                pages\n                            \n                            \n                                pageSize\n                            \n                            \n                                searchKey\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePage\n                            \n                            \n                                checkout\n                            \n                            \n                                delete\n                            \n                            \n                                getCartDetailsPaginated\n                            \n                            \n                                getVisiblePages\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchCartDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastrService: ToastrService, productService: ProductService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cart/cart.component.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Toastr service for notifications\n\n                                                        \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for handling product-related API calls\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Router for navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Changes the current page and fetches the corresponding cart details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Page number to navigate to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkout\n                        \n                    \n                \n            \n            \n                \ncheckout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Navigates to the checkout page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Deletes a product from the cart by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the cart item to be removed\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartDetailsPaginated\n                        \n                    \n                \n            \n            \n                \ngetCartDetailsPaginated(page: number, size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Fetches cart details with pagination.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The current page\n\n                                            \n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number of items per page\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVisiblePages\n                        \n                    \n                \n            \n            \n                \ngetVisiblePages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Retrieves the range of visible pages for pagination.\n\n\n                        \n                            Returns :     number[]\n\n                        \n                            \n                                An array of page numbers to be displayed in the pagination controls\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Initializes the component and loads the cart details.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchCartDetails\n                        \n                    \n                \n            \n            \n                \nsearchCartDetails(searchKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Searches for cart items based on the given keyword.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The search term used to filter cart items\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:18\n                        \n                    \n\n            \n                \n                    List of cart items\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:20\n                        \n                    \n\n            \n                \n                    Current page for pagination\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:28\n                        \n                    \n\n            \n                \n                    List of available pages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:26\n                        \n                    \n\n            \n                \n                    Number of items per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:30\n                        \n                    \n\n            \n                \n                    Search key for filtering cart items\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:24\n                        \n                    \n\n            \n                \n                    Total number of elements in the cart\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:22\n                        \n                    \n\n            \n                \n                    Total number of pages\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Cart } from 'src/app/interfaces/cart';\nimport { ProductService } from 'src/app/services/product.service';\n\n/**\n * Component for managing the shopping cart functionality.\n */\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit{\n\n  /** List of cart items */\n  cartDetails: Cart[] = [];\n  /** Current page for pagination */\n  currentPage: number = 0;\n  /** Total number of pages */\n  totalPages: number = 0;\n  /** Total number of elements in the cart */\n  totalElements: number = 0;\n  /** Number of items per page */\n  pageSize: number = 8;\n  /** List of available pages */\n  pages: number[] = [];\n  /** Search key for filtering cart items */\n  searchKey: string = '';\n\n  /**\n   * Constructor\n   * @param toastrService Toastr service for notifications\n   * @param productService Service for handling product-related API calls\n   * @param router Angular Router for navigation\n   */\n  constructor(\n    private toastrService: ToastrService,\n    private productService: ProductService,\n    private router: Router\n  ) {\n    \n  }\n\n  /**\n   * Initializes the component and loads the cart details.\n   */\n  ngOnInit(): void {\n    this.getCartDetailsPaginated(this.currentPage, this.pageSize);\n  }\n\n  /**\n   * Changes the current page and fetches the corresponding cart details.\n   * @param page Page number to navigate to\n   */\n  changePage(page: number): void {\n    if (page >= 0 && page  {\n        this.cartDetails = response.content;\n        this.totalPages = response.totalPages;\n        this.totalElements = response.totalElements;\n        this.pageSize = response.pageSize;\n\n        // Crear el array de páginas a mostrar\n        this.pages = Array.from({ length: this.totalPages }, (_, index) => index);\n      }, error: (err) => {\n        this.toastrService.error('Error, could not retrieve your cart details ' + err.error, 'Error')\n      }\n    });\n  }\n  \n  /**\n   * Searches for cart items based on the given keyword.\n   * @param searchKey The search term used to filter cart items\n   */\n  searchCartDetails(searchKey: string): void {\n    this.searchKey = searchKey;\n  \n    if (searchKey.trim() === '') {\n      this.getCartDetailsPaginated(this.currentPage, this.pageSize);\n    } else {\n      this.productService.searchCartDetails(searchKey, this.currentPage, this.pageSize).subscribe({\n        next: (response) => {\n          this.cartDetails = response.content;\n          this.totalPages = response.totalPages;\n          this.totalElements = response.totalElements;\n          this.pageSize = response.pageSize;\n  \n          // Crear el array de páginas a mostrar\n          this.pages = Array.from({ length: this.totalPages }, (_, index) => index);\n        }, error: (err) => {\n          this.toastrService.error('An unexpected error occurred: ' + err.error, 'Error')\n        }\n      });\n    }\n  }\n\n  /**\n   * Navigates to the checkout page.\n   */\n  checkout() {\n    this.router.navigate(['/buyProduct'], {\n      queryParams: {\n        isSingleProductCheckout: false,\n        id: 0\n      }\n    });    \n  }\n\n   /**\n   * Deletes a product from the cart by its ID.\n   * @param id The ID of the cart item to be removed\n   */\n  delete(id: number) {\n    this.productService.deleteCartById(id).subscribe({\n      next: () => {\n        this.toastrService.success('Product removed from the cart', 'Success');\n        this.getCartDetailsPaginated(this.currentPage, this.pageSize);\n      }, error: (err) => {\n        this.toastrService.error('An unexpected error occurred: ' + err.error, 'Error')\n      }\n    });\n  }\n  \n}\n\n    \n\n    \n        \n    \n    \n        Cart      \n    \n\n    \n    \n\n    \n      Check out\n    \n\n     0; else emptyCart\">\n        \n          \n            \n              \n                Name\n                Description\n                Price\n                Discounted Price\n                Action\n              \n            \n            \n                \n                    {{ cartItem.productEntity.productName }}\n                    {{ cartItem.productEntity.productDescription }}\n                    {{ cartItem.productEntity.productActualPrice | currency: 'EUR' }}\n                    \n                         0; else noDiscount\" \n                              class=\"badge bg-success\">\n                          {{ cartItem.productEntity.productDiscountedPrice | currency: 'EUR' }}\n                        \n                        \n                          This product has no discount\n                        \n                    \n                    \n                      \n                    \n            \n                  \n        \n        \n        \n          \n            \n              \n              \n                \n                  Previous\n                \n              \n\n              \n              \n                \n                  {{ page + 1 }}\n                \n              \n\n              \n              \n                \n                  Next\n                \n              \n            \n          \n        \n    \n    \n    \n        The cart is empty\n    \n\n    \n\n    \n                \n                    ./cart.component.css\n                \n                .th {\n    min-width: max-content;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Cart                            Check out         0; else emptyCart\">                                                            Name                Description                Price                Discounted Price                Action                                                                          {{ cartItem.productEntity.productName }}                    {{ cartItem.productEntity.productDescription }}                    {{ cartItem.productEntity.productActualPrice | currency: \\'EUR\\' }}                                             0; else noDiscount\"                               class=\"badge bg-success\">                          {{ cartItem.productEntity.productDiscountedPrice | currency: \\'EUR\\' }}                                                                          This product has no discount                                                                                                                                                                                                                                                    Previous                                                                                            {{ page + 1 }}                                                                                            Next                                                                                The cart is empty    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardService.html":{"url":"injectables/DashboardService.html","title":"injectable - DashboardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dashboard.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for retrieving dashboard data related to sales and orders.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLastFourOrders\n                            \n                            \n                                getOrdersByOrderStatus\n                            \n                            \n                                getSalesPerMonth\n                            \n                            \n                                getSalesPerMonthAdmin\n                            \n                            \n                                getTopSellingProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dashboard.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLastFourOrders\n                        \n                    \n                \n            \n            \n                \ngetLastFourOrders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dashboard.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Retrieves the last four orders placed.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing an array of the last four orders.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrdersByOrderStatus\n                        \n                    \n                \n            \n            \n                \ngetOrdersByOrderStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dashboard.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Retrieves the number of orders grouped by order status.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable containing order count by status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSalesPerMonth\n                        \n                    \n                \n            \n            \n                \ngetSalesPerMonth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dashboard.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Retrieves sales data grouped by month.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable containing sales data per month.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSalesPerMonthAdmin\n                        \n                    \n                \n            \n            \n                \ngetSalesPerMonthAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dashboard.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Retrieves sales data grouped by month for admin users.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable containing sales data per month (admin).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTopSellingProducts\n                        \n                    \n                \n            \n            \n                \ngetTopSellingProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dashboard.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Retrieves the top five best-selling products.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable containing an array of the top-selling products.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dashboard.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SalesData } from '../interfaces/sales-data';\nimport { environment } from 'src/environments/environment.development';\nimport { OrderAndProductDto } from '../interfaces/order-and-product-dto';\nimport { TopSelling } from '../interfaces/top-selling';\n\n/**\n * Service for retrieving dashboard data related to sales and orders.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  apiURL: string = environment.apiURL;\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Retrieves sales data grouped by month.\n   * @returns An `Observable` containing sales data per month.\n   */\n  getSalesPerMonth(): Observable {\n    return this.http.get(`${this.apiURL}/dashboard/sales-per-month`);\n  }\n\n   /**\n   * Retrieves the number of orders grouped by order status.\n   * @returns An `Observable` containing order count by status.\n   */\n  getOrdersByOrderStatus(): Observable {\n    return this.http.get(`${this.apiURL}/dashboard/orders-by-status`);\n  }\n\n  /**\n   * Retrieves the last four orders placed.\n   * @returns An `Observable` containing an array of the last four orders.\n   */\n  getLastFourOrders(): Observable {\n    return this.http.get(`${this.apiURL}/dashboard/last-four`);\n  }\n\n  /**\n   * Retrieves sales data grouped by month for admin users.\n   * @returns An `Observable` containing sales data per month (admin).\n   */\n  getSalesPerMonthAdmin(): Observable {\n    return this.http.get(`${this.apiURL}/dashboard/sales-per-month-admin`);\n  }\n\n  /**\n   * Retrieves the top five best-selling products.\n   * @returns An `Observable` containing an array of the top-selling products.\n   */\n  getTopSellingProducts(): Observable {\n    return this.http.get(`${this.apiURL}/dashboard/top-selling`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataPayment.html":{"url":"interfaces/DataPayment.html","title":"interface - DataPayment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataPayment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/data-payment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DataPayment {\n    method: string,\n    amount: string,\n    currency: string,\n    description: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileHandle.html":{"url":"interfaces/FileHandle.html","title":"interface - FileHandle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileHandle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/file-handle-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     SafeUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SafeUrl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SafeUrl } from \"@angular/platform-browser\"\n\nexport interface FileHandle {\n    file: File\n    url: SafeUrl\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/file.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling file downloads (PDF, CSV, Excel).\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCsv\n                            \n                            \n                                getExcel\n                            \n                            \n                                getPdf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/file.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCsv\n                        \n                    \n                \n            \n            \n                \ngetCsv()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Downloads a CSV file.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing the CSV file as a Blob.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExcel\n                        \n                    \n                \n            \n            \n                \ngetExcel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Downloads an Excel file.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing the Excel file as a Blob.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPdf\n                        \n                    \n                \n            \n            \n                \ngetPdf()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/file.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Downloads a PDF file.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing the PDF file as a Blob.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/services/file.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\n\n/**\n * Service for handling file downloads (PDF, CSV, Excel).\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  apiURL: string = environment.apiURL;\n  \n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  /**\n   * Downloads a PDF file.\n   * @returns An `Observable` containing the PDF file as a `Blob`.\n   */\n  getPdf(): Observable {\n    // Fetch the PDF as a Blob\n    return this.httpClient.get(`${this.apiURL}/products/pdf`, { responseType: 'blob' as 'json' });\n  }\n\n  /**\n   * Downloads a CSV file.\n   * @returns An `Observable` containing the CSV file as a `Blob`.\n   */\n  getCsv(): Observable {\n    // Fetch the PDF as a Blob\n    return this.httpClient.get(`${this.apiURL}/products/csv`, { responseType: 'blob' as 'json' });\n  }\n\n  /**\n   * Downloads an Excel file.\n   * @returns An `Observable` containing the Excel file as a `Blob`.\n   */\n  getExcel(): Observable {\n    // Fetch the PDF as a Blob\n    return this.httpClient.get(`${this.apiURL}/products/excel`, { responseType: 'blob' as 'json' });\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for rendering the footer section of the application.\nIt dynamically updates the displayed year to always reflect the current year.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/footer/footer.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * \n * This component is responsible for rendering the footer section of the application. \n * It dynamically updates the displayed year to always reflect the current year.\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n  currentYear: number = new Date().getFullYear();\n\n}\n\n    \n\n    \n        \n    \n      Copyright &copy; Spring E-Commerce {{currentYear}} \n    \n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Copyright © Spring E-Commerce {{currentYear}}     '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForbiddenComponent.html":{"url":"components/ForbiddenComponent.html","title":"component - ForbiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForbiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forbidden/forbidden.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that represents the \"Forbidden\" page.\nDisplayed when the user does not have the necessary permissions.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forbidden\n            \n\n\n\n            \n                styleUrls\n                ./forbidden.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forbidden.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component that represents the \"Forbidden\" page.\n * Displayed when the user does not have the necessary permissions.\n */\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.css']\n})\nexport class ForbiddenComponent {\n\n}\n\n    \n\n    \n        \n    \n        You are not allowed to access to this page\n        \n        \n    \n\n\n    \n\n    \n                \n                    ./forbidden.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            You are not allowed to access to this page                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForbiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Header component responsible for displaying navigation options based on user authentication.\nThis component provides methods to check the user's authentication status, determine roles,\nand handle logout functionality.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAdmin\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                isUser\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userAuthService: UserAuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/header/header.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userAuthService\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/header/header.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Checks if the logged-in user has admin privileges.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if the user is an admin, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/header/header.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Checks if a user is logged in.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if the user is logged in, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/header/header.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Checks if the logged-in user has regular user privileges.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if the user is a regular user, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/header/header.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Logs out the user by clearing authentication data and redirecting to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserAuthService } from 'src/app/services/user-auth.service';\n\n/**\n * Header component responsible for displaying navigation options based on user authentication.\n * \n * This component provides methods to check the user's authentication status, determine roles, \n * and handle logout functionality.\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n  constructor(\n    private userAuthService: UserAuthService,\n    private router: Router, \n  ) {\n\n  }\n\n  /**\n   * Checks if a user is logged in.\n   * \n   * @returns `true` if the user is logged in, otherwise `false`.\n   */\n  public isLoggedIn(): boolean {\n    return this.userAuthService.isLoggedIn();\n  }\n\n  /**\n   * Logs out the user by clearing authentication data and redirecting to the login page.\n   */\n  public logout() {\n    this.userAuthService.clear();\n    this.router.navigate(['/login']);\n  }\n\n  /**\n   * Checks if the logged-in user has admin privileges.\n   * \n   * @returns `true` if the user is an admin, otherwise `false`.\n   */\n  public isAdmin(): boolean {\n    return this.userAuthService.isAdmin();\n  }\n\n  /**\n   * Checks if the logged-in user has regular user privileges.\n   * \n   * @returns `true` if the user is a regular user, otherwise `false`.\n   */\n  public isUser(): boolean {\n    return this.userAuthService.isUser();\n  }\n}\n\n    \n\n    \n        \n    \n      \n\n      \n        \n      \n      \n        \n\n          \n            Home\n          \n\n          \n            Cart\n          \n\n          \n            My Orders\n          \n\n          \n            Orders\n          \n\n          \n            \n              Add New Product\n            \n          \n\n          \n            \n              Show products\n            \n          \n\n        \n\n        \n          Login\n        \n        \n          Logout\n        \n\n      \n    \n  \n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  Home                                Cart                                My Orders                                Orders                                              Add New Product                                                          Show products                                                Login                          Logout                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for displaying the home page with a list of products.\nSupports pagination, search functionality, and navigation to product details.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                pages\n                            \n                            \n                                pageSize\n                            \n                            \n                                products\n                            \n                            \n                                searchKey\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePage\n                            \n                            \n                                getAllProductsPaginated\n                            \n                            \n                                getVisiblePages\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchProducts\n                            \n                            \n                                showProductDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService, router: Router, toastrService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Changes the current page for pagination and fetches new data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Page number to navigate to.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProductsPaginated\n                        \n                    \n                \n            \n            \n                \ngetAllProductsPaginated(page: number, size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Retrieves a paginated list of products from the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Current page number.\n\n                                            \n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number of products per page.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVisiblePages\n                        \n                    \n                \n            \n            \n                \ngetVisiblePages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Returns a subset of pagination numbers to display for navigation.\n\n\n                        \n                            Returns :     number[]\n\n                        \n                            \n                                An array of page numbers within the visible range.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchProducts\n                        \n                    \n                \n            \n            \n                \nsearchProducts(searchKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:114\n                        \n                    \n\n\n            \n                \n                        Searches for products based on the given search key.\nIf the search key is empty, it resets the product list to paginated results.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The search query entered by the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showProductDetails\n                        \n                    \n                \n            \n            \n                \nshowProductDetails(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Navigates to the product details page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the selected product.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:22\n                        \n                    \n\n            \n                \n                    Current page number for pagination\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:34\n                        \n                    \n\n            \n                \n                    Array containing the available pages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:31\n                        \n                    \n\n            \n                \n                    Number of products displayed per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:19\n                        \n                    \n\n            \n                \n                    List of products displayed on the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:37\n                        \n                    \n\n            \n                \n                    Search key used for filtering products\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Total number of elements available\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:25\n                        \n                    \n\n            \n                \n                    Total number of pages available\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Product } from 'src/app/interfaces/product';\nimport { ProductService } from 'src/app/services/product.service';\n\n/**\n * Component responsible for displaying the home page with a list of products.\n * Supports pagination, search functionality, and navigation to product details.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit{\n\n  /** List of products displayed on the page */\n  products: Product[] = [];\n\n  /** Current page number for pagination */\n  currentPage: number = 0;\n\n  /** Total number of pages available */\n  totalPages: number = 0;\n\n  /** Total number of elements available */\n  totalElements: number = 0;\n\n  /** Number of products displayed per page */\n  pageSize: number = 8;\n\n  /** Array containing the available pages */\n  pages: number[] = [];\n\n  /** Search key used for filtering products */\n  searchKey: string = '';\n\n  constructor(\n    private productService: ProductService,\n    private router: Router,\n    private toastrService: ToastrService\n  ) {\n    \n  }\n\n  ngOnInit(): void {\n    this.getAllProductsPaginated(this.currentPage, this.pageSize);\n  }\n\n  /**\n   * Retrieves a paginated list of products from the backend.\n   * @param page Current page number.\n   * @param size Number of products per page.\n   */\n  getAllProductsPaginated(page: number, size: number): void {\n    this.productService.getAllProductsPaginated(page, size).subscribe({\n      next: (response) => {\n        this.products = response.content;\n        this.totalPages = response.totalPages;\n        this.totalElements = response.totalElements;\n        this.pageSize = response.pageSize;\n\n        // Crear el array de páginas a mostrar\n        this.pages = Array.from({ length: this.totalPages }, (_, index) => index);\n      }, error: (err) => {\n        this.toastrService.error('Error, could not retrieve the product list  ' + err.error, 'Error')\n      }\n    });\n  }\n\n  /**\n   * Changes the current page for pagination and fetches new data.\n   * @param page Page number to navigate to.\n   */\n  changePage(page: number): void {\n    if (page >= 0 && page  {\n            this.products = response.content;\n            this.totalPages = response.totalPages;\n            this.totalElements = response.totalElements;\n            this.pageSize = response.pageSize;\n  \n            // Crear el array de páginas a mostrar\n            this.pages = Array.from({ length: this.totalPages }, (_, index) => index);\n          }, error: (err) => {\n            this.toastrService.error('An unexpected error occurred: ' + err.error, 'Error')\n          }\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            Home Page\n        \n        \n            \n            \n            \n  \n            \n                \n                     0 ; else defaultImage\" \n                        [src]=\"'data:' + product.productImages[0].type + ';base64,' + product.productImages[0].picByte\"\n                        class=\"card-img-top\"\n                        [alt]=\"product.productName\"\n                    >\n                    \n                        \n                    \n\n                    \n                        \n                            Product Name: {{ product.productName }}\n                        \n                        \n                            Product Description: \n                            \n                                {{ product.productDescription.length > 100 ? (product.productDescription | slice: 0:100) + '...' : product.productDescription }}\n                            \n                        \n                        \n                        \n                            Product Price: \n                            {{ product.productActualPrice | currency: 'EUR' }}\n                        \n\n                        \n                        \n                            \n                                Product Price: \n                                {{ product.productDiscountedPrice | currency: 'EUR' }}\n                                {{ product.productActualPrice | currency: 'EUR' }}\n                            \n                        \n\n                        \n                            \n                                View details\n                            \n                        \n                    \n                \n            \n\n            \n            \n                \n                \n                    \n                    \n                    \n                        Previous\n                    \n                    \n\n                    \n                    \n                    \n                        {{ page + 1 }}\n                    \n                    \n\n                    \n                    \n                    \n                        Next\n                    \n                    \n                \n                \n            \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n.card-img-top {\n    margin: 40px auto;\n    width: auto;        \n    height: 300px;     \n}\n\n.card {\n    height: 750px;\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.card:hover, \n.card:focus-within {\n    transform: scale(1.05);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n}\n\n@media (min-width: 0px) and (max-width: 768px) { /* A partir de pantallas medianas (md) */\n    .search {\n        width: 100%;\n    }\n}\n\n@media (min-width: 768px) and (max-width: 991px) { /* A partir de pantallas medianas (md) */\n    .search {\n        width: 45%;\n    }\n}\n\n@media (min-width: 991px) { /* A partir de pantallas medianas (md) */\n    .search {\n        width: 24%;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home Page                                                                                                       0 ; else defaultImage\"                         [src]=\"\\'data:\\' + product.productImages[0].type + \\';base64,\\' + product.productImages[0].picByte\"                        class=\"card-img-top\"                        [alt]=\"product.productName\"                    >                                                                                                                                        Product Name: {{ product.productName }}                                                                            Product Description:                                                             {{ product.productDescription.length > 100 ? (product.productDescription | slice: 0:100) + \\'...\\' : product.productDescription }}                                                                                                                                Product Price:                             {{ product.productActualPrice | currency: \\'EUR\\' }}                                                                                                                                    Product Price:                                 {{ product.productDiscountedPrice | currency: \\'EUR\\' }}                                {{ product.productActualPrice | currency: \\'EUR\\' }}                                                                                                                                        View details                                                                                                                                                                                                                                                Previous                                                                                                                            {{ page + 1 }}                                                                                                                            Next                                                                                                            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/image.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            picByte\n                                        \n                                \n                                \n                                        \n                                            shortName\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picByte\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picByte:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shortName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Image {\n    shortName: string;\n    id: number;\n    name: string;\n    type: string;\n    picByte: string; // Base64\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageServiceService.html":{"url":"injectables/ImageServiceService.html","title":"injectable - ImageServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImageServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/image.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling image-related operations, such as uploading, retrieving, and deleting images.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteImage\n                            \n                            \n                                getImageAsBase64\n                            \n                            \n                                getProductImages\n                            \n                            \n                                uploadImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/image.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteImage\n                        \n                    \n                \n            \n            \n                \ndeleteImage(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/image.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Deletes an image by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the image to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable indicating the result of the deletion operation.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getImageAsBase64\n                        \n                    \n                \n            \n            \n                \ngetImageAsBase64(imageId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/image.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Retrieves an image as a Base64-encoded string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                imageId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the image.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing the image in Base64 format.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductImages\n                        \n                    \n                \n            \n            \n                \ngetProductImages(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/image.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Retrieves a list of images associated with a specific product.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable containing an array of images.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadImage\n                        \n                    \n                \n            \n            \n                \nuploadImage(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/image.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Uploads an image file to the server.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The image file to upload.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable containing the uploaded image details.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/services/image.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment.development';\nimport { Observable } from 'rxjs';\nimport { Image } from '../interfaces/image';\n\n/**\n * Service for handling image-related operations, such as uploading, retrieving, and deleting images.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageServiceService {\n\n  apiURL: string = environment.apiURL;\n  \n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  /**\n   * Uploads an image file to the server.\n   * @param file The image file to upload.\n   * @returns An `Observable` containing the uploaded image details.\n   */\n  uploadImage(file: File): Observable {\n    const formData = new FormData();\n    formData.append('file', file);  \n  \n    return this.httpClient.post(`${this.apiURL}/images/upload`, formData);\n  }\n  \n  /**\n   * Retrieves a list of images associated with a specific product.\n   * @param productId The ID of the product.\n   * @returns An `Observable` containing an array of images.\n   */\n  getProductImages(productId: number): Observable {\n    return this.httpClient.get(`${this.apiURL}/api/v1/products/${productId}/images`);\n  }\n\n  /**\n   * Deletes an image by its ID.\n   * @param id The ID of the image to delete.\n   * @returns An `Observable` indicating the result of the deletion operation.\n   */\n  deleteImage(id: number): Observable {\n    return this.httpClient.delete(`${this.apiURL}/images/${id}`);\n  }\n\n  /**\n   * Retrieves an image as a Base64-encoded string.\n   * @param imageId The ID of the image.\n   * @returns An `Observable` containing the image in Base64 format.\n   */\n  getImageAsBase64(imageId: number): Observable {\n    return this.httpClient.get(`${this.apiURL}/images/image/${imageId}`, { responseType: 'text' as 'json' });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for handling user login.\nIt communicates with the authentication service and navigates users based on their roles.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userName\n                            \n                            \n                                userPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, userAuthService: UserAuthService, toastrService: ToastrService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuthService\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginForm: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Handles user login by sending credentials to the backend and storing the authentication token.\nRedirects users based on their roles.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginForm\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Form containing user credentials.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:24\n                        \n                    \n\n            \n                \n                    Stores the username entered in the login form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:21\n                        \n                    \n\n            \n                \n                    Stores the user's password entered in the login form\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserAuthService } from 'src/app/services/user-auth.service';\nimport { UserService } from 'src/app/services/user.service';\n\n/**\n * Component responsible for handling user login.\n * It communicates with the authentication service and navigates users based on their roles.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: []\n})\nexport class LoginComponent {\n\n  /** Stores the user's password entered in the login form */\n  userPassword: string = '';\n\n  /** Stores the username entered in the login form */\n  userName: string = '';\n  \n  constructor(\n    private userService: UserService,\n    private userAuthService: UserAuthService,\n    private toastrService: ToastrService, \n    private router: Router\n  ) {\n\n  }\n\n  \n  /**\n   * Handles user login by sending credentials to the backend and storing the authentication token.\n   * Redirects users based on their roles.\n   * @param loginForm Form containing user credentials.\n   */\n  login(loginForm: NgForm) {\n    this.userService.login(loginForm.value).subscribe({\n      next: (response) => {\n        this.userAuthService.setRoles(response.user.role!);\n        this.userAuthService.setToken(response.jwtToken);\n\n        const roleName = response.user.role![0].roleName;\n\n        if ('AdminRole' === roleName) {\n          this.router.navigate(['/admin'])\n        } else if ('UserRole' === roleName) {\n          this.router.navigate(['/user'])\n        }\n\n        this.toastrService.success('You have logged in successfully', 'Success');\n      },\n      error: (error) => {\n        if (error.status === 401) {\n          this.toastrService.error('Invalid credentials. Please try again.', 'Error');\n        } else if (error.status === 500) {\n          this.toastrService.error('Server error. Please try later.', 'Error');\n        } else {\n          this.toastrService.error('An unexpected error occurred.', 'Error');\n        }\n      }\n    });\n  }\n  \n}\n\n    \n\n    \n        \n    \n        Login\n        \n            \n                \n            \n                Username is required.\n            \n        \n            \n                \n            \n                Password is required.\n            \n                 \n            \n                Login\n            \n\n            \n                Don't have an account? \n                    Sign up\n                \n            \n        \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .card {\n    width: 32em;\n}\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Login                                                                Username is required.                                                                            Password is required.                                                         Login                                        Don\\'t have an account?                     Sign up                                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginRequest.html":{"url":"interfaces/LoginRequest.html","title":"interface - LoginRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/login-request.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userName\n                                        \n                                \n                                \n                                        \n                                            userPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginRequest {\n    userName: string,\n    userPassword: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResponse.html":{"url":"interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/login-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtToken\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from \"./user\"\n\nexport interface LoginResponse {\n    user: User\n    jwtToken: string\n  }\n  \n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MyOrderDetails.html":{"url":"interfaces/MyOrderDetails.html","title":"interface - MyOrderDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MyOrderDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/my-order-details.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            orderAlternateContactNumber\n                                        \n                                \n                                \n                                        \n                                            orderAmount\n                                        \n                                \n                                \n                                        \n                                            orderContactNumber\n                                        \n                                \n                                \n                                        \n                                            orderFullName\n                                        \n                                \n                                \n                                        \n                                            orderFullOrder\n                                        \n                                \n                                \n                                        \n                                            orderId\n                                        \n                                \n                                \n                                        \n                                            orderStatus\n                                        \n                                \n                                \n                                        \n                                            product\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        orderAlternateContactNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderAlternateContactNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderAmount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderAmount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderContactNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderContactNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderFullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderFullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderFullOrder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderFullOrder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderStatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        product:         Product\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Product } from \"./product\";\nimport { User } from \"./user\";\n\nexport interface MyOrderDetails {\n    orderId: number;\n    orderFullName: string,\n    orderFullOrder: string,\n    orderContactNumber: string,\n    orderAlternateContactNumber: string,\n    orderStatus: string,\n    orderAmount: number,\n    product: Product,\n    user: User\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyOrdersComponent.html":{"url":"components/MyOrdersComponent.html","title":"component - MyOrdersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyOrdersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/my-orders/my-orders.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for displaying and managing user orders.\nIt supports pagination and search functionality.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-orders\n            \n\n\n\n            \n                styleUrls\n                ./my-orders.component.css\n            \n\n\n\n            \n                templateUrl\n                ./my-orders.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                myOrderDetails\n                            \n                            \n                                pages\n                            \n                            \n                                pageSize\n                            \n                            \n                                searchKey\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePage\n                            \n                            \n                                getMyOrdersPaginated\n                            \n                            \n                                getVisiblePages\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchOrderDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService, toastrService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/my-orders/my-orders.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/my-orders/my-orders.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Changes the current page and fetches the corresponding orders.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The page number to navigate to.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMyOrdersPaginated\n                        \n                    \n                \n            \n            \n                \ngetMyOrdersPaginated(page: number, size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/my-orders/my-orders.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Retrieves paginated orders from the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The current page index.\n\n                                            \n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The number of orders per page.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVisiblePages\n                        \n                    \n                \n            \n            \n                \ngetVisiblePages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/my-orders/my-orders.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Gets the visible page numbers for pagination controls.\n\n\n                        \n                            Returns :     number[]\n\n                        \n                            \n                                An array of page numbers surrounding the current page.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/my-orders/my-orders.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchOrderDetails\n                        \n                    \n                \n            \n            \n                \nsearchOrderDetails(searchKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/my-orders/my-orders.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Searches for orders based on the provided search key.\nIf the search key is empty, fetches the full paginated order list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The keyword used for searching orders.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/my-orders/my-orders.component.ts:21\n                        \n                    \n\n            \n                \n                    Current page index for pagination\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myOrderDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyOrderDetails[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/my-orders/my-orders.component.ts:18\n                        \n                    \n\n            \n                \n                    List of user orders retrieved from the backend\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/my-orders/my-orders.component.ts:33\n                        \n                    \n\n            \n                \n                    Array representing available page numbers\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                    \n                        \n                                Defined in src/app/components/my-orders/my-orders.component.ts:30\n                        \n                    \n\n            \n                \n                    Number of orders per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/my-orders/my-orders.component.ts:36\n                        \n                    \n\n            \n                \n                    Search key used for filtering orders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/my-orders/my-orders.component.ts:27\n                        \n                    \n\n            \n                \n                    Total number of orders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/my-orders/my-orders.component.ts:24\n                        \n                    \n\n            \n                \n                    Total number of pages available\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { MyOrderDetails } from 'src/app/interfaces/my-order-details';\nimport { ProductService } from 'src/app/services/product.service';\n\n/**\n * Component responsible for displaying and managing user orders.\n * It supports pagination and search functionality.\n */\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})\nexport class MyOrdersComponent implements OnInit{\n\n  /** List of user orders retrieved from the backend */\n  myOrderDetails: MyOrderDetails[] = [];\n\n  /** Current page index for pagination */\n  currentPage: number = 0;\n\n  /** Total number of pages available */\n  totalPages: number = 0;\n\n  /** Total number of orders */\n  totalElements: number = 0;\n\n  /** Number of orders per page */\n  pageSize: number = 8;\n\n  /** Array representing available page numbers */\n  pages: number[] = [];\n\n  /** Search key used for filtering orders */\n  searchKey: string = '';\n\n  constructor(\n    private productService: ProductService,\n    private toastrService: ToastrService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.getMyOrdersPaginated(this.currentPage, this.pageSize)\n  }\n\n  /**\n   * Retrieves paginated orders from the backend.\n   * @param page The current page index.\n   * @param size The number of orders per page.\n   */\n  getMyOrdersPaginated(page: number, size: number) {\n    this.productService.getMyOrdersPaginated(this.currentPage, this.pageSize).subscribe({\n      next: (response) => {\n        this.myOrderDetails = response.content;\n        this.totalPages = response.totalPages;\n        this.totalElements = response.totalElements;\n        this.pageSize = response.pageSize;\n\n        // Crear el array de páginas a mostrar\n        this.pages = Array.from({ length: this.totalPages }, (_, index) => index);\n      }, error: (error) => {\n        this.toastrService.error('Error while retrieving order details ' + error.error, 'Error');\n      }\n    }); \n  }\n\n  /**\n   * Changes the current page and fetches the corresponding orders.\n   * @param page The page number to navigate to.\n   */\n  changePage(page: number): void {\n    if (page >= 0 && page  {\n            this.myOrderDetails = response.content;\n            this.totalPages = response.totalPages;\n            this.totalElements = response.totalElements;\n            this.pageSize = response.pageSize;\n  \n            // Crear el array de páginas a mostrar\n            this.pages = Array.from({ length: this.totalPages }, (_, index) => index);\n          }, error: (err) => {\n            this.toastrService.error('An unexpected error occurred: ' + err.error, 'Error')\n          }\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            My Orders\n        \n\n         0; else noOrders\">\n            \n            \n            \n            \n\n                \n                    \n                        \n                            ID\n                            Name\n                            Address\n                            Contact No\n                            Amount\n                            Status\n                        \n                    \n                    \n                        \n                            {{ orderDetail.orderId }}\n                            {{ orderDetail.orderFullName }}\n                            {{ orderDetail.orderFullOrder }}\n                            {{ orderDetail.orderContactNumber }}\n                            {{ orderDetail.orderAmount }}\n                            {{ orderDetail.orderStatus }}\n                        \n                    \n                \n            \n            \n            \n            \n                \n                \n                    \n                    \n                    \n                        Previous\n                    \n                    \n\n                    \n                    \n                    \n                        {{ page + 1 }}\n                    \n                    \n\n                    \n                    \n                    \n                        Next\n                    \n                    \n                \n                \n            \n\n        \n\n        \n            No orders available.\n        \n  \n\n    \n\n    \n                \n                    ./my-orders.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        My Orders                 0; else noOrders\">                                                                                                                                        ID                            Name                            Address                            Contact No                            Amount                            Status                                                                                                                    {{ orderDetail.orderId }}                            {{ orderDetail.orderFullName }}                            {{ orderDetail.orderFullOrder }}                            {{ orderDetail.orderContactNumber }}                            {{ orderDetail.orderAmount }}                            {{ orderDetail.orderStatus }}                                                                                                                                                                                                                                Previous                                                                                                                            {{ page + 1 }}                                                                                                                            Next                                                                                                                No orders available.          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyOrdersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderAndProductDto.html":{"url":"interfaces/OrderAndProductDto.html","title":"interface - OrderAndProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderAndProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/order-and-product-dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            orderDate\n                                        \n                                \n                                \n                                        \n                                            orderId\n                                        \n                                \n                                \n                                        \n                                            orderStatus\n                                        \n                                \n                                \n                                        \n                                            productActualPrice\n                                        \n                                \n                                \n                                        \n                                            productDiscountedPrice\n                                        \n                                \n                                \n                                        \n                                            productName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        orderDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderStatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productActualPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productActualPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productDiscountedPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productDiscountedPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderAndProductDto {\n    orderId: number,\n\torderDate: string,\n    orderStatus: string\n    productName: string,\n\tproductActualPrice: number,\n\tproductDiscountedPrice: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderConfirmationComponent.html":{"url":"components/OrderConfirmationComponent.html","title":"component - OrderConfirmationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderConfirmationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/order-confirmation/order-confirmation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component responsible for confirming and placing an order.\nIt retrieves order details from local storage and submits the order upon initialization.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-confirmation\n            \n\n\n\n            \n                styleUrls\n                ./order-confirmation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./order-confirmation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                orderDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createOrder\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService, toastrService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/order-confirmation/order-confirmation.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/order-confirmation/order-confirmation.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Sends the order details to the backend to place an order.\nIf successful, it removes the stored order from local storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/order-confirmation/order-confirmation.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        orderDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderDetailsModel\n\n                    \n                \n                \n                    \n                        Default value : {\n      fullName: '',\n      fullAddress: '',\n      contactNumber: '',\n      alternateContactNumber: '',\n      orderProductQuantityList: []\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/order-confirmation/order-confirmation.component.ts:18\n                        \n                    \n\n            \n                \n                    Model containing the order details\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { OrderDetailsModel } from 'src/app/interfaces/order-details-model';\nimport { ProductService } from 'src/app/services/product.service';\n\n/**\n * Component responsible for confirming and placing an order.\n * It retrieves order details from local storage and submits the order upon initialization.\n */\n@Component({\n  selector: 'app-order-confirmation',\n  templateUrl: './order-confirmation.component.html',\n  styleUrls: ['./order-confirmation.component.css']\n})\nexport class OrderConfirmationComponent implements OnInit{\n\n  /** Model containing the order details */\n   orderDetails: OrderDetailsModel = {\n      fullName: '',\n      fullAddress: '',\n      contactNumber: '',\n      alternateContactNumber: '',\n      orderProductQuantityList: []\n  };\n  \n  constructor(\n    private productService: ProductService,\n    private toastrService: ToastrService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    const orderData = localStorage.getItem('pendingOrder');\n    if (orderData) {\n      this.orderDetails = JSON.parse(orderData);\n      this.createOrder();\n    }\n  }\n  \n   /**\n   * Sends the order details to the backend to place an order.\n   * If successful, it removes the stored order from local storage.\n   */\n  private createOrder() {\n    this.productService.placeOrder(this.orderDetails).subscribe({\n      next: () => {\n        this.toastrService.success('Order placed successfully', 'Success');\n        localStorage.removeItem('pendingOrder'); // Eliminamos la orden almacenada\n      },\n      error: () => {\n        this.toastrService.error('Error placing order', 'Error');\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        Your order is placed successfully. It will be delivered to you within 4-5 business days.\n    \n\n    \n\n    \n                \n                    ./order-confirmation.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Your order is placed successfully. It will be delivered to you within 4-5 business days.    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderConfirmationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderDetailsModel.html":{"url":"interfaces/OrderDetailsModel.html","title":"interface - OrderDetailsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderDetailsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/order-details-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alternateContactNumber\n                                        \n                                \n                                \n                                        \n                                            contactNumber\n                                        \n                                \n                                \n                                        \n                                            fullAddress\n                                        \n                                \n                                \n                                        \n                                            fullName\n                                        \n                                \n                                \n                                        \n                                            orderProductQuantityList\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alternateContactNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alternateContactNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderProductQuantityList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderProductQuantityList:     OrderProductQuantity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OrderProductQuantity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OrderProductQuantity } from \"./order-product-quantity\";\n\nexport interface OrderDetailsModel {\n    fullName: string,\n    fullAddress: string,\n    contactNumber: string,\n    alternateContactNumber: string,\n    orderProductQuantityList: OrderProductQuantity[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderErrorComponent.html":{"url":"components/OrderErrorComponent.html","title":"component - OrderErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/order-error/order-error.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component displayed when an error occurs during the order process.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-error\n            \n\n\n\n            \n                styleUrls\n                ./order-error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./order-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component displayed when an error occurs during the order process.\n */\n\n@Component({\n  selector: 'app-order-error',\n  templateUrl: './order-error.component.html',\n  styleUrls: ['./order-error.component.css']\n})\nexport class OrderErrorComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n        An unexpected error occurred while processing your order.\n    \n\n    \n\n    \n                \n                    ./order-error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    An unexpected error occurred while processing your order.    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderProductQuantity.html":{"url":"interfaces/OrderProductQuantity.html","title":"interface - OrderProductQuantity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderProductQuantity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/order-product-quantity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderProductQuantity {\n    productId: number,\n    quantity: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrdersComponent.html":{"url":"components/OrdersComponent.html","title":"component - OrdersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrdersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/orders/orders.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to manage and display paginated orders.\nProvides functionalities such as pagination, filtering, searching, and updating order status.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-orders\n            \n\n\n\n            \n                styleUrls\n                ./orders.component.css\n            \n\n\n\n            \n                templateUrl\n                ./orders.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                myOrderDetails\n                            \n                            \n                                orderStatus\n                            \n                            \n                                pages\n                            \n                            \n                                pageSize\n                            \n                            \n                                searchKey\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePage\n                            \n                            \n                                changeStatus\n                            \n                            \n                                filterOrders\n                            \n                            \n                                getAllOrdersPaginated\n                            \n                            \n                                getVisiblePages\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchOrderDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService, toastrService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/orders/orders.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/orders/orders.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Changes the current page and fetches the corresponding orders.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new page number\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeStatus\n                        \n                    \n                \n            \n            \n                \nchangeStatus(id: number, newStatus: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/orders/orders.component.ts:135\n                        \n                    \n\n\n            \n                \n                        Updates the status of a specific order and reloads the order list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe order ID to update\n\n\n                                            \n                                        \n                                        \n                                                newStatus\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to apply\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterOrders\n                        \n                    \n                \n            \n            \n                \nfilterOrders(status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/orders/orders.component.ts:152\n                        \n                    \n\n\n            \n                \n                        Applies a filter to display orders based on their status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected order status to filter\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllOrdersPaginated\n                        \n                    \n                \n            \n            \n                \ngetAllOrdersPaginated(page: number, size: number, orderStatus: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/orders/orders.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Fetches paginated orders based on the given page number, page size, and order status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe current page number\n\n\n                                            \n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNumber of orders per page\n\n\n                                            \n                                        \n                                        \n                                                orderStatus\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nStatus filter for the orders\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVisiblePages\n                        \n                    \n                \n            \n            \n                \ngetVisiblePages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/orders/orders.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Returns an array of visible page numbers for pagination.\n\n\n                        \n                            Returns :     number[]\n\n                        \n                            \n                                An array of page numbers to display in pagination controls.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/orders/orders.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchOrderDetails\n                        \n                    \n                \n            \n            \n                \nsearchOrderDetails(searchKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/orders/orders.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Searches for orders based on the given search key.\nIf the search key is empty, reloads the paginated orders.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search keyword\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/orders/orders.component.ts:21\n                        \n                    \n\n            \n                \n                    Current page number in pagination\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myOrderDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MyOrderDetails[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/orders/orders.component.ts:18\n                        \n                    \n\n            \n                \n                    List of orders displayed in the component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/orders/orders.component.ts:39\n                        \n                    \n\n            \n                \n                    Current order status filter\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/orders/orders.component.ts:33\n                        \n                    \n\n            \n                \n                    Array of available page numbers\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                    \n                        \n                                Defined in src/app/components/orders/orders.component.ts:30\n                        \n                    \n\n            \n                \n                    Number of orders per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/orders/orders.component.ts:36\n                        \n                    \n\n            \n                \n                    Search query for filtering orders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/orders/orders.component.ts:27\n                        \n                    \n\n            \n                \n                    Total number of elements (orders)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/orders/orders.component.ts:24\n                        \n                    \n\n            \n                \n                    Total number of pages available\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { MyOrderDetails } from 'src/app/interfaces/my-order-details';\nimport { ProductService } from 'src/app/services/product.service';\n\n/**\n * Component to manage and display paginated orders.\n * Provides functionalities such as pagination, filtering, searching, and updating order status.\n */\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent {\n\n  /** List of orders displayed in the component */\n  myOrderDetails: MyOrderDetails[] = [];\n\n  /** Current page number in pagination */\n  currentPage: number = 0;\n\n  /** Total number of pages available */\n  totalPages: number = 0;\n\n  /** Total number of elements (orders) */\n  totalElements: number = 0;\n\n  /** Number of orders per page */\n  pageSize: number = 8;\n\n  /** Array of available page numbers */\n  pages: number[] = [];\n\n  /** Search query for filtering orders */\n  searchKey: string = '';\n\n  /** Current order status filter */\n  orderStatus: string = 'all';\n\n  constructor(\n    private productService: ProductService,\n    private toastrService: ToastrService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.getAllOrdersPaginated(this.currentPage, this.pageSize, this.orderStatus);\n  }\n\n  /**\n   * Fetches paginated orders based on the given page number, page size, and order status.\n   * @param page - The current page number\n   * @param size - Number of orders per page\n   * @param orderStatus - Status filter for the orders\n   */\n  getAllOrdersPaginated(page: number, size: number, orderStatus: string) {\n    this.productService.getAllOrdersPaginated(this.currentPage, this.pageSize, orderStatus).subscribe({\n      next: (response) => {\n        this.myOrderDetails = response.content;\n        this.totalPages = response.totalPages;\n        this.totalElements = response.totalElements;\n        this.pageSize = response.pageSize;\n\n        // Crear el array de páginas a mostrar\n        this.pages = Array.from({ length: this.totalPages }, (_, index) => index);\n      }, error: (error) => {\n        this.toastrService.error('Error while retrieving order details ' + error.error, 'Error');\n      }\n    }); \n  }\n\n  /**\n   * Changes the current page and fetches the corresponding orders.\n   * @param page - The new page number\n   */\n  changePage(page: number): void {\n    if (page >= 0 && page  {\n            this.myOrderDetails = response.content;\n            this.totalPages = response.totalPages;\n            this.totalElements = response.totalElements;\n            this.pageSize = response.pageSize;\n  \n            // Crear el array de páginas a mostrar\n            this.pages = Array.from({ length: this.totalPages }, (_, index) => index);\n          }, error: (err) => {\n            this.toastrService.error('An unexpected error occurred: ' + err.error, 'Error')\n          }\n        });\n    }\n  }\n\n  /**\n   * Updates the status of a specific order and reloads the order list.\n   * @param id - The order ID to update\n   * @param newStatus - The new status to apply\n   */\n  changeStatus(id: number, newStatus: string) {\n    \n    this.productService.changeStatus(id, newStatus).subscribe({\n        next: (response) => {\n          this.toastrService.success(response.message, 'Success');\n          this.getAllOrdersPaginated(this.currentPage, this.pageSize, this.orderStatus);\n        },\n        error: (err) => {\n            this.toastrService.error('An unexpected error occurred: ' + err.error?.message || err.message, 'Error');\n        }\n    });\n  }\n\n  /**\n   * Applies a filter to display orders based on their status.\n   * @param status - The selected order status to filter\n   */\n  filterOrders(status: string) {\n    this.orderStatus = status;\n    this.getAllOrdersPaginated(this.currentPage, this.pageSize, this.orderStatus);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                {{ orderStatus === 'all' ? 'Orders' : orderStatus + ' orders' }}\n            \n        \n\n        \n            All orders\n            Placed orders\n            Delivered orders\n        \n        \n         0; else noOrders\">\n            \n            \n            \n\n           \n\n            \n\n                \n                    \n                        \n                            ID\n                            Name\n                            Address\n                            Contact No\n                            Amount\n                            Status\n                            Actions\n\n                        \n                    \n                    \n                        \n                            {{ orderDetail.orderId }}\n                            {{ orderDetail.orderFullName }}\n                            {{ orderDetail.orderFullOrder }}\n                            {{ orderDetail.orderContactNumber }}\n                            {{ orderDetail.orderAmount }}\n                            \n                                \n                                  {{ orderDetail.orderStatus }}\n                                \n                              \n                                \n                            \n                            \n                                \n                                    \n                                    Mark as delivered\n                                \n                                \n                                    \n                                    Mark as Placed\n                                \n                            \n\n                        \n                    \n                \n            \n            \n            \n            \n                \n                \n                    \n                    \n                    \n                        Previous\n                    \n                    \n\n                    \n                    \n                    \n                        {{ page + 1 }}\n                    \n                    \n\n                    \n                    \n                    \n                        Next\n                    \n                    \n                \n                \n            \n\n        \n\n        \n            No orders available.\n        \n  \n\n    \n\n    \n                \n                    ./orders.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ orderStatus === \\'all\\' ? \\'Orders\\' : orderStatus + \\' orders\\' }}                                        All orders            Placed orders            Delivered orders                         0; else noOrders\">                                                                                                                                                   ID                            Name                            Address                            Contact No                            Amount                            Status                            Actions                                                                                                                    {{ orderDetail.orderId }}                            {{ orderDetail.orderFullName }}                            {{ orderDetail.orderFullOrder }}                            {{ orderDetail.orderContactNumber }}                            {{ orderDetail.orderAmount }}                                                                                              {{ orderDetail.orderStatus }}                                                                                                                                                                                                                                                              Mark as delivered                                                                                                                                        Mark as Placed                                                                                                                                                                                                                                                                                            Previous                                                                                                                            {{ page + 1 }}                                                                                                                            Next                                                                                                                No orders available.          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrdersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/payment.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling payment-related operations, such as initiating a PayPal payment.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getURLPaypalPayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/payment.service.ts:17\n                            \n                        \n\n                \n                    \n                            Service constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTTP client for making API requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getURLPaypalPayment\n                        \n                    \n                \n            \n            \n                \ngetURLPaypalPayment(dataPayment: DataPayment)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/payment.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Initiates a PayPal payment and retrieves the payment URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataPayment\n                                            \n                                                            DataPayment\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The payment details required for the transaction.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable containing the PayPal payment URL response.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/services/payment.service.ts:17\n                        \n                    \n\n            \n                \n                    Base API URL\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment.development';\nimport { DataPayment } from '../interfaces/data-payment';\nimport { UrlPaypalResponse } from '../interfaces/url-paypal-response';\nimport { Observable } from 'rxjs';\n\n/**\n * Service for handling payment-related operations, such as initiating a PayPal payment.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n\n  /** Base API URL */\n  apiURL: string = environment.apiURL;\n  \n   /**\n   * Service constructor.\n   * @param httpClient HTTP client for making API requests.\n   */\n  constructor(\n    private httpClient: HttpClient,\n  ) { }\n\n   /**\n   * Initiates a PayPal payment and retrieves the payment URL.\n   * @param dataPayment The payment details required for the transaction.\n   * @returns An `Observable` containing the PayPal payment URL response.\n   */\n  getURLPaypalPayment(dataPayment: DataPayment): Observable {\n    return this.httpClient.post(`${this.apiURL}/payments`, dataPayment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/product.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            productActualPrice\n                                        \n                                \n                                \n                                        \n                                            productDescription\n                                        \n                                \n                                \n                                        \n                                            productDiscountedPrice\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            productId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            productImages\n                                        \n                                \n                                \n                                        \n                                            productName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productActualPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productActualPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productDiscountedPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productDiscountedPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productImages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productImages:         Image[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Image[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Image } from \"./image\";\n\nexport interface Product {\n  productId?: number;\n  productName: string;\n  productDescription: string;\n  productDiscountedPrice: number;\n  productActualPrice: number;\n  productImages?: Image[]; // Agregamos la propiedad para las imágenes\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductViewDetailsComponent.html":{"url":"components/ProductViewDetailsComponent.html","title":"component - ProductViewDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductViewDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/product-view-details/product-view-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-view-details\n            \n\n\n\n            \n                styleUrls\n                ./product-view-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./product-view-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imageChanged\n                            \n                            \n                                isDesktop\n                            \n                            \n                                product\n                            \n                            \n                                selectedImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                buyProduct\n                            \n                            \n                                    Public\n                                isUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                selectImage\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, productService: ProductService, toastrService: ToastrService, userAuthService: UserAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/product-view-details/product-view-details.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuthService\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-view-details/product-view-details.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Detects window resizing and updates the isDesktop flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The resize event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-view-details/product-view-details.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Adds a product to the shopping cart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to add to the cart\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buyProduct\n                        \n                    \n                \n            \n            \n                \nbuyProduct(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-view-details/product-view-details.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Navigates to the product checkout page for purchasing a single product.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to buy\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-view-details/product-view-details.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Checks if the current user has a standard user role.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if the user is a standard user, otherwise false\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-view-details/product-view-details.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/components/product-view-details/product-view-details.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Detects window resizing and updates the isDesktop flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The resize event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectImage\n                        \n                    \n                \n            \n            \n                \nselectImage(image: Image)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/product-view-details/product-view-details.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Updates the selected image when a new image is chosen.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                image\n                                            \n                                                            Image\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected image\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imageChanged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-view-details/product-view-details.component.ts:32\n                        \n                    \n\n            \n                \n                    Tracks if the selected image has been changed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDesktop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-view-details/product-view-details.component.ts:17\n                        \n                    \n\n            \n                \n                    Indicates whether the user is on a desktop device\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-view-details/product-view-details.component.ts:20\n                        \n                    \n\n            \n                \n                    Holds the details of the product being viewed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Image\n\n                    \n                \n                \n                    \n                        Default value : {\n    shortName: '',\n    id: 0,\n    name: '',\n    type: '',\n    picByte: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/product-view-details/product-view-details.component.ts:23\n                        \n                    \n\n            \n                \n                    Stores the currently selected product image\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Image } from 'src/app/interfaces/image';\nimport { Product } from 'src/app/interfaces/product';\nimport { ProductService } from 'src/app/services/product.service';\nimport { UserAuthService } from 'src/app/services/user-auth.service';\n\n@Component({\n  selector: 'app-product-view-details',\n  templateUrl: './product-view-details.component.html',\n  styleUrls: ['./product-view-details.component.css']\n})\nexport class ProductViewDetailsComponent implements OnInit {\n\n  /** Indicates whether the user is on a desktop device */\n  isDesktop: boolean = true;\n  \n  /** Holds the details of the product being viewed */\n  product: Product | null = null;\n  \n  /** Stores the currently selected product image */\n  selectedImage: Image = {\n    shortName: '',\n    id: 0,\n    name: '',\n    type: '',\n    picByte: ''\n  }\n  \n  /** Tracks if the selected image has been changed */\n  imageChanged: boolean = false;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private productService: ProductService,\n    private toastrService: ToastrService,\n    private userAuthService: UserAuthService\n  ) {}\n\n  ngOnInit(): void {\n    // Accedemos a los datos resueltos que contienen el producto\n    this.route.data.subscribe(data => {\n      // 'product' es la clave del resolver\n      this.product = data['product'];  \n    });\n    this.isDesktop = window.innerWidth > 514;\n\n    if (this.product?.productImages && this.product.productImages.length > 0) {\n      this.selectedImage = this.product.productImages[0];\n    }\n\n  }\n\n  /**\n   * Detects window resizing and updates the `isDesktop` flag accordingly.\n   * @param event The resize event\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: Event) {\n    this.isDesktop = window.innerWidth > 768;\n  }\n\n   /**\n   * Updates the selected image when a new image is chosen.\n   * @param image The selected image\n   */\n  selectImage(image: Image) {\n    this.selectedImage = image;\n    this.imageChanged = true;\n  }\n\n   /**\n   * Navigates to the product checkout page for purchasing a single product.\n   * @param productId The ID of the product to buy\n   */\n  buyProduct(productId: number) {\n    this.router.navigate(['/buyProduct'], {\n      queryParams: {\n        isSingleProductCheckout: true,\n        id: productId\n      }\n    });    \n  }\n\n   /**\n   * Adds a product to the shopping cart.\n   * @param productId The ID of the product to add to the cart\n   */\n  addToCart(productId: number) {\n    this.productService.addToCart(productId).subscribe({\n      next: (data) => {\n        this.toastrService.success(\"Product added to the cart\", \"Success\");\n      }, error: () => {\n        this.toastrService.error(\"Something went wrong. Could not add the product to the cart\", \"Error\")\n      }\n    });\n  }\n\n   /**\n   * Checks if the current user has a standard user role.\n   * @returns `true` if the user is a standard user, otherwise `false`\n   */\n  public isUser(): boolean {\n    return this.userAuthService.isUser();\n  }\n  \n}\n\n    \n\n    \n        \n    \n        \n            \n                Product Details - \n                {{ product?.productName }}\n            \n        \n        \n            \n                \n                 1 }\"\n                >\n                    \n                \n                \n                 1\" class=\"row col-12 mt-4 gap-3\">\n                    \n                        \n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        {{ product?.productName }}\n                    \n                    \n                        Description:\n                        {{ product?.productDescription }}\n                    \n                    \n                    \n                        Product Price:\n                        {{ product?.productActualPrice | currency: 'EUR' }}\n                    \n\n                    \n                    \n                        \n                            Product Price:\n                            {{ product?.productDiscountedPrice | currency: 'EUR' }}\n                            {{ product?.productActualPrice | currency: 'EUR' }}\n                        \n                    \n\n                    \n                        Buy now\n                    \n                    \n                        Add to Cart\n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./product-view-details.component.css\n                \n                 \n.sm-card {\n    min-height: 250px;\n    display: grid; /* Activa grid */\n    place-items: center; /* Centra tanto horizontal como verticalmente */\n    overflow: hidden; /* Evita que la imagen se desborde */\n}\n\n.small-img {\n    max-height: 200px;\n    width: auto;\n}\n\n.card-img-top {\n    object-fit: contain; \n    width: 100%; \n    height: 100%; \n}\n\n.selected-card {\n    border: 3px solid #198754; /* Borde azul */\n    box-shadow: 0 0 10px rgba(3, 247, 23, 0.5); /* Sombra azul */\n    transition: all 0.3s ease; /* Transición suave */\n}\n\n.selected-card .small-img {\n    animation: bounce 0.5s ease; /* Aplica la animación de rebote */\n}\n\n@keyframes bounce {\n    0%, 100% {\n        transform: translateY(0);\n    }\n    50% {\n        transform: translateY(-10px);\n    }\n}\n\n@keyframes fadeInScale {\n    0% {\n        opacity: 0;\n        transform: scale(0.9);\n    }\n    100% {\n        opacity: 1;\n        transform: scale(1);\n    }\n}\n\n.big-card img {\n    transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;\n}\n\n.big-card img.fade-in {\n    animation: fadeInScale 0.5s ease-in-out;\n}\n\n@media (min-width: 1px) and  (max-width: 768px) {\n    .big-card  {\n        height: 250px; /* Limita la altura máxima */\n    }  \n}\n\n@media (min-width: 768px) {   \n    .big-card {\n        height: 700px; /* Limita la altura máxima */\n        width: 100%; /* Asegura que el contenedor de la imagen ocupe todo el ancho */\n        overflow: hidden; /* Evita que la imagen se desborde fuera del contenedor */\n    }\n    .sm-card {width: calc(50% - 0.5rem);}\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Product Details -                 {{ product?.productName }}                                                                         1 }\"                >                                                                     1\" class=\"row col-12 mt-4 gap-3\">                                                                                                                                                                                                                        {{ product?.productName }}                                                                Description:                        {{ product?.productDescription }}                                                                                    Product Price:                        {{ product?.productActualPrice | currency: \\'EUR\\' }}                                                                                                                Product Price:                            {{ product?.productDiscountedPrice | currency: \\'EUR\\' }}                            {{ product?.productActualPrice | currency: \\'EUR\\' }}                                                                                        Buy now                                                                Add to Cart                                                            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductViewDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for user registration.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, toastrService: ToastrService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(registerForm: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Handles user registration by submitting the registration form.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                registerForm\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The registration form data.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n    userName: '',\n    userFirstName: '',\n    userLastName: '',\n    userPassword: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/interfaces/user';\nimport { UserService } from 'src/app/services/user.service';\n\n/**\n * Component for user registration.\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  user: User = {\n    userName: '',\n    userFirstName: '',\n    userLastName: '',\n    userPassword: ''\n  };\n  \n  constructor(\n    private userService: UserService,\n    private toastrService: ToastrService,\n    private router: Router\n  ) {\n\n  }\n\n  /**\n   * Handles user registration by submitting the registration form.\n   * @param registerForm The registration form data.\n   */\n  register(registerForm: NgForm) {\n    if (registerForm.valid) {\n      this.userService.register(this.user).subscribe({\n        next: () => {\n          this.toastrService.success('Account created successfully', 'Success');\n          this.router.navigate(['login']);\n        },\n        error: (errorResponse) => {\n          if (errorResponse.status === 400 && errorResponse.error === 'Username already exists') {\n            this.toastrService.error('The username is already taken. Please choose another.', 'Error');\n          } else {\n            this.toastrService.error('Error while creating the account', 'Error');\n          }\n        }\n      });\n    }\n  }\n  \n}\n\n    \n\n    \n        \n    \n        Register\n        \n            \n            \n                \n            \n            \n                Username must be at least 4 characters long and cannot have spaces.\n            \n\n            \n            \n                First name is required.\n            \n\n            \n            \n                Last name is required.\n            \n\n            \n\n            \n            \n                Password must contain:\n                \n                    At least one digit\n                    At least one lowercase letter\n                    At least one uppercase letter\n                    At least one special character (&#64; # $ % ^ &amp; + = !)\n                    No spaces\n                \n            \n\n            \n                \n                    Register\n                \n            \n\n            \n                Already have an account? \n                    Login\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .card {\n    width: 32em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Register                                                                                        Username must be at least 4 characters long and cannot have spaces.                                                    First name is required.                                                    Last name is required.                                                                Password must contain:                                    At least one digit                    At least one lowercase letter                    At least one uppercase letter                    At least one special character (@ # $ % ^ & + = !)                    No spaces                                                                            Register                                                        Already have an account?                     Login                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Role.html":{"url":"interfaces/Role.html","title":"interface - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/role.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            roleDescription\n                                        \n                                \n                                \n                                        \n                                            roleName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        roleDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Role {\n    roleName: string,\n    roleDescription: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SalesData.html":{"url":"interfaces/SalesData.html","title":"interface - SalesData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SalesData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/sales-data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            labels\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SalesData {\n    labels: string[],\n    values: number[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SaveProductComponent.html":{"url":"components/SaveProductComponent.html","title":"component - SaveProductComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SaveProductComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/save-product/save-product.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for adding and editing products.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-new-product\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./save-product.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imagePreviews\n                            \n                            \n                                    \n                                imagePreviewSection\n                            \n                            \n                                isEditMode\n                            \n                            \n                                product\n                            \n                            \n                                selectedFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProduct\n                            \n                            \n                                clearForm\n                            \n                            \n                                    Private\n                                createProduct\n                            \n                            \n                                    Private\n                                editProduct\n                            \n                            \n                                getProduct\n                            \n                            \n                                    Private\n                                loadFormData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDragOver\n                            \n                            \n                                onDrop\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                removeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService, imageService: ImageServiceService, toastrService: ToastrService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/save-product/save-product.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProduct\n                        \n                    \n                \n            \n            \n                \naddProduct(productForm: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/save-product/save-product.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Handles the form submission for adding or updating a product.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productForm\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The product form data.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearForm\n                        \n                    \n                \n            \n            \n                \nclearForm(productForm: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/save-product/save-product.component.ts:283\n                        \n                    \n\n\n            \n                \n                        Clears the product form.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productForm\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The product form data.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(formData: FormData, productForm: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/save-product/save-product.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Creates a new product.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                formData\n                                            \n                                                        FormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The form data containing product details.\n\n                                            \n                                        \n                                        \n                                                productForm\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The product form data.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    editProduct(formData: FormData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/save-product/save-product.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Updates an existing product.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                formData\n                                            \n                                                        FormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The form data containing product details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProduct\n                        \n                    \n                \n            \n            \n                \ngetProduct(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/save-product/save-product.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Retrieves product details by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to fetch.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadFormData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFormData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/save-product/save-product.component.ts:162\n                        \n                    \n\n\n            \n                \n                        Prepares form data for submission.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                FormData containing product details and images.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/save-product/save-product.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDragOver\n                        \n                    \n                \n            \n            \n                \nonDragOver(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/save-product/save-product.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Handles the dragover event to allow file drop.\nThis method prevents the default behavior to allow custom handling of the file drop.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DragEvent triggered when a file is dragged over the drop area.\n\nThis method prevents the default behavior to allow custom handling of the file drop.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDrop\n                        \n                    \n                \n            \n            \n                \nonDrop(event: DragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/save-product/save-product.component.ts:199\n                        \n                    \n\n\n            \n                \n                        Handles the drop event when a file is dropped.\nThis method prevents the default behavior (e.g., opening the file in the browser)\nand processes the dropped file by passing it to the onFileSelected method.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DragEvent triggered when a file is dropped.\n\nThis method prevents the default behavior (e.g., opening the file in the browser)\nand processes the dropped file by passing it to the onFileSelected method.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/save-product/save-product.component.ts:213\n                        \n                    \n\n\n            \n                \n                        Handles file selection and previews images.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The file input event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/save-product/save-product.component.ts:259\n                        \n                    \n\n\n            \n                \n                        Removes an image from the preview list and, if in edit mode, deletes it from the server.\nIf the application is in edit mode and the image has a valid ID (not 0),\nit sends a request to delete the image from the server.\nRegardless of edit mode, the image is also removed from selectedFiles and imagePreviews.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe index of the image to be removed.\n\nIf the application is in edit mode and the image has a valid ID (not 0), \nit sends a request to delete the image from the server. \nRegardless of edit mode, the image is also removed from selectedFiles and imagePreviews.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imagePreviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Image[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/save-product/save-product.component.ts:34\n                        \n                    \n\n            \n                \n                    List of image previews.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imagePreviewSection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('imagePreviewSection')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/save-product/save-product.component.ts:24\n                        \n                    \n\n            \n                \n                    Reference to the image preview section in the template.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/save-product/save-product.component.ts:39\n                        \n                    \n\n            \n                \n                    Indicates whether the component is in edit mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                \n                    \n                        Default value : {\n    productName: '',\n    productDescription: '',\n    productDiscountedPrice: 0,\n    productActualPrice: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/save-product/save-product.component.ts:44\n                        \n                    \n\n            \n                \n                    Product object containing details for creation or update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/save-product/save-product.component.ts:29\n                        \n                    \n\n            \n                \n                    List of selected files for upload.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Product } from 'src/app/interfaces/product';\nimport { Image } from 'src/app/interfaces/image';\n\nimport { ImageServiceService } from 'src/app/services/image.service';\nimport { ProductService } from 'src/app/services/product.service';\n\n/**\n * Component for adding and editing products.\n */\n@Component({\n  selector: 'app-add-new-product',\n  templateUrl: './save-product.component.html',\n})\n  \nexport class SaveProductComponent implements OnInit {\n\n  /**\n   * Reference to the image preview section in the template.\n   */\n  @ViewChild('imagePreviewSection') imagePreviewSection!: ElementRef;\n\n  /**\n   * List of selected files for upload.\n   */\n  selectedFiles: File[] = [];\n\n  /**\n   * List of image previews.\n   */\n  imagePreviews: Image [] = [];\n\n  /**\n   * Indicates whether the component is in edit mode.\n   */\n  isEditMode: boolean = false;\n\n  /**\n   * Product object containing details for creation or update.\n   */\n  product: Product = {\n    productName: '',\n    productDescription: '',\n    productDiscountedPrice: 0,\n    productActualPrice: 0,\n  };\n\n\n  constructor(\n    private productService: ProductService,\n    private imageService: ImageServiceService,\n    private toastrService: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    const productId = Number(this.route.snapshot.paramMap.get('productId'));\n    if (productId) {\n      this.isEditMode = true;\n      this.getProduct(productId);\n    }\n  }\n\n   /**\n   * Retrieves product details by ID.\n   * @param productId The ID of the product to fetch.\n   */\n  getProduct(productId: number): void {\n    this.productService.getProductById(productId).subscribe({\n      next: (productData) => {\n        this.product = productData; // Cargar los datos del producto\n  \n        // Cargar imágenes existentes\n        if (productData.productImages && productData.productImages.length > 0) {\n          this.imagePreviews = productData.productImages.map(img => ({\n            id: img.id,\n            name: img.name,\n            shortName: img.shortName,\n            type: 'image/png', \n            picByte: img.picByte, \n          }));\n        }\n      },\n      error: (error) => {\n        this.toastrService.error('Error retrieving product data', 'Error');\n        console.error('Error loading product:', error);\n      }\n    });\n  }\n\n  /**\n   * Handles the form submission for adding or updating a product.\n   * @param productForm The product form data.\n   */\n  addProduct(productForm: NgForm) {\n    if (this.product.productActualPrice  {\n        this.toastrService.success('Product updated successfully', 'Success');\n        this.router.navigate(['/showProductDetails']);\n      },\n      error: (err) => {\n        console.error('Error al actualizar el producto:', err);\n        if (err.error) {\n          console.error('Error del backend:', err.error);\n        }\n        if (err.status) {\n          console.error('Código de estado:', err.status);\n        }\n        this.toastrService.error('Failed to update product', 'Error');\n      }\n    });\n  }\n\n  /**\n   * Creates a new product.\n   * @param formData The form data containing product details.\n   * @param productForm The product form data.\n   */\n  private createProduct(formData: FormData, productForm: NgForm) {\n    this.productService.addProduct(formData).subscribe({\n      next: () => {\n        this.toastrService.success('Product created successfully', 'Success');\n        this.clearForm(productForm);\n        this.selectedFiles = [];\n        this.imagePreviews = [];\n        this.router.navigate(['/showProductDetails']);\n      },\n      error: (err) => {\n        this.toastrService.error('Failed to create product', 'Error');\n        console.error(err);\n      }\n    });\n  }\n\n  /**\n   * Prepares form data for submission.\n   * @returns FormData containing product details and images.\n   */\n  private loadFormData() {\n    const formData = new FormData();\n    const productBlob = new Blob([JSON.stringify(this.product)], { type: 'application/json' });\n    formData.append('product', productBlob);\n\n    // Agregar imágenes nuevas (si hay)\n    if (this.selectedFiles.length > 0) {\n      this.selectedFiles.forEach(file => formData.append('imageFile', file, file.name));\n    }\n    // Agregar imágenes existentes (si hay)\n    if (this.imagePreviews.length > 0) {\n      const existingImageNames = this.imagePreviews.map(image => image.name); // Obtener solo los nombres\n      formData.append('existingImages', new Blob([JSON.stringify(existingImageNames)], { type: 'application/json' }));\n\n    }\n    return formData;\n  }\n\n  /**\n   * Handles the dragover event to allow file drop.\n   * \n   * @param event - The DragEvent triggered when a file is dragged over the drop area.\n   * \n   * This method prevents the default behavior to allow custom handling of the file drop.\n   */\n  onDragOver(event: DragEvent): void {\n    event.preventDefault();  // Previene el comportamiento por defecto de la acción de arrastrar\n  }\n\n  /**\n   * Handles the drop event when a file is dropped.\n   * \n   * @param event - The DragEvent triggered when a file is dropped.\n   * \n   * This method prevents the default behavior (e.g., opening the file in the browser)\n   * and processes the dropped file by passing it to the `onFileSelected` method.\n   */\n  onDrop(event: DragEvent): void {\n    event.preventDefault();  // Previene el comportamiento por defecto (como abrir el archivo)\n\n    const files = event.dataTransfer?.files;\n    if (files?.length) {\n      this.onFileSelected({ target: { files } } as any);\n    }\n  }\n\n \n  /**\n   * Handles file selection and previews images.\n   * @param event The file input event.\n   */\n  onFileSelected(event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (!input.files) return;\n  \n    const files = Array.from(input.files);\n  \n    // Verificar que el usuario no suba más de 3 imágenes\n    if (this.imagePreviews.length + files.length > 3) {\n      this.toastrService.warning('You can only upload up to 3 images.', 'Warning');\n      return;\n    }\n  \n    files.forEach(file => {\n      // Agregar el archivo al array de selectedFiles\n      this.selectedFiles.push(file);\n  \n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        // Crear un objeto de imagen para la previsualización usando base64\n        const previewImage: Image = {\n          id: 0,  // Id no disponible hasta el momento de guardar\n          name: file.name,\n          shortName: file.name,  // Puedes ajustar esto si quieres mostrar un nombre corto\n          type: file.type,\n          picByte: e.target.result.split(',')[1],  // Solo la parte base64, sin la cabecera\n        };\n  \n        // Añadir la imagen a la lista de previsualización\n        this.imagePreviews.push(previewImage);\n        \n      };\n      \n      reader.readAsDataURL(file);\n\n    });\n  }\n  \n  /**\n   * Removes an image from the preview list and, if in edit mode, deletes it from the server.\n   * \n   * @param index - The index of the image to be removed.\n   * \n   * If the application is in edit mode and the image has a valid ID (not 0), \n   * it sends a request to delete the image from the server. \n   * Regardless of edit mode, the image is also removed from `selectedFiles` and `imagePreviews`.\n   */\n  removeFile(index: number) {\n    if (this.isEditMode && this.imagePreviews[index].id !== 0) {\n      this.imageService.deleteImage(this.imagePreviews[index].id).subscribe({\n        next: () => {\n          this.toastrService.success('Image removed successfully.', 'Success');\n        },\n        error: (err) => {\n          console.error('Error removing image:', err);\n          this.toastrService.error('Failed to remove image.', 'Error');\n        }\n      });\n    }\n  \n    const removedFileName = this.imagePreviews[index].name;\n  \n    // Filtrar `selectedFiles` para eliminar solo el archivo correspondiente\n    this.selectedFiles = this.selectedFiles.filter(file => file.name !== removedFileName);\n    this.imagePreviews.splice(index, 1);\n  }\n  \n   /**\n   * Clears the product form.\n   * @param productForm The product form data.\n   */\n  clearForm(productForm: NgForm) {\n    productForm.resetForm();\n    this.product = {\n      productName: '',\n      productDescription: '',\n      productActualPrice: 0,\n      productDiscountedPrice: 0,\n    };\n  }\n}\n\n    \n\n    \n        \n    \n        \n            New Product\n            \n                Edit Product\n            \n        \n        \n            \n                \n                \n                    Product Name\n                    \n                    \n                        Product name is required\n                        Minimum 3 characters required\n                        Maximum 100 characters allowed\n                    \n                \n\n                \n                \n                    Product Description\n                    \n                    \n                    \n                        Maximum 500 characters allowed\n                    \n                \n\n                 \n                 \n                    Product Actual Price\n                    \n                    \n                        Actual price is required\n                        Price must be greater than zero\n                    \n                \n\n                \n                \n                    Product Discounted Price\n                    \n                    \n                        Discounted price is required\n                        Price must be greater than zero\n                    \n                \n\n                \n                \n                    Save\n                \n                \n                    Clear\n                \n            \n\n            \n            \n                \n                \n                 \n                \n                    \n                    Drag and drop images here or click to select\n                \n                \n                \n                 0\" #imagePreviewSection>\n                    \n                        \n                        \n                            \n                            {{ preview.shortName }}\n\n                            \n                            {{ selectedFiles[i].name }}\n\n                       \n                            \n                                \n                            \n                        \n                    \n                \n\n            \n\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        New Product                            Edit Product                                                                                            Product Name                                                                Product name is required                        Minimum 3 characters required                        Maximum 100 characters allowed                                                                                        Product Description                                                                                    Maximum 500 characters allowed                                                                                          Product Actual Price                                                                Actual price is required                        Price must be greater than zero                                                                                        Product Discounted Price                                                                Discounted price is required                        Price must be greater than zero                                                                                        Save                                                    Clear                                                                                                                                                             Drag and drop images here or click to select                                                                 0\" #imagePreviewSection>                                                                                                                            {{ preview.shortName }}                                                        {{ selectedFiles[i].name }}                                                                                                                                                                                                   '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SaveProductComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchBarComponent.html":{"url":"components/SearchBarComponent.html","title":"component - SearchBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/search-bar/search-bar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Search bar component for capturing user input and emitting search events.\nThis component allows users to input search queries and emits the search term\nwhen the search action is triggered.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-bar\n            \n\n\n\n            \n                styleUrls\n                ./search-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search...'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/search-bar/search-bar.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/search-bar/search-bar.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shared/search-bar/search-bar.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        searchKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shared/search-bar/search-bar.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Search bar component for capturing user input and emitting search events.\n * \n * This component allows users to input search queries and emits the search term\n * when the search action is triggered.\n */\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css']\n})\nexport class SearchBarComponent {\n  @Input() placeholder: string = 'Search...';  // Permite personalizar el placeholder\n  @Output() search = new EventEmitter(); // Evento que emite el valor de búsqueda\n\n  searchKey: string = '';\n\n  onSearch(): void {\n    this.search.emit(this.searchKey); \n  }\n}\n\n    \n\n    \n        \n    \n          \n                  \n    \n\n  \n    \n\n    \n                \n                    ./search-bar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShowProductDetailsComponent.html":{"url":"components/ShowProductDetailsComponent.html","title":"component - ShowProductDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShowProductDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/show-product-details/show-product-details.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying a paginated list of products, allowing actions such as\ndeletion, editing, image preview, and exporting product data in different formats.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-show-product-details\n            \n\n\n\n            \n                styleUrls\n                ./show-product-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./show-product-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                    Public\n                                isGeneratingFile\n                            \n                            \n                                pages\n                            \n                            \n                                pageSize\n                            \n                            \n                                    Public\n                                products\n                            \n                            \n                                searchKey\n                            \n                            \n                                    Public\n                                selectedImages\n                            \n                            \n                                    Public\n                                showImageModal\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePage\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                editProductDetails\n                            \n                            \n                                    Public\n                                generateCsv\n                            \n                            \n                                    Public\n                                generateExcel\n                            \n                            \n                                    Public\n                                generatePdf\n                            \n                            \n                                getAllProductsPaginated\n                            \n                            \n                                getVisiblePages\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchProducts\n                            \n                            \n                                    Public\n                                viewImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService, toastrService: ToastrService, router: Router, fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/show-product-details/show-product-details.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/show-product-details/show-product-details.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Changes the current page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The target page index.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/show-product-details/show-product-details.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Deletes a product after confirming with the user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProductDetails\n                        \n                    \n                \n            \n            \n                \neditProductDetails(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/show-product-details/show-product-details.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Navigates to the product edit page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to edit.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        generateCsv\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCsv()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/show-product-details/show-product-details.component.ts:190\n                        \n                    \n\n\n            \n                \n                        Generates and downloads a CSV file of the product list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        generateExcel\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateExcel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/show-product-details/show-product-details.component.ts:214\n                        \n                    \n\n\n            \n                \n                        Generates and downloads an Excel file of the product list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        generatePdf\n                        \n                    \n                \n            \n            \n                \n                        \n                    generatePdf()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/show-product-details/show-product-details.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Generates and downloads a PDF file of the product list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProductsPaginated\n                        \n                    \n                \n            \n            \n                \ngetAllProductsPaginated(page: number, size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/show-product-details/show-product-details.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Fetches paginated products from the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The current page index.\n\n                                            \n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The number of products per page.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVisiblePages\n                        \n                    \n                \n            \n            \n                \ngetVisiblePages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/show-product-details/show-product-details.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Retrieves the range of visible pages for pagination.\n\n\n                        \n                            Returns :     number[]\n\n                        \n                            \n                                An array of visible page numbers.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/show-product-details/show-product-details.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchProducts\n                        \n                    \n                \n            \n            \n                \nsearchProducts(searchKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/show-product-details/show-product-details.component.ts:242\n                        \n                    \n\n\n            \n                \n                        Searches for products based on the user's input.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The search keyword.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewImages\n                        \n                    \n                \n            \n            \n                \n                        \n                    viewImages(product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/show-product-details/show-product-details.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Displays images of a selected product.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The product whose images will be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/show-product-details/show-product-details.component.ts:34\n                        \n                    \n\n            \n                \n                    Current page index for pagination.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isGeneratingFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/show-product-details/show-product-details.component.ts:52\n                        \n                    \n\n            \n                \n                    Flag indicating whether a file is being generated.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/show-product-details/show-product-details.component.ts:46\n                        \n                    \n\n            \n                \n                    Array of page numbers used for pagination controls.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/show-product-details/show-product-details.component.ts:43\n                        \n                    \n\n            \n                \n                    Number of products per page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/show-product-details/show-product-details.component.ts:25\n                        \n                    \n\n            \n                \n                    List of products displayed in the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/show-product-details/show-product-details.component.ts:49\n                        \n                    \n\n            \n                \n                    Search query entered by the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/show-product-details/show-product-details.component.ts:31\n                        \n                    \n\n            \n                \n                    Stores the selected product images for preview.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showImageModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/show-product-details/show-product-details.component.ts:28\n                        \n                    \n\n            \n                \n                    Controls the visibility of the image modal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/show-product-details/show-product-details.component.ts:40\n                        \n                    \n\n            \n                \n                    Total number of products available.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/show-product-details/show-product-details.component.ts:37\n                        \n                    \n\n            \n                \n                    Total number of pages available.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Product } from 'src/app/interfaces/product';\nimport { FileService } from 'src/app/services/file.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { saveAs } from 'file-saver'; // Importa file-saver\n\n\nimport Swal from 'sweetalert2';\nimport { finalize } from 'rxjs';\n\n/**\n * Component for displaying a paginated list of products, allowing actions such as \n * deletion, editing, image preview, and exporting product data in different formats.\n */\n@Component({\n  selector: 'app-show-product-details',\n  templateUrl: './show-product-details.component.html',\n  styleUrls: ['./show-product-details.component.css']\n})\nexport class ShowProductDetailsComponent implements OnInit{\n\n   /** List of products displayed in the component. */\n   public products: Product[] = [];\n\n   /** Controls the visibility of the image modal. */\n   public showImageModal: boolean = false;\n \n   /** Stores the selected product images for preview. */\n   public selectedImages: string[] = [];\n \n   /** Current page index for pagination. */\n   currentPage: number = 0;\n \n   /** Total number of pages available. */\n   totalPages: number = 0;\n \n   /** Total number of products available. */\n   totalElements: number = 0;\n \n   /** Number of products per page. */\n   pageSize: number = 10;\n \n   /** Array of page numbers used for pagination controls. */\n   pages: number[] = [];\n \n   /** Search query entered by the user. */\n   searchKey: string = ''; \n \n   /** Flag indicating whether a file is being generated. */\n   public isGeneratingFile: boolean = false;\n\n  constructor(\n    private productService: ProductService,\n    private toastrService: ToastrService,\n    private router: Router,\n    private fileService: FileService\n  ) {\n\n  }\n  ngOnInit(): void {\n    this.getAllProductsPaginated(this.currentPage, this.pageSize);\n  }\n\n  /**\n   * Fetches paginated products from the backend.\n   * @param page The current page index.\n   * @param size The number of products per page.\n   */\n  getAllProductsPaginated(page: number, size: number): void {\n    this.productService.getAllProductsPaginated(page, size).subscribe({\n      next: (response) => {\n        this.products = response.content;\n        this.totalPages = response.totalPages;\n        this.totalElements = response.totalElements;\n        this.pageSize = response.pageSize;\n\n        // Crear el array de páginas a mostrar\n        this.pages = Array.from({ length: this.totalPages }, (_, index) => index);\n      }, error: (err) => {\n        this.toastrService.error('Error, could not retrieve the product list  ' + err.error, 'Error')\n      }\n    });\n  }\n\n  /**\n   * Changes the current page.\n   * @param page The target page index.\n   */\n  changePage(page: number): void {\n    if (page >= 0 && page  {\n      if (result.isConfirmed) {\n        this.productService.deleteProduct(productId).subscribe({\n          next: () => {\n            this.toastrService.success(`Product deleted successfully`, 'Success');\n            this.getAllProductsPaginated(this.currentPage, this.pageSize);\n          }, error: (error) => {\n            const errorMessage = error?.error?.message || 'An unexpected error occurred.';\n            this.toastrService.error(`Error while deleting the product: ${errorMessage}`, 'Error');\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Navigates to the product edit page.\n   * @param productId The ID of the product to edit.\n   */\n  editProductDetails(productId: number) {\n    this.router.navigate(['/editProduct', productId]);\n  }\n\n  /**\n   * Displays images of a selected product.\n   * @param product The product whose images will be displayed.\n   */\n  public viewImages(product: Product) {\n    if (!product.productImages || product.productImages.length === 0) {\n      this.toastrService.warning('No images available for this product', 'Warning');\n      return;\n    }\n  \n    // Construir la URL completa de las imágenes\n    this.selectedImages = product.productImages.map(img => `data:${img.type};base64,${img.picByte}`); \n    this.showImageModal = true;\n  }\n  \n  /** Generates and downloads a PDF file of the product list. */\n  public generatePdf(): void {\n    this.isGeneratingFile = true;\n    this.fileService.getPdf().pipe(\n      finalize(() => {\n        setTimeout(() => {\n          this.isGeneratingFile = false;\n        }, 1000);\n      })\n    ).subscribe({\n      next: (data: Blob) => {\n        const blob = new Blob([data], { type: 'application/pdf' });\n        saveAs(blob, 'product-list.pdf'); // Descargar el archivo\n      },\n      error: (err) => {\n        console.error('Error generating PDF:', err);\n        this.toastrService.error('Error generating PDF', 'Error');\n      }\n    });\n  }\n\n /** Generates and downloads a CSV file of the product list. */\n  public generateCsv(): void {\n    this.isGeneratingFile = true;\n    this.fileService.getCsv().pipe(\n      finalize(() => {\n        setTimeout(() => {\n          this.isGeneratingFile = false;\n        }, 1000);\n      })\n    ).subscribe({\n      next: (data) => {\n        const blob = new Blob([data], { type: 'text/csv' });\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.download = 'product_list.csv';\n        link.click();\n        URL.revokeObjectURL(link.href);\n      }, error: (err) => {\n        console.error('Error generating CSV:', err);\n        this.toastrService.error('Error generating CSV', 'Error');\n      }\n    });\n  }\n\n   /** Generates and downloads an Excel file of the product list. */\n  public generateExcel(): void {\n    this.isGeneratingFile = true;\n    this.fileService.getExcel().pipe(\n      finalize(() => {\n        setTimeout(() => {\n          this.isGeneratingFile = false;\n        }, 1000);\n      })\n    ).subscribe({\n      next: (data) => {\n        const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.download = 'product_list.xlsx';\n        link.click();\n        URL.revokeObjectURL(link.href);\n      }, \n      error: (err) => {\n        console.error('Error generating Excel:', err);\n        this.toastrService.error('Error generating Excel', 'Error');\n      }\n    });\n  }\n\n  /**\n   * Searches for products based on the user's input.\n   * @param searchKey The search keyword.\n   */\n  searchProducts(searchKey: string): void {\n    this.searchKey = searchKey;\n    if (this.searchKey.trim() === '') {\n      this.getAllProductsPaginated(this.currentPage, this.pageSize);\n    } else {\n      this.productService.searchProducts(this.searchKey, this.currentPage, this.pageSize)\n        .subscribe({\n          next: (response) => {\n            this.products = response.content;\n            this.totalPages = response.totalPages;\n            this.totalElements = response.totalElements;\n            this.pageSize = response.pageSize;\n\n            // Crear el array de páginas a mostrar\n            this.pages = Array.from({ length: this.totalPages }, (_, index) => index);\n          }, error: (err) => {\n            this.toastrService.error('An unexpected error occurred: ' + err.error, 'Error')\n          }\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        Product List\n    \n\n    \n    \n    \n\n    \n\n\n    \n      \n        Generate PDF\n      \n      \n        Generate CSV\n      \n      \n        Generate EXCEL\n      \n    \n    \n\n     0; else noProducts\">\n      \n\n        \n          \n            \n              ID\n              Name\n              Description\n              Discounted price\n              Actual price\n              Images\n              Actions\n\n            \n          \n          \n            \n              {{ product.productId }}\n              {{ product.productName }}\n              \n                {{ product.productDescription.length > 100 ? (product.productDescription | slice: 0:100) + '...' : product.productDescription }}\n              \n              {{ product.productDiscountedPrice | currency:'EUR' }}\n              {{ product.productActualPrice | currency:'EUR' }}\n              \n              \n                \n                \n              \n            \n          \n        \n      \n      \n      \n      \n        \n          \n            \n            \n              \n                Previous\n              \n            \n\n            \n            \n              \n                {{ page + 1 }}\n              \n            \n\n            \n            \n              \n                Next\n              \n            \n          \n        \n      \n\n    \n  \n    \n      No products available.\n    \n    \n\n    \n     \n    \n    \n        \n        \n            \n            Product Images\n            \n            \n            \n            \n                \n                \n                \n            \n            \n        \n        \n    \n  \n  \n    \n\n    \n                \n                    ./show-product-details.component.css\n                \n                \n@media (max-width: 576px) {  \n    table {\n        width: 100% !important;\n    }\n}\n  \n@media (min-width: 576px) {\n\n    th, td {\n        padding-left: 20px;\n        padding-top: 15px;\n        padding-bottom: 15px;\n    }\n}\n\nth > div {\n   min-width: max-content;\n}\n\n.active>.page-link, .page-link.active {\n    border-color: var(--bs-pagination-active-border-color);\n}\n\n.disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    background-color: grey;\n    border: 1px solid #ffffff27\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Product List                                      Generate PDF                    Generate CSV                    Generate EXCEL                   0; else noProducts\">                                                  ID              Name              Description              Discounted price              Actual price              Images              Actions                                                          {{ product.productId }}              {{ product.productName }}                              {{ product.productDescription.length > 100 ? (product.productDescription | slice: 0:100) + \\'...\\' : product.productDescription }}                            {{ product.productDiscountedPrice | currency:\\'EUR\\' }}              {{ product.productActualPrice | currency:\\'EUR\\' }}                                                                                                                                                                                                        Previous                                                                                {{ page + 1 }}                                                                                Next                                                                  No products available.                                                                 Product Images                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShowProductDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/spinner/spinner.component.ts\n\n\n\n    \n        Description\n    \n    \n        Represents a loading spinner component that can be used to indicate\na loading state in the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spinner\n            \n\n\n\n            \n                styleUrls\n                ./spinner.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/spinner/spinner.component.ts:18\n                            \n                        \n                \n                    \n                        Determines whether the spinner should be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Processing file'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/spinner/spinner.component.ts:24\n                            \n                        \n                \n                    \n                        The text message displayed alongside the spinner.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * Represents a loading spinner component that can be used to indicate \n * a loading state in the application.\n */\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent {\n  \n  /**\n   * Determines whether the spinner should be displayed.\n   * @default false\n   */\n  @Input() show: boolean = false;\n\n  /**\n   * The text message displayed alongside the spinner.\n   * @default 'Processing file'\n   */\n  @Input() text: string = 'Processing file';\n}\n\n    \n\n    \n        \n    \n    {{ text }}\n\n    \n\n    \n                \n                    ./spinner.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ text }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TopSelling.html":{"url":"interfaces/TopSelling.html","title":"interface - TopSelling","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TopSelling\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/top-selling.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            productName\n                                        \n                                \n                                \n                                        \n                                            totalSales\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalSales\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalSales:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TopSelling {\n\n    productId: number,\n    totalSales: number,\n    productName: string\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UrlPaypalResponse.html":{"url":"interfaces/UrlPaypalResponse.html","title":"interface - UrlPaypalResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UrlPaypalResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/url-paypal-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UrlPaypalResponse {\n    url: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            userFirstName\n                                        \n                                \n                                \n                                        \n                                            userLastName\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                                \n                                        \n                                            userPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userFirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userFirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userLastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userLastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"./role\";\n\nexport interface User {\n\n    userName: string,\n    userFirstName: string,\n    userLastName: string,\n    userPassword: string,\n    role?: Role[]\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAuthService.html":{"url":"injectables/UserAuthService.html","title":"injectable - UserAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getRoles\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                isAdmin\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                isUser\n                            \n                            \n                                    Public\n                                setRoles\n                            \n                            \n                                    Public\n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-auth.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Clears all stored authentication data from local storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Retrieves stored user roles from local storage.\n\n\n                        \n                            Returns :     string[]\n\n                        \n                            \n                                An array of role names as strings.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Retrieves the stored JWT token from local storage.\nRemoves the \"Bearer \" prefix if present.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The JWT token as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Checks if the user has an admin role.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if the user has the 'AdminRole', otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Checks if a user is logged in by verifying stored roles and token.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if the user is logged in, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Checks if the user has a standard user role.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if the user has the 'UserRole', otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    setRoles(roles: Role[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth.service.ts:15\n                        \n                    \n\n\n            \n                \n                        Stores user roles in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                roles\n                                            \n                                                            Role[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn array of user roles.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    setToken(jwtToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-auth.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Stores the JWT token in local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                jwtToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe authentication token.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Role } from '../interfaces/role';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthService {\n\n  constructor() { }\n\n  /**\n   * Stores user roles in local storage.\n   * @param roles - An array of user roles.\n   */\n  public setRoles(roles: Role []) {\n    localStorage.setItem(\"roles\", JSON.stringify(roles));\n  }\n\n  /**\n   * Retrieves stored user roles from local storage.\n   * @returns An array of role names as strings.\n   */\n  public getRoles(): string[] {\n    const roles = localStorage.getItem(\"roles\");\n    return roles \n      ? JSON.parse(roles).map((role: { roleName: string, roleDescription: string }) => role.roleName) \n      : [];\n  }\n\n  /**\n   * Stores the JWT token in local storage.\n   * @param jwtToken - The authentication token.\n   */\n  public setToken(jwtToken: string) {\n    localStorage.setItem(\"jwtToken\", jwtToken);\n  }\n\n  /**\n   * Retrieves the stored JWT token from local storage.\n   * Removes the \"Bearer \" prefix if present.\n   * @returns The JWT token as a string.\n   */\n  public getToken(): string {\n    let token = localStorage.getItem(\"jwtToken\") || \"\";\n    return token.replace(\"Bearer \", \"\");  \n  } \n\n  /**\n   * Clears all stored authentication data from local storage.\n   */\n  public clear() {\n    localStorage.clear();\n  }\n\n  /**\n   * Checks if a user is logged in by verifying stored roles and token.\n   * @returns `true` if the user is logged in, otherwise `false`.\n   */\n  public isLoggedIn(): boolean {\n    const roles = localStorage.getItem(\"roles\");\n    const token = localStorage.getItem(\"jwtToken\");\n  \n    return roles !== null && roles !== \"\" && token !== null && token !== \"\";\n  }\n\n  /**\n   * Checks if the user has an admin role.\n   * @returns `true` if the user has the 'AdminRole', otherwise `false`.\n   */\n  public isAdmin(): boolean {\n    const roles: string [] = this.getRoles();\n    return roles.includes('AdminRole'); \n  }\n\n  /**\n   * Checks if the user has a standard user role.\n   * @returns `true` if the user has the 'UserRole', otherwise `false`.\n   */\n  public isUser(): boolean {\n    const roles: string [] = this.getRoles();\n    return roles.includes('UserRole'); \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user/user.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that displays user-related information and charts for sales and orders.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user\n            \n\n\n\n            \n                styleUrls\n                ./user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartDataOrdersByStatus\n                            \n                            \n                                chartDataSalesPerMonth\n                            \n                            \n                                chartOptions\n                            \n                            \n                                last4Orders\n                            \n                            \n                                ordersData\n                            \n                            \n                                salesData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setupCharts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user/user.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user/user.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupCharts\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupCharts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user/user.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Configures the data for sales and orders charts.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartDataOrdersByStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartData\n\n                    \n                \n                \n                    \n                        Default value : { labels: [], datasets: [] }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/user.component.ts:30\n                        \n                    \n\n            \n                \n                    Chart data for orders by status\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartDataSalesPerMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartData\n\n                    \n                \n                \n                    \n                        Default value : { labels: [], datasets: [] }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/user.component.ts:27\n                        \n                    \n\n            \n                \n                    Chart data for sales per month\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    responsive: true,\n    plugins: {\n      legend: { display: false },\n    },\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/user.component.ts:33\n                        \n                    \n\n            \n                \n                    Chart configuration options\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last4Orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrderAndProductDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/user.component.ts:18\n                        \n                    \n\n            \n                \n                    Last 4 user orders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SalesData | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/user.component.ts:24\n                        \n                    \n\n            \n                \n                    Order data by status\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salesData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SalesData | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user/user.component.ts:21\n                        \n                    \n\n            \n                \n                    Sales data per month\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChartData, ChartOptions } from 'chart.js';\nimport { OrderAndProductDto } from 'src/app/interfaces/order-and-product-dto';\nimport { SalesData } from 'src/app/interfaces/sales-data';\n\n/**\n * Component that displays user-related information and charts for sales and orders.\n */\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css'],\n})\nexport class UserComponent implements OnInit {\n\n  /** Last 4 user orders */\n  last4Orders: OrderAndProductDto[] = [];\n\n  /** Sales data per month */\n  salesData: SalesData | null = null;\n\n  /** Order data by status */\n  ordersData: SalesData | null = null;\n\n  /** Chart data for sales per month */\n  chartDataSalesPerMonth: ChartData = { labels: [], datasets: [] };\n\n  /** Chart data for orders by status */\n  chartDataOrdersByStatus: ChartData = { labels: [], datasets: [] };\n\n  /** Chart configuration options */\n  chartOptions: ChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: { display: false },\n    },\n  };\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    // Obtén los datos del resolver\n    const resolvedData = this.route.snapshot.data['dashboardData'];\n\n    this.last4Orders = resolvedData.last4Orders;\n    this.salesData = resolvedData.salesData;\n    this.ordersData = resolvedData.ordersData;\n\n    // Configura los gráficos\n    this.setupCharts();\n  }\n\n  /**\n   * Configures the data for sales and orders charts.\n   */\n  private setupCharts(): void {\n    if (this.salesData) {\n      this.chartDataSalesPerMonth = {\n        labels: this.salesData.labels,\n        datasets: [\n          {\n            label: 'Orders per Month',\n            data: this.salesData.values,\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 2,\n          },\n        ],\n      };\n    }\n\n    if (this.ordersData) {\n      this.chartDataOrdersByStatus = {\n        labels: this.ordersData.labels,\n        datasets: [\n          {\n            label: 'Orders by status',\n            data: this.ordersData.values,\n            backgroundColor: ['#36A2EB', '#FF6384'],\n            borderColor: ['#36A2EB', '#FF6384'],\n            borderWidth: 2,\n          },\n        ],\n      };\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            \n                User Dashboard\n            \n        \n        \n        \n            \n                Sales per month\n                \n            \n\n            \n                My Orders\n                \n                \n            \n        \n\n        \n            Last orders\n            \n                \n                    \n                        ID\n                        Order date\n                        Status\n                        Product Name\n                        Amount\n                        Actual price\n                        Discounted price\n                    \n                \n                \n                    \n                        {{ order.orderId }}\n                        {{ order.orderDate | date: 'dd/MM/yyyy HH:mm' }}\n                        {{ order.orderStatus }}\n                        {{ order.productName }}\n                        1 \n                        {{ order.productActualPrice | currency }}\n                        {{ order.productDiscountedPrice | currency }}\n                    \n            \n                \n            \n        \n\n    \n\n\n    \n\n    \n                \n                    ./user.component.css\n                \n                #ordersChart {\n    padding: 0 300px;\n}\n\n#ordersChart canvas{\n    padding-top: 0.7em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        User Dashboard                                                                Sales per month                                                        My Orders                                                                        Last orders                                                                        ID                        Order date                        Status                        Product Name                        Amount                        Actual price                        Discounted price                                                                                                {{ order.orderId }}                        {{ order.orderDate | date: \\'dd/MM/yyyy HH:mm\\' }}                        {{ order.orderStatus }}                        {{ order.productName }}                        1                         {{ order.productActualPrice | currency }}                        {{ order.productDiscountedPrice | currency }}                                                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuyProductComponent', 'selector': 'app-buy-product'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForbiddenComponent', 'selector': 'app-forbidden'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyOrdersComponent', 'selector': 'app-my-orders'},{'name': 'OrderConfirmationComponent', 'selector': 'app-order-confirmation'},{'name': 'OrderErrorComponent', 'selector': 'app-order-error'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'ProductViewDetailsComponent', 'selector': 'app-product-view-details'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SaveProductComponent', 'selector': 'app-add-new-product'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'ShowProductDetailsComponent', 'selector': 'app-show-product-details'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                roleMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, userAuthService: UserAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuthService\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginData: LoginRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Sends login credentials to the authentication endpoint.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginData\n                                            \n                                                            LoginRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe login request payload containing username and password.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable containing the authentication response with a token and roles.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Sends a registration request to create a new user account.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user details required for registration.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable containing the registered user details.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        roleMatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    roleMatch(allowedRoles: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Checks if the user's roles match the allowed roles.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                allowedRoles\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn array of roles that are permitted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if all user roles are included in the allowed roles, otherwise false.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport { LoginRequest } from '../interfaces/login-request';\nimport { LoginResponse } from '../interfaces/login-response';\nimport { UserAuthService } from './user-auth.service';\nimport { User } from '../interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  apiURL: string = environment.apiURL;\n\n  constructor(\n    private httpClient: HttpClient,\n    private userAuthService: UserAuthService\n  ) { }\n\n  /**\n   * Sends login credentials to the authentication endpoint.\n   * @param loginData - The login request payload containing username and password.\n   * @returns An observable containing the authentication response with a token and roles.\n   */\n  public login(loginData: LoginRequest): Observable {\n    return this.httpClient.post(`${this.apiURL}/authenticate`, loginData, {headers: new HttpHeaders( {'No-Auth': 'True'} )});\n  }\n\n  /**\n   * Checks if the user's roles match the allowed roles.\n   * @param allowedRoles - An array of roles that are permitted.\n   * @returns `true` if all user roles are included in the allowed roles, otherwise `false`.\n   */\n  public roleMatch(allowedRoles: string[]): boolean {\n    const userRoles: string[] = this.userAuthService.getRoles() || [];\n    return userRoles.length > 0 && userRoles.every(role => allowedRoles.includes(role));\n  }\n\n  /**\n   * Sends a registration request to create a new user account.\n   * @param user - The user details required for registration.\n   * @returns An observable containing the registered user details.\n   */\n  public register(user: User): Observable {\n    return this.httpClient.post(`${this.apiURL}/user/register`, user, {headers: new HttpHeaders( {'No-Auth': 'True'} )});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/auth/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/components/buy-product/buy-product.component.ts\n            \n            component\n            BuyProductComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/components/cart/cart.component.ts\n            \n            component\n            CartComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/components/forbidden/forbidden.component.ts\n            \n            component\n            ForbiddenComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/components/my-orders/my-orders.component.ts\n            \n            component\n            MyOrdersComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/components/order-confirmation/order-confirmation.component.ts\n            \n            component\n            OrderConfirmationComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/components/order-error/order-error.component.ts\n            \n            component\n            OrderErrorComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/orders/orders.component.ts\n            \n            component\n            OrdersComponent\n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                src/app/components/product-view-details/product-view-details.component.ts\n            \n            component\n            ProductViewDetailsComponent\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/components/save-product/save-product.component.ts\n            \n            component\n            SaveProductComponent\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                src/app/components/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/components/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/components/shared/search-bar/search-bar.component.ts\n            \n            component\n            SearchBarComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/shared/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/show-product-details/show-product-details.component.ts\n            \n            component\n            ShowProductDetailsComponent\n            \n                91 %\n                (21/23)\n            \n        \n        \n            \n                \n                src/app/components/user/user.component.ts\n            \n            component\n            UserComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/cart.ts\n            \n            interface\n            Cart\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/data-payment.ts\n            \n            interface\n            DataPayment\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/file-handle-model.ts\n            \n            interface\n            FileHandle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/image.ts\n            \n            interface\n            Image\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/login-request.ts\n            \n            interface\n            LoginRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/login-response.ts\n            \n            interface\n            LoginResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/my-order-details.ts\n            \n            interface\n            MyOrderDetails\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/order-and-product-dto.ts\n            \n            interface\n            OrderAndProductDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/order-details-model.ts\n            \n            interface\n            OrderDetailsModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/order-product-quantity.ts\n            \n            interface\n            OrderProductQuantity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/product.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/role.ts\n            \n            interface\n            Role\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/sales-data.ts\n            \n            interface\n            SalesData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/top-selling.ts\n            \n            interface\n            TopSelling\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/url-paypal-response.ts\n            \n            interface\n            UrlPaypalResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/resolvers/buy-product-resolver.ts\n            \n            variable\n            buyProductResolver\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/resolvers/dashboard-admin.resolver.ts\n            \n            variable\n            dashboardAdminResolver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/resolvers/dashboard-user.resolver.ts\n            \n            variable\n            dashboardUserResolver\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/resolvers/product.resolver.ts\n            \n            variable\n            productResolver\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/dashboard.service.ts\n            \n            injectable\n            DashboardService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/services/file.service.ts\n            \n            injectable\n            FileService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/services/image.service.ts\n            \n            injectable\n            ImageServiceService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/services/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/product.service.ts\n            \n            injectable\n            ProductService\n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                src/app/services/user-auth.service.ts\n            \n            injectable\n            UserAuthService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.0\n        \n            @angular/cdk : ^16.2.14\n        \n            @angular/common : ^16.2.0\n        \n            @angular/compiler : ^16.2.0\n        \n            @angular/core : ^16.2.0\n        \n            @angular/forms : ^16.2.0\n        \n            @angular/material : ^16.2.14\n        \n            @angular/platform-browser : ^16.2.0\n        \n            @angular/platform-browser-dynamic : ^16.2.0\n        \n            @angular/router : ^16.2.0\n        \n            @fortawesome/fontawesome-free : ^6.7.2\n        \n            bootstrap : ^5.3.3\n        \n            chart.js : ^4.4.8\n        \n            file-saver : ^2.0.5\n        \n            jwt-decode : ^4.0.0\n        \n            ng2-charts : ^4.1.1\n        \n            ngx-toastr : ^19.0.0\n        \n            rxjs : ~7.8.0\n        \n            sweetalert2 : ^11.6.13\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEcommerce\nThis project was generated with Angular CLI version 16.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBuyProductComponent\n\nBuyProductComponent\n\nAppModule -->\n\nBuyProductComponent->AppModule\n\n\n\n\n\nCartComponent\n\nCartComponent\n\nAppModule -->\n\nCartComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nForbiddenComponent\n\nForbiddenComponent\n\nAppModule -->\n\nForbiddenComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMyOrdersComponent\n\nMyOrdersComponent\n\nAppModule -->\n\nMyOrdersComponent->AppModule\n\n\n\n\n\nOrderConfirmationComponent\n\nOrderConfirmationComponent\n\nAppModule -->\n\nOrderConfirmationComponent->AppModule\n\n\n\n\n\nOrderErrorComponent\n\nOrderErrorComponent\n\nAppModule -->\n\nOrderErrorComponent->AppModule\n\n\n\n\n\nOrdersComponent\n\nOrdersComponent\n\nAppModule -->\n\nOrdersComponent->AppModule\n\n\n\n\n\nProductViewDetailsComponent\n\nProductViewDetailsComponent\n\nAppModule -->\n\nProductViewDetailsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSaveProductComponent\n\nSaveProductComponent\n\nAppModule -->\n\nSaveProductComponent->AppModule\n\n\n\n\n\nSearchBarComponent\n\nSearchBarComponent\n\nAppModule -->\n\nSearchBarComponent->AppModule\n\n\n\n\n\nShowProductDetailsComponent\n\nShowProductDetailsComponent\n\nAppModule -->\n\nShowProductDetailsComponent->AppModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nAppModule -->\n\nSpinnerComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        15 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            buyProductResolver   (src/.../buy-product-resolver.ts)\n                        \n                        \n                            dashboardAdminResolver   (src/.../dashboard-admin.resolver.ts)\n                        \n                        \n                            dashboardUserResolver   (src/.../dashboard-user.resolver.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            productResolver   (src/.../product.resolver.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const userAuthService = inject(UserAuthService);\n  const router = inject(Router);\n  const userService = inject(UserService);\n\n  const roles = route.data[\"roles\"] ?? [];\n\n  // Si la ruta no define roles, cualquier usuario autenticado puede acceder\n  if (roles.length === 0) {\n    return true;\n  }\n  \n  if (!userAuthService.getToken()) {\n    return router.createUrlTree(['/login']);\n  }\n\n  // Verificamos si el usuario tiene alguno de los roles requeridos\n  const match = userService.roleMatch(roles);\n  return match ? true : router.createUrlTree(['/forbidden']);\n}\n                    \n                \n\n            \n                \n                    Authorization guard that restricts access to routes based on user authentication and roles.\n\nIf the route does not specify required roles, any authenticated user can access it.\nIf the user is not authenticated, they are redirected to the login page.\nIf the user lacks the required roles, they are redirected to the forbidden page.\n\n\n                \n            \n\n        \n    \n\n    src/app/resolvers/buy-product-resolver.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buyProductResolver\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResolveFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const productService = inject(ProductService);\n  const toastrService = inject(ToastrService);\n\n  // Obtener parámetros de los query params\n  const isSingleProductCheckout = route.queryParamMap.get('isSingleProductCheckout') === 'true';\n  const productId = Number(route.queryParamMap.get('id'));\n\n  /**\n   * Calls the product service to fetch product details.\n   * Logs the retrieved data and handles errors with a toast notification.\n   */\n  return productService.getProductDetails(isSingleProductCheckout, productId).pipe(\n    tap((data) => console.log('Datos obtenidos en el resolver:', data)),\n\n    catchError((error) => {\n      console.error('Error loading product details', error);\n      toastrService.error('Failed to load product data.', 'Error');\n      return of(null); \n    })\n  );\n}\n                    \n                \n\n            \n                \n                    Resolver for fetching product details before navigating to the buy page.\nIt retrieves product data based on query parameters.\n\n                \n            \n\n        \n    \n\n    src/app/resolvers/dashboard-admin.resolver.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dashboardAdminResolver\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResolveFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const dashboardService = inject(DashboardService); // Inyecta el servicio\n\n  // Usa forkJoin para realizar las llamadas en paralelo\n  return forkJoin({\n    ordersData: dashboardService.getOrdersByOrderStatus(),\n    salesData: dashboardService.getSalesPerMonthAdmin(),\n    topSelling: dashboardService.getTopSellingProducts()\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/app/resolvers/dashboard-user.resolver.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dashboardUserResolver\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResolveFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const dashboardService = inject(DashboardService); // Inyecta el servicio\n\n \n  /**\n   * Calls the dashboard service to fetch required data.\n   * Uses `forkJoin` to perform multiple API calls in parallel.\n   */\n  return forkJoin({\n    last4Orders: dashboardService.getLastFourOrders(),\n    salesData: dashboardService.getSalesPerMonth(),\n    ordersData: dashboardService.getOrdersByOrderStatus(),\n  });\n}\n                    \n                \n\n            \n                \n                    Resolver for fetching dashboard data before navigating to the user dashboard page.\nIt retrieves the last four orders, sales data per month, and order status data.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiURL: 'http://localhost:8081/api/v1',\n    \n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n    src/app/resolvers/product.resolver.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        productResolver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResolveFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const productService = inject(ProductService);\n  const toastrService = inject(ToastrService);\n  const productId = Number(route.paramMap.get('productId'));\n\n  if (!productId) {\n    toastrService.error('Product ID is missing in the route.', 'Error');\n    console.error('Product ID is missing.');\n    return of(null);\n  }\n\n  /**\n   * Calls the product service to fetch product details.\n   * Displays an error message if the request fails.\n   */\n  return productService.getProductById(productId).pipe(\n    catchError((error) => {\n      toastrService.error('Failed to load product data.', 'Error');\n      console.error('Error al cargar el producto:', error);\n      return of(null);\n    })\n  );\n}\n                    \n                \n\n            \n                \n                    Resolver for fetching a product's details before navigating to the product page.\nRetrieves product data based on the product ID from the route parameters.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
